# This file was @generated by crate2nix 0.9.0-alpha.1 with the command:
#   "generate" "-f" "../Cargo.toml"
# See https://github.com/kolloch/crate2nix for more info.

{ nixpkgs ? <nixpkgs>, pkgs ? import nixpkgs { config = { }; }, lib ? pkgs.lib
, stdenv ? pkgs.stdenv, buildRustCrate ? pkgs.buildRustCrate
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [
  "default"
]
# If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
  # Whether to perform release builds: longer compile times, faster binaries.
, release ? true
  # Additional crate2nix configuration if it exists.
, crateConfig ? if builtins.pathExists ./crate-config.nix then
  pkgs.callPackage ./crate-config.nix { }
else
  { } }:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "veloren-chat-cli" = rec {
      packageId = "veloren-chat-cli";
      build =
        internal.buildRustCrateWithFeatures { packageId = "veloren-chat-cli"; };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "veloren-client" = rec {
      packageId = "veloren-client";
      build =
        internal.buildRustCrateWithFeatures { packageId = "veloren-client"; };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "veloren-common" = rec {
      packageId = "veloren-common";
      build =
        internal.buildRustCrateWithFeatures { packageId = "veloren-common"; };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "veloren-server" = rec {
      packageId = "veloren-server";
      build =
        internal.buildRustCrateWithFeatures { packageId = "veloren-server"; };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "veloren-server-cli" = rec {
      packageId = "veloren-server-cli";
      build = internal.buildRustCrateWithFeatures {
        packageId = "veloren-server-cli";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "veloren-voxygen" = rec {
      packageId = "veloren-voxygen";
      build =
        internal.buildRustCrateWithFeatures { packageId = "veloren-voxygen"; };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "veloren-voxygen-anim" = rec {
      packageId = "veloren-voxygen-anim";
      build = internal.buildRustCrateWithFeatures {
        packageId = "veloren-voxygen-anim";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "veloren-world" = rec {
      packageId = "veloren-world";
      build =
        internal.buildRustCrateWithFeatures { packageId = "veloren-world"; };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "veloren_network" = rec {
      packageId = "veloren_network";
      build =
        internal.buildRustCrateWithFeatures { packageId = "veloren_network"; };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };

  # A derivation that joins the outputs of all workspace members together.
  allWorkspaceMembers = pkgs.symlinkJoin {
    name = "all-workspace-members";
    paths = let members = builtins.attrValues workspaceMembers;
    in builtins.map (m: m.build) members;
  };

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "addr2line" = rec {
        crateName = "addr2line";
        version = "0.12.1";
        edition = "2015";
        sha256 = "0hq5gi2hj1mdm6yjy0a9w8525xyp194p4zn9wxhkr16wvawhd654";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Philip Craig <philipjcraig@gmail.com>"
          "Jon Gjengset <jon@thesquareplanet.com>"
          "Noah Bergbauer <noah.bergbauer@tum.de>"
        ];
        dependencies = [{
          name = "gimli";
          packageId = "gimli";
          usesDefaultFeatures = false;
          features = [ "read" ];
        }];
        features = {
          "default" = [
            "rustc-demangle"
            "cpp_demangle"
            "std-object"
            "fallible-iterator"
            "smallvec"
          ];
          "std" = [ "gimli/std" ];
          "std-object" = [
            "std"
            "object"
            "object/std"
            "object/compression"
            "gimli/endian-reader"
          ];
        };
      };
      "adler32" = rec {
        crateName = "adler32";
        version = "1.0.4";
        edition = "2015";
        sha256 = "1hnan4fgmnidgn2k84hh2i67c3wp2c5iwd5hs61yi7gwwx1p6bjx";
        authors = [ "Remi Rampin <remirampin@gmail.com>" ];

      };
      "ahash" = rec {
        crateName = "ahash";
        version = "0.3.8";
        edition = "2018";
        sha256 = "05qjnr0wccch0gg2kghg0xyh8qd5gfqd15q9dd6r1lamcs375zg8";
        authors = [ "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>" ];
        dependencies = [{
          name = "const-random";
          packageId = "const-random";
          optional = true;
        }];
        features = {
          "compile-time-rng" = [ "const-random" ];
          "default" = [ "compile-time-rng" "std" ];
        };
        resolvedDefaultFeatures =
          [ "compile-time-rng" "const-random" "default" "std" ];
      };
      "aho-corasick" = rec {
        crateName = "aho-corasick";
        version = "0.7.10";
        edition = "2015";
        sha256 = "1nka9509afjgal6lpymn8w2lq11dmjwxs8yjcmzys966if5l05l7";
        libName = "aho_corasick";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        dependencies = [{
          name = "memchr";
          packageId = "memchr";
          usesDefaultFeatures = false;
        }];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "alsa-sys" = rec {
        crateName = "alsa-sys";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0n3xr2msblmqlsx313b2y2v9hamqh0hp43v23fp1b3znkszwpvdh";
        authors = [
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
          "David Henningsson <diwic@ubuntu.com>"
        ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
        }];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];

      };
      "andrew" = rec {
        crateName = "andrew";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0pmklwcwy8g1jras46fz8xcny779zfqpg4riksrbdhkjk3w0jzwv";
        authors = [ "Lucas Timmins <timmins.s.lucas@gmail.com>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "line_drawing";
            packageId = "line_drawing";
          }
          {
            name = "rusttype";
            packageId = "rusttype 0.7.9";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
          {
            name = "xdg";
            packageId = "xdg";
          }
          {
            name = "xml-rs";
            packageId = "xml-rs";
          }
        ];

      };
      "android_glue" = rec {
        crateName = "android_glue";
        version = "0.2.3";
        edition = "2015";
        sha256 = "01y495x4i9vqkwmklwn2xk7sqg666az2axjcpkr4iwngdwi48100";
        authors = [ "Pierre Krieger <pierre.krieger1708@gmail.com>" ];

      };
      "ansi_term" = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "16wpvrghvd0353584i1idnsgm0r3vchg8fyrm0x8ayv1rgvbljgf";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [{
          name = "winapi";
          packageId = "winapi 0.3.8";
          target = { target, features }: (target."os" == "windows");
          features = [ "errhandlingapi" "consoleapi" "processenv" ];
        }];

      };
      "anymap" = rec {
        crateName = "anymap";
        version = "0.12.1";
        edition = "2015";
        sha256 = "0i23vv38i22aazp5z2hz0a44b943b6w5121kwwnpq1brpm1l559k";
        authors = [ "Chris Morgan <me@chrismorgan.info>" ];
        features = { };
      };
      "approx" = rec {
        crateName = "approx";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1hx580xjdxl3766js9b49rnbnmr8gw8c060809l43k9f0xshprph";
        authors = [ "Brendan Zabarauskas <bjzaba@yahoo.com.au>" ];
        dependencies = [{
          name = "num-traits";
          packageId = "num-traits";
          usesDefaultFeatures = false;
        }];
        features = { "default" = [ "std" ]; };
      };
      "arr_macro" = rec {
        crateName = "arr_macro";
        version = "0.1.3";
        edition = "2018";
        sha256 = "199086q8zva66lbg9bpz6fa67s81ra7yfa8148cwy1w7lkymn43a";
        authors = [ "Josh Mcguigan" ];
        dependencies = [
          {
            name = "arr_macro_impl";
            packageId = "arr_macro_impl";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
        ];

      };
      "arr_macro_impl" = rec {
        crateName = "arr_macro_impl";
        version = "0.1.3";
        edition = "2018";
        sha256 = "1lbjilz3pvwav72dfkcbz99rsq7m04xbdpqh8g3yvx3jsn5wf286";
        procMacro = true;
        authors = [ "Josh Mcguigan" ];
        dependencies = [
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "full" ];
          }
        ];

      };
      "arrayref" = rec {
        crateName = "arrayref";
        version = "0.3.6";
        edition = "2015";
        sha256 = "0i6m1l3f73i0lf0cjdf5rh3xpvxydyhfbakq7xx7bkrp5qajgid4";
        authors = [ "David Roundy <roundyd@physics.oregonstate.edu>" ];

      };
      "arrayvec 0.4.12" = rec {
        crateName = "arrayvec";
        version = "0.4.12";
        edition = "2015";
        sha256 = "1fdiv5m627gh6flp4mpmi1mh647imm9x423licsr11psz97d97yd";
        authors = [ "bluss" ];
        dependencies = [{
          name = "nodrop";
          packageId = "nodrop";
          usesDefaultFeatures = false;
        }];
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
      "arrayvec 0.5.1" = rec {
        crateName = "arrayvec";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1f5mca8kiiwhvhxd1mbnq68j6v6rk139sch567zwwzl6hs37vxyg";
        authors = [ "bluss" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ascii" = rec {
        crateName = "ascii";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0281gc828q4j692gb66jfdr5k16gyszgqflylh0pp30rllv63xdv";
        authors = [
          "Thomas Bahn <thomas@thomas-bahn.net>"
          "Torbjørn Birch Moltu <t.b.moltu@lyse.net>"
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "async-std" = rec {
        crateName = "async-std";
        version = "1.5.0";
        edition = "2018";
        sha256 = "0rxjhlhyvbrd8yd369vp0izr3g0cakvvdrc741vwvvk4xc0wp3jk";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
          "Contributors to async-std"
        ];
        dependencies = [
          {
            name = "async-task";
            packageId = "async-task";
            optional = true;
          }
          {
            name = "broadcaster";
            packageId = "broadcaster";
            optional = true;
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.4.2";
            optional = true;
          }
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
            optional = true;
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
            optional = true;
          }
          {
            name = "kv-log-macro";
            packageId = "kv-log-macro";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
            features = [ "kv_unstable" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "mio";
            packageId = "mio";
            optional = true;
          }
          {
            name = "mio-uds";
            packageId = "mio-uds";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
        ];
        features = {
          "attributes" = [ "async-attributes" ];
          "default" = [
            "std"
            "async-task"
            "crossbeam-channel"
            "crossbeam-deque"
            "futures-timer"
            "kv-log-macro"
            "log"
            "mio"
            "mio-uds"
            "num_cpus"
            "pin-project-lite"
          ];
          "docs" = [ "attributes" "unstable" "default" ];
          "std" = [
            "crossbeam-utils"
            "futures-core"
            "futures-io"
            "memchr"
            "once_cell"
            "pin-project-lite"
            "pin-utils"
            "slab"
          ];
          "unstable" = [ "std" "broadcaster" "futures-timer" ];
        };
        resolvedDefaultFeatures = [
          "async-task"
          "broadcaster"
          "crossbeam-channel"
          "crossbeam-deque"
          "crossbeam-utils"
          "default"
          "futures-core"
          "futures-io"
          "futures-timer"
          "kv-log-macro"
          "log"
          "memchr"
          "mio"
          "mio-uds"
          "num_cpus"
          "once_cell"
          "pin-project-lite"
          "pin-utils"
          "slab"
          "std"
          "unstable"
        ];
      };
      "async-task" = rec {
        crateName = "async-task";
        version = "1.3.1";
        edition = "2018";
        sha256 = "0p88087z43zvv924my16a17qd65kdlv1r59h80h73rvrn0bc1hha";
        authors = [ "Stjepan Glavina <stjepang@gmail.com>" ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "processthreadsapi" ];
          }
        ];

      };
      "atk-sys" = rec {
        crateName = "atk-sys";
        version = "0.6.0";
        edition = "2015";
        sha256 = "0fbgywh1wn9nzcwckfj4pw58425xf7m8446388qgvgzp44sj7p7q";
        libName = "atk_sys";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];
        features = {
          "v2_10" = [ "v2_9_4" ];
          "v2_12" = [ "v2_10" ];
          "v2_14" = [ "v2_12" ];
          "v2_7_90" = [ "v2_7_4" ];
          "v2_8" = [ "v2_7_90" ];
          "v2_9_3" = [ "v2_8" ];
          "v2_9_4" = [ "v2_9_3" ];
        };
      };
      "atom" = rec {
        crateName = "atom";
        version = "0.3.5";
        edition = "2015";
        sha256 = "1qig9fcdqf07mzzpkicm5wgxv0zpr28njdsqf708wxq27yf6k1iw";
        authors = [ "Colin Sherratt <colin.sherratt@gmail.com>" ];

      };
      "atty" = rec {
        crateName = "atty";
        version = "0.2.14";
        edition = "2015";
        sha256 = "1s7yslcs6a28c5vz7jwj63lkfgyx8mx99fdirlhi9lbhhzhrpcyr";
        authors = [ "softprops <d.tangren@gmail.com>" ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (target."os" == "hermit");
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features =
              [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];

      };
      "auth-common" = rec {
        crateName = "auth-common";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://gitlab.com/veloren/auth.git";
          rev = "223a4097f7ebc8d451936dccb5e6517194bbf086";
          sha256 = "1b0ipil3b7kxss5wi7ij51wncbww9cdr5nydrh1dwd787agykrai";
        };
        authors = [ "Acrimon <joel.wejdenstal@gmail.com>" ];
        dependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "uuid";
            packageId = "uuid";
            usesDefaultFeatures = false;
            features = [ "serde" "v4" ];
          }
        ];

      };
      "authc" = rec {
        crateName = "authc";
        version = "1.0.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://gitlab.com/veloren/auth.git";
          rev = "223a4097f7ebc8d451936dccb5e6517194bbf086";
          sha256 = "1b0ipil3b7kxss5wi7ij51wncbww9cdr5nydrh1dwd787agykrai";
        };
        authors = [ "Acrimon <joel.wejdenstal@gmail.com>" ];
        dependencies = [
          {
            name = "auth-common";
            packageId = "auth-common";
          }
          {
            name = "fxhash";
            packageId = "fxhash";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "rust-argon2";
            packageId = "rust-argon2 0.8.2";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "ureq";
            packageId = "ureq";
            usesDefaultFeatures = false;
            features = [ "tls" ];
          }
          {
            name = "uuid";
            packageId = "uuid";
            usesDefaultFeatures = false;
            features = [ "serde" "v4" ];
          }
        ];

      };
      "autocfg 0.1.7" = rec {
        crateName = "autocfg";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1chwgimpx5z7xbag7krr9d8asxfqbh683qhgl9kn3hxk2l0djj8x";
        authors = [ "Josh Stone <cuviper@gmail.com>" ];

      };
      "autocfg 1.0.0" = rec {
        crateName = "autocfg";
        version = "1.0.0";
        edition = "2015";
        sha256 = "17cv6pwb4q08s0ynpr4n8hv5299hcmhdgvdchzixfpw8y5qcgapq";
        authors = [ "Josh Stone <cuviper@gmail.com>" ];

      };
      "backtrace" = rec {
        crateName = "backtrace";
        version = "0.3.48";
        edition = "2018";
        sha256 = "0c61qxwclpiz4ba6mcfyix2s0xlvvlphaj77syvy7frai9fgiwhd";
        authors = [ "The Rust Project Developers" ];
        dependencies = [
          {
            name = "addr2line";
            packageId = "addr2line";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "object";
            packageId = "object";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "read_core" "elf" "macho" "pe" ];
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
        ];
        features = {
          "default" = [ "std" "gimli-symbolize" ];
          "gimli-symbolize" = [ "addr2line" "object" "std" ];
          "libbacktrace" = [ "backtrace-sys/backtrace-sys" ];
          "rustc-dep-of-std" = [
            "backtrace-sys/rustc-dep-of-std"
            "cfg-if/rustc-dep-of-std"
            "core"
            "compiler_builtins"
            "libc/rustc-dep-of-std"
            "rustc-demangle/rustc-dep-of-std"
          ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [
            "winapi/dbghelp"
            "winapi/handleapi"
            "winapi/libloaderapi"
            "winapi/memoryapi"
            "winapi/minwindef"
            "winapi/processthreadsapi"
            "winapi/synchapi"
            "winapi/winbase"
            "winapi/winnt"
          ];
        };
        resolvedDefaultFeatures =
          [ "addr2line" "default" "gimli-symbolize" "object" "std" ];
      };
      "base-x" = rec {
        crateName = "base-x";
        version = "0.2.6";
        edition = "2015";
        sha256 = "1hfy0wv7j5ynd73yk1vyr32pqa77rp15lkrc54f8ky9c6hcbc80v";
        authors = [ "Alex R. <alexei.rudenko@gmail.com>" ];

      };
      "base64 0.11.0" = rec {
        crateName = "base64";
        version = "0.11.0";
        edition = "2018";
        sha256 = "1iqmims6yvr6vwzyy54qd672zw29ipjj17p8klcr578c9ajpw6xl";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "base64 0.12.1" = rec {
        crateName = "base64";
        version = "0.12.1";
        edition = "2018";
        sha256 = "0hncd72kh8i0g1hw37xlxicf3961xlcvz5ss8qvrbv6ryyxcrlak";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bincode" = rec {
        crateName = "bincode";
        version = "1.2.1";
        edition = "2015";
        sha256 = "1gvxm3n67xv1874fwxmnlircdlphlk1hcw75ykrrnw9l2nky4lsp";
        authors = [
          "Ty Overby <ty@pre-alpha.com>"
          "Francesco Mazzoli <f@mazzo.li>"
          "David Tolnay <dtolnay@gmail.com>"
          "Daniel Griffen"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
          }
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        features = { };
      };
      "bindgen" = rec {
        crateName = "bindgen";
        version = "0.53.3";
        edition = "2015";
        crateBin = [ ];
        sha256 = "1rc9grfd25bk5b2acmqljhx55ndbzmh7w8b3x6q707cb4s6rfan7";
        authors = [
          "Jyun-Yan You <jyyou.tw@gmail.com>"
          "Emilio Cobos Álvarez <emilio@crisal.io>"
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "The Servo project developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cexpr";
            packageId = "cexpr";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "clang-sys";
            packageId = "clang-sys";
            features = [ "clang_6_0" ];
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "peeking_take_while";
            packageId = "peeking_take_while";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
            usesDefaultFeatures = false;
          }
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" "unicode" ];
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "shlex";
            packageId = "shlex";
          }
        ];
        devDependencies = [{
          name = "shlex";
          packageId = "shlex";
        }];
        features = {
          "default" = [ "logging" "clap" "runtime" "which-rustfmt" ];
          "logging" = [ "env_logger" "log" ];
          "runtime" = [ "clang-sys/runtime" ];
          "static" = [ "clang-sys/static" ];
          "which-rustfmt" = [ "which" ];
        };
        resolvedDefaultFeatures = [ "runtime" ];
      };
      "bitflags" = rec {
        crateName = "bitflags";
        version = "1.2.1";
        edition = "2015";
        sha256 = "14qnd5nq8p2almk79m4m8ydqhd413yaxsyjp5xd19g3mikzf47fg";
        authors = [ "The Rust Project Developers" ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "bitvec" = rec {
        crateName = "bitvec";
        version = "0.17.4";
        edition = "2018";
        sha256 = "0p3slijkjv8q64mdmagwhb1bdd33lgy1kq1wm9hlmzbisw8jy9j1";
        authors = [ "myrrlyn <self@myrrlyn.dev>" ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "radium";
            packageId = "radium";
          }
        ];
        features = {
          "default" = [ "atomic" "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "atomic" "default" "std" ];
      };
      "blake2b_simd" = rec {
        crateName = "blake2b_simd";
        version = "0.5.10";
        edition = "2018";
        sha256 = "12icvk8ixlivv3jv5nyrg01sajp4s279zb1kmif0nfja4ms2vyyq";
        authors = [ "Jack O'Connor" ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "block" = rec {
        crateName = "block";
        version = "0.1.6";
        edition = "2015";
        sha256 = "16k9jgll25pzsq14f244q22cdv0zb4bqacldg3kx6h89d7piz30d";
        authors = [ "Steven Sheldon" ];

      };
      "broadcaster" = rec {
        crateName = "broadcaster";
        version = "1.0.0";
        edition = "2018";
        sha256 = "11xx4v0y9fdajqrsrmdwi9xgwh89hypdmr3krwv5l18d3vi75jfr";
        authors = [ "leo60228 <iakornfeld@gmail.com>" ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            features = [ "sink" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            features = [ "sink" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];
        features = {
          "default" = [ "default-channels" "parking-lot" ];
          "default-channels" = [ "futures-channel" ];
          "parking-lot" = [ "parking_lot" ];
        };
        resolvedDefaultFeatures = [
          "default"
          "default-channels"
          "futures-channel"
          "parking-lot"
          "parking_lot"
        ];
      };
      "bstr" = rec {
        crateName = "bstr";
        version = "0.2.13";
        edition = "2015";
        sha256 = "0cd9gn35hb020r3zccmc2m710wavk2iyqn60j8aqgxqdnzywmb1i";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
          {
            name = "regex-automata";
            packageId = "regex-automata";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "unicode" ];
          "serde1" = [ "std" "serde1-nostd" "serde/std" ];
          "serde1-nostd" = [ "serde" ];
          "std" = [ "memchr/use_std" ];
          "unicode" = [ "lazy_static" "regex-automata" ];
        };
        resolvedDefaultFeatures = [
          "default"
          "lazy_static"
          "regex-automata"
          "serde"
          "serde1"
          "serde1-nostd"
          "std"
          "unicode"
        ];
      };
      "bumpalo" = rec {
        crateName = "bumpalo";
        version = "3.4.0";
        edition = "2018";
        sha256 = "082qig1vxlklb9qwkg3j4hpfxb4b5blm59ln21njfc2p01zhi31f";
        authors = [ "Nick Fitzgerald <fitzgen@gmail.com>" ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "byteorder 0.5.3" = rec {
        crateName = "byteorder";
        version = "0.5.3";
        edition = "2015";
        sha256 = "0ma8pkyz1jbglr29m1yzlc9ghmv6672nvsrn7zd0yn5jqs60xh8g";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "byteorder 1.3.4" = rec {
        crateName = "byteorder";
        version = "1.3.4";
        edition = "2015";
        sha256 = "1pkjfhgjnq898g1d38ygcfi0msg3m6756cwv0sgysj1d26p8mi08";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bytes" = rec {
        crateName = "bytes";
        version = "0.4.12";
        edition = "2015";
        sha256 = "0768a55q2fsqdjsvcv98ndg9dq7w2g44dvq1avhwpxrdzbydyvr0";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
          }
          {
            name = "either";
            packageId = "either";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
        ];
        features = { "i128" = [ "byteorder/i128" ]; };
        resolvedDefaultFeatures = [ "either" ];
      };
      "c_vec" = rec {
        crateName = "c_vec";
        version = "1.3.3";
        edition = "2015";
        sha256 = "0c3wgb15h97k6lzfm9qgkwk35ij2ad7w8fb5rbqvalyf3n8ii8zq";
        authors = [ "Guillaume Gomez <guillaume1.gomez@gmail.com>" ];

      };
      "cairo-rs" = rec {
        crateName = "cairo-rs";
        version = "0.4.1";
        edition = "2015";
        sha256 = "04qf5wh8rh18g9pcpzhply5610qvbzx6vm4bzvsjsf7xq9lz4451";
        libName = "cairo";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "c_vec";
            packageId = "c_vec";
          }
          {
            name = "cairo-sys-rs";
            packageId = "cairo-sys-rs";
          }
          {
            name = "glib";
            packageId = "glib";
            optional = true;
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "default" = [ "use_glib" ];
          "dox" = [ "cairo-sys-rs/dox" "glib/dox" ];
          "embed-lgpl-docs" = [ "gtk-rs-lgpl-docs" ];
          "png" = [ "cairo-sys-rs/png" ];
          "purge-lgpl-docs" = [ "gtk-rs-lgpl-docs" ];
          "use_glib" = [ "glib" "glib-sys" ];
          "v1_12" = [ "cairo-sys-rs/v1_12" ];
          "xcb" = [ "cairo-sys-rs/xcb" ];
        };
        resolvedDefaultFeatures = [ "default" "glib" "glib-sys" "use_glib" ];
      };
      "cairo-sys-rs" = rec {
        crateName = "cairo-sys-rs";
        version = "0.6.0";
        edition = "2015";
        sha256 = "1iv5nw1kh9x3cdqnscdmbsfwv79v2hfw60ka0yncq2m6rdg1g583";
        libName = "cairo_sys";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "windef" ];
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];
        features = {
          "dox" = [ "x11/dox" ];
          "v1_14" = [ "v1_12" ];
          "xlib" = [ "x11" ];
        };
      };
      "cast" = rec {
        crateName = "cast";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1c5z7zryj0zwnhdgs6rw5dfvnlwc1vm19jzrlgx5055alnwk952b";
        authors = [ "Jorge Aparicio <jorge@japaric.io>" ];
        buildDependencies = [{
          name = "rustc_version";
          packageId = "rustc_version";
        }];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "cc" = rec {
        crateName = "cc";
        version = "1.0.54";
        edition = "2018";
        crateBin = [ ];
        sha256 = "04c31hi55lhv1kkssixa3wjjx6izlbxx01z36j86w9616vdp7fvv";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [{
          name = "jobserver";
          packageId = "jobserver";
          optional = true;
        }];
        features = { "parallel" = [ "jobserver" ]; };
        resolvedDefaultFeatures = [ "jobserver" "parallel" ];
      };
      "cexpr" = rec {
        crateName = "cexpr";
        version = "0.4.0";
        edition = "2018";
        sha256 = "09qd1k1mrhcqfhqmsz4y1bya9gcs29si7y3w96pqkgid4y2dpbpl";
        authors = [ "Jethro Beekman <jethro@jbeekman.nl>" ];
        dependencies = [{
          name = "nom";
          packageId = "nom 5.1.1";
          usesDefaultFeatures = false;
          features = [ "std" ];
        }];

      };
      "cfg-if" = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "08h80ihs74jcyp24cd75wwabygbbdgl05k6p5dmq8akbr78vv1a7";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        features = { "rustc-dep-of-std" = [ "core" "compiler_builtins" ]; };
      };
      "cgl" = rec {
        crateName = "cgl";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0j8ayr8pbwvyv6l8r7m5z197rs3pqn97085w9j4rfn7yfh5yrrsm";
        authors = [ "The Servo Project Developers" ];
        dependencies = [
          {
            name = "gleam";
            packageId = "gleam";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "chrono" = rec {
        crateName = "chrono";
        version = "0.4.11";
        edition = "2015";
        sha256 = "1cmmxamkzzs36zncqjjr7qm7xkb6zyrkjslnlj3axdgqki84y2c0";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time";
            optional = true;
          }
        ];
        features = {
          "clock" = [ "time" "std" ];
          "default" = [ "clock" "std" ];
          "wasmbind" = [ "wasm-bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "std" "time" ];
      };
      "chunked_transfer" = rec {
        crateName = "chunked_transfer";
        version = "1.1.0";
        edition = "2018";
        sha256 = "1pddhllvjarnl2wxlqa6yszi6kiyhjr9j9v2rcwcix5r15zn92av";
        authors = [ "Corey Farwell <coreyf@rwell.org>" ];

      };
      "clang-sys" = rec {
        crateName = "clang-sys";
        version = "0.29.3";
        edition = "2015";
        sha256 = "02nibl74zbz5x693iy5vdbhnfckja47m7j1mp2bj7fjw3pgkfs7y";
        authors = [ "Kyle Mayes <kyle@mayeses.com>" ];
        dependencies = [
          {
            name = "glob";
            packageId = "glob";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "libloading";
            packageId = "libloading 0.5.2";
            optional = true;
          }
        ];
        buildDependencies = [{
          name = "glob";
          packageId = "glob";
        }];
        features = {
          "clang_3_6" = [ "gte_clang_3_6" ];
          "clang_3_7" = [ "gte_clang_3_6" "gte_clang_3_7" ];
          "clang_3_8" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" ];
          "clang_3_9" =
            [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" ];
          "clang_4_0" = [
            "gte_clang_3_6"
            "gte_clang_3_7"
            "gte_clang_3_8"
            "gte_clang_3_9"
            "gte_clang_4_0"
          ];
          "clang_5_0" = [
            "gte_clang_3_6"
            "gte_clang_3_7"
            "gte_clang_3_8"
            "gte_clang_3_9"
            "gte_clang_4_0"
            "gte_clang_5_0"
          ];
          "clang_6_0" = [
            "gte_clang_3_6"
            "gte_clang_3_7"
            "gte_clang_3_8"
            "gte_clang_3_9"
            "gte_clang_4_0"
            "gte_clang_5_0"
            "gte_clang_6_0"
          ];
          "clang_7_0" = [
            "gte_clang_3_6"
            "gte_clang_3_7"
            "gte_clang_3_8"
            "gte_clang_3_9"
            "gte_clang_4_0"
            "gte_clang_5_0"
            "gte_clang_6_0"
            "gte_clang_7_0"
          ];
          "clang_8_0" = [
            "gte_clang_3_6"
            "gte_clang_3_7"
            "gte_clang_3_8"
            "gte_clang_3_9"
            "gte_clang_4_0"
            "gte_clang_5_0"
            "gte_clang_6_0"
            "gte_clang_7_0"
            "gte_clang_8_0"
          ];
          "clang_9_0" = [
            "gte_clang_3_6"
            "gte_clang_3_7"
            "gte_clang_3_8"
            "gte_clang_3_9"
            "gte_clang_4_0"
            "gte_clang_5_0"
            "gte_clang_6_0"
            "gte_clang_7_0"
            "gte_clang_8_0"
            "gte_clang_9_0"
          ];
          "runtime" = [ "libloading" ];
        };
        resolvedDefaultFeatures = [
          "clang_6_0"
          "gte_clang_3_6"
          "gte_clang_3_7"
          "gte_clang_3_8"
          "gte_clang_3_9"
          "gte_clang_4_0"
          "gte_clang_5_0"
          "gte_clang_6_0"
          "libloading"
          "runtime"
        ];
      };
      "clap" = rec {
        crateName = "clap";
        version = "2.33.1";
        edition = "2015";
        sha256 = "0a91g4m6rcqpf6gzxh43cj6mnj9g8ahpr634baim6kcmgza81ymx";
        authors = [ "Kevin K. <kbknapp@gmail.com>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "textwrap";
            packageId = "textwrap";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
      };
      "clipboard-win" = rec {
        crateName = "clipboard-win";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0svqk0lrw66abaxd6h7l4k4g2s5vd1dcipy34kzfan6mzvb97873";
        libName = "clipboard_win";
        authors = [ "Douman <douman@gmx.se>" ];
        dependencies = [{
          name = "winapi";
          packageId = "winapi 0.3.8";
          usesDefaultFeatures = false;
          target = { target, features }: target."windows";
          features = [ "std" "basetsd" "shellapi" "winbase" "winuser" ];
        }];
        features = { };
      };
      "cloudabi" = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "0kxcg83jlihy0phnd2g8c2c303px3l2p3pkjz357ll6llnd5pz6x";
        libPath = "cloudabi.rs";
        authors = [ "Nuxi (https://nuxi.nl/) and contributors" ];
        dependencies = [{
          name = "bitflags";
          packageId = "bitflags";
          optional = true;
        }];
        features = { "default" = [ "bitflags" ]; };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
      "cocoa 0.18.5" = rec {
        crateName = "cocoa";
        version = "0.18.5";
        edition = "2015";
        sha256 = "0m6fgdr4d2fp8jhkqvwr23hrqqqjv72g0j9vdgijc58k05j9j1hp";
        type = [ "rlib" ];
        authors = [ "The Servo Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "block";
            packageId = "block";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
          }
          {
            name = "core-graphics";
            packageId = "core-graphics";
          }
          {
            name = "foreign-types";
            packageId = "foreign-types";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "objc";
            packageId = "objc";
          }
        ];

      };
      "cocoa 0.19.1" = rec {
        crateName = "cocoa";
        version = "0.19.1";
        edition = "2015";
        sha256 = "0034vahbfv574q4b63rj241b8rnka5cjiqsqc6wiggnin9l7g7zj";
        type = [ "rlib" ];
        authors = [ "The Servo Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "block";
            packageId = "block";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
          }
          {
            name = "core-graphics";
            packageId = "core-graphics";
          }
          {
            name = "foreign-types";
            packageId = "foreign-types";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "objc";
            packageId = "objc";
          }
        ];

      };
      "conrod_core" = rec {
        crateName = "conrod_core";
        version = "0.63.0";
        edition = "2015";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://gitlab.com/veloren/conrod.git";
          rev = "46b374edc9537300e5278905ebd14dff45cfd927";
          sha256 = "0lrh3v8dwr9x01qjry7p4wkcvd9r2cvn2865fa5nrbrc77d1qjkn";
        };
        authors = [
          "Mitchell Nordine <mitchell.nordine@gmail.com>"
          "Sven Nilsen <bvssvni@gmail.com>"
        ];
        dependencies = [
          {
            name = "conrod_derive";
            packageId = "conrod_derive";
          }
          {
            name = "copypasta";
            packageId = "copypasta";
          }
          {
            name = "daggy";
            packageId = "daggy";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "num";
            packageId = "num 0.2.1";
          }
          {
            name = "pistoncore-input";
            packageId = "pistoncore-input";
          }
          {
            name = "rusttype";
            packageId = "rusttype 0.7.9";
            features = [ "gpu_cache" ];
          }
        ];
        features = {
          "stdweb" = [ "instant/stdweb" ];
          "wasm-bindgen" = [ "instant/wasm-bindgen" ];
        };
      };
      "conrod_derive" = rec {
        crateName = "conrod_derive";
        version = "0.63.0";
        edition = "2015";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://gitlab.com/veloren/conrod.git";
          rev = "46b374edc9537300e5278905ebd14dff45cfd927";
          sha256 = "0lrh3v8dwr9x01qjry7p4wkcvd9r2cvn2865fa5nrbrc77d1qjkn";
        };
        procMacro = true;
        authors = [ "mitchmindtree <mitchell.nordine@gmail.com>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "syn";
            packageId = "syn 0.15.44";
            features = [ "extra-traits" "full" ];
          }
        ];

      };
      "conrod_winit" = rec {
        crateName = "conrod_winit";
        version = "0.63.0";
        edition = "2015";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://gitlab.com/veloren/conrod.git";
          rev = "46b374edc9537300e5278905ebd14dff45cfd927";
          sha256 = "0lrh3v8dwr9x01qjry7p4wkcvd9r2cvn2865fa5nrbrc77d1qjkn";
        };
        authors = [
          "Mitchell Nordine <mitchell.nordine@gmail.com>"
          "Sven Nilsen <bvssvni@gmail.com>"
        ];

      };
      "const-random" = rec {
        crateName = "const-random";
        version = "0.1.8";
        edition = "2018";
        sha256 = "0sp1ang5sh27fq5b7g9fdwpq4d5s17ymj7khfzax4bbvffngj6ig";
        authors = [ "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>" ];
        dependencies = [
          {
            name = "const-random-macro";
            packageId = "const-random-macro";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
        ];

      };
      "const-random-macro" = rec {
        crateName = "const-random-macro";
        version = "0.1.8";
        edition = "2018";
        sha256 = "0ykc9riajn6bijvw46092gp18vrbky3y1cjpgjgx57a5xc3cdr15";
        procMacro = true;
        authors = [ "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>" ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
        ];

      };
      "const-tweaker" = rec {
        crateName = "const-tweaker";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0xp2wxfbksbnra7pbgcm3nk34g28782qsgdhgc66hvlvqgnf4yr9";
        authors = [ "Thomas Versteeg <thomasversteeg@gmx.com>" ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
          }
          {
            name = "const-tweaker-attribute";
            packageId = "const-tweaker-attribute";
          }
          {
            name = "ctor";
            packageId = "ctor";
          }
          {
            name = "dashmap";
            packageId = "dashmap";
          }
          {
            name = "horrorshow";
            packageId = "horrorshow";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "tide";
            packageId = "tide";
          }
        ];

      };
      "const-tweaker-attribute" = rec {
        crateName = "const-tweaker-attribute";
        version = "0.5.0";
        edition = "2018";
        sha256 = "1n60l09hb0h2hiz2csvvbn3az0qzmaqfyfhbih60q47ny0w9ww1d";
        procMacro = true;
        authors = [ "Thomas Versteeg <thomasversteeg@gmx.com>" ];
        dependencies = [
          {
            name = "darling";
            packageId = "darling";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
          }
        ];

      };
      "constant_time_eq" = rec {
        crateName = "constant_time_eq";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1g3vp04qzmk6cpzrd19yci6a95m7ap6wy7wkwgiy2pjklklrfl14";
        authors = [ "Cesar Eduardo Barros <cesarb@cesarb.eti.br>" ];

      };
      "cookie" = rec {
        crateName = "cookie";
        version = "0.12.0";
        edition = "2015";
        sha256 = "1mdvqixahcywvqp0y8k2skkgbpfhsp0w73l9mz93dcrx1gq091l8";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Sergio Benitez <sb@sergio.bz>"
        ];
        dependencies = [
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "url";
            packageId = "url 1.7.2";
            optional = true;
          }
        ];
        features = {
          "percent-encode" = [ "url" ];
          "secure" = [ "ring" "base64" ];
        };
        resolvedDefaultFeatures = [ "percent-encode" "url" ];
      };
      "copypasta" = rec {
        crateName = "copypasta";
        version = "0.6.3";
        edition = "2018";
        sha256 = "0spb7bh9pmv7jx8ld04vx8k6wlyxslnyy5kbh3y7sahyd5srcpl6";
        authors = [ "Christian Duerr <contact@christianduerr.com>" ];
        dependencies = [
          {
            name = "clipboard-win";
            packageId = "clipboard-win";
            target = { target, features }: target."windows";
          }
          {
            name = "objc";
            packageId = "objc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "objc-foundation";
            packageId = "objc-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "objc_id";
            packageId = "objc_id";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "smithay-clipboard";
            packageId = "smithay-clipboard";
            optional = true;
            target = { target, features }:
              (target."unix" && (!((target."os" == "macos")
                || (target."os" == "android") || (target."os" == "ios")
                || (target."os" == "emscripten"))));
          }
          {
            name = "wayland-client";
            packageId = "wayland-client 0.23.6";
            optional = true;
            target = { target, features }:
              (target."unix" && (!((target."os" == "macos")
                || (target."os" == "android") || (target."os" == "ios")
                || (target."os" == "emscripten"))));
            features = [ "dlopen" ];
          }
          {
            name = "x11-clipboard";
            packageId = "x11-clipboard";
            optional = true;
            target = { target, features }:
              (target."unix" && (!((target."os" == "macos")
                || (target."os" == "android") || (target."os" == "ios")
                || (target."os" == "emscripten"))));
          }
        ];
        features = {
          "default" = [ "x11" "wayland" ];
          "wayland" = [ "smithay-clipboard" "wayland-client" ];
          "x11" = [ "x11-clipboard" ];
        };
        resolvedDefaultFeatures = [
          "default"
          "smithay-clipboard"
          "wayland"
          "wayland-client"
          "x11"
          "x11-clipboard"
        ];
      };
      "core-foundation" = rec {
        crateName = "core-foundation";
        version = "0.6.4";
        edition = "2015";
        sha256 = "0va97wf49c8dzm9c8pgyk1jn7z21rl0bj1syf2zz5m2z2hzy1f95";
        authors = [ "The Servo Project Developers" ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" =
            [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
      "core-foundation-sys" = rec {
        crateName = "core-foundation-sys";
        version = "0.6.2";
        edition = "2015";
        sha256 = "0fzsw1j9g1x598yhwklg59l15hwzc0pyvs01w9fg2kin4598mjp7";
        authors = [ "The Servo Project Developers" ];
        features = { };
      };
      "core-graphics" = rec {
        crateName = "core-graphics";
        version = "0.17.3";
        edition = "2015";
        sha256 = "1acm3vygngnilzlr6klym5ywh7kfzh2xxrh2l41152hwmdl0jyan";
        authors = [ "The Servo Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
          }
          {
            name = "foreign-types";
            packageId = "foreign-types";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "coreaudio-rs" = rec {
        crateName = "coreaudio-rs";
        version = "0.9.1";
        edition = "2015";
        sha256 = "14g4yqsbhif2bqdk4qk0lixfy78gl1p8lrl122qyklysclcpcagj";
        libName = "coreaudio";
        authors = [
          "mitchmindtree <mitchell.nordine@gmail.com>"
          "yupferris <jake@fusetools.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "coreaudio-sys";
            packageId = "coreaudio-sys";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "audio_toolbox" = [ "coreaudio-sys/audio_toolbox" ];
          "audio_unit" = [ "coreaudio-sys/audio_unit" ];
          "core_audio" = [ "coreaudio-sys/core_audio" ];
          "core_midi" = [ "coreaudio-sys/core_midi" ];
          "default" =
            [ "audio_toolbox" "audio_unit" "core_audio" "open_al" "core_midi" ];
          "open_al" = [ "coreaudio-sys/open_al" ];
        };
        resolvedDefaultFeatures = [ "audio_unit" "core_audio" ];
      };
      "coreaudio-sys" = rec {
        crateName = "coreaudio-sys";
        version = "0.2.4";
        edition = "2015";
        sha256 = "0b2hh7an7q02h6jdyibijkak8as60cxsqxrhl28apzrkbhb1q7z8";
        authors = [ "Mitchell Nordine <mitchell.nordine@gmail.com>" ];
        buildDependencies = [{
          name = "bindgen";
          packageId = "bindgen";
          usesDefaultFeatures = false;
          features = [ "runtime" ];
        }];
        features = {
          "default" =
            [ "audio_toolbox" "audio_unit" "core_audio" "open_al" "core_midi" ];
        };
        resolvedDefaultFeatures = [ "audio_unit" "core_audio" ];
      };
      "cpal" = rec {
        crateName = "cpal";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0nfx8d227pcfgb81a3y7418xzbp066s08g5xjlmgc0zld5fxambb";
        authors = [
          "The CPAL contributors"
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];
        dependencies = [
          {
            name = "alsa-sys";
            packageId = "alsa-sys";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "dragonfly")
                || (target."os" == "freebsd") || (target."os" == "openbsd"));
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
            target = { target, features }:
              ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "coreaudio-rs";
            packageId = "coreaudio-rs";
            usesDefaultFeatures = false;
            target = { target, features }:
              ((target."os" == "macos") || (target."os" == "ios"));
            features = [ "audio_unit" "core_audio" ];
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "dragonfly")
                || (target."os" == "freebsd") || (target."os" == "openbsd"));
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "stdweb";
            packageId = "stdweb 0.1.3";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "emscripten");
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [
              "audiosessiontypes"
              "audioclient"
              "coml2api"
              "combaseapi"
              "debug"
              "devpkey"
              "handleapi"
              "ksmedia"
              "mmdeviceapi"
              "objbase"
              "std"
              "synchapi"
              "winbase"
              "winuser"
            ];
          }
        ];
        features = { "asio" = [ "asio-sys" ]; };
      };
      "crc32fast" = rec {
        crateName = "crc32fast";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1c9dhkvf3brrzzplcijaywxi2w8wv5578i0ryhcm7x8dmzi5s4ms";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [{
          name = "cfg-if";
          packageId = "cfg-if";
        }];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "criterion" = rec {
        crateName = "criterion";
        version = "0.3.2";
        edition = "2018";
        sha256 = "0rmr8yfdxyv0hly3ccs8dh77sg31l3hxhs9wzr7pzdc8gj4rdxk3";
        authors = [
          "Jorge Aparicio <japaricious@gmail.com>"
          "Brook Heisler <brookheisler@gmail.com>"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "cast";
            packageId = "cast";
          }
          {
            name = "clap";
            packageId = "clap";
            usesDefaultFeatures = false;
          }
          {
            name = "criterion-plot";
            packageId = "criterion-plot";
          }
          {
            name = "csv";
            packageId = "csv";
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "oorandom";
            packageId = "oorandom";
          }
          {
            name = "plotters";
            packageId = "plotters";
            usesDefaultFeatures = false;
            features = [ "svg" "area_series" "line_series" ];
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "tinytemplate";
            packageId = "tinytemplate";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
        ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "criterion-plot" = rec {
        crateName = "criterion-plot";
        version = "0.4.2";
        edition = "2018";
        sha256 = "0q4bc51caf597kq6azy1x8pn64yp7q7i2sm2f7cf3wh0kycggsnx";
        authors = [
          "Jorge Aparicio <japaricious@gmail.com>"
          "Brook Heisler <brookheisler@gmail.com>"
        ];
        dependencies = [
          {
            name = "cast";
            packageId = "cast";
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
        ];

      };
      "crossbeam" = rec {
        crateName = "crossbeam";
        version = "0.7.2";
        edition = "2015";
        sha256 = "0g5jysq5x4gndc1v5sq9n3f1m97k7qihwdpigw6ar6knj14qm09d";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.3.9";
            optional = true;
          }
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
            optional = true;
          }
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch 0.7.2";
            usesDefaultFeatures = false;
          }
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue 0.1.2";
            optional = true;
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.6";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "crossbeam-epoch/alloc" "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-epoch/nightly" "crossbeam-utils/nightly" ];
          "std" = [
            "crossbeam-channel"
            "crossbeam-deque"
            "crossbeam-epoch/std"
            "crossbeam-queue"
            "crossbeam-utils/std"
          ];
        };
        resolvedDefaultFeatures = [
          "crossbeam-channel"
          "crossbeam-deque"
          "crossbeam-queue"
          "default"
          "std"
        ];
      };
      "crossbeam-channel 0.3.9" = rec {
        crateName = "crossbeam-channel";
        version = "0.3.9";
        edition = "2015";
        sha256 = "1ylyzb1m9qbvd1nd3vy38x9073wdmcy295ncjs7wf7ap476pzv68";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [{
          name = "crossbeam-utils";
          packageId = "crossbeam-utils 0.6.6";
        }];

      };
      "crossbeam-channel 0.4.2" = rec {
        crateName = "crossbeam-channel";
        version = "0.4.2";
        edition = "2015";
        sha256 = "0qd05n5bcwafkmbzq1lspwrfi29xnzlw46qarg1sl0lwj68qdvfc";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
        ];

      };
      "crossbeam-deque" = rec {
        crateName = "crossbeam-deque";
        version = "0.7.3";
        edition = "2015";
        sha256 = "11c2c0x5grdba3ah3g94yn6b8s47xi8qwm85h8hq5vmf9nbsy0lz";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch 0.8.2";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
        ];

      };
      "crossbeam-epoch 0.7.2" = rec {
        crateName = "crossbeam-epoch";
        version = "0.7.2";
        edition = "2015";
        sha256 = "1a9prma2nalqvys7f8wrazkdzh26w3mi5gzrk8mdmwrp5rvxdp7y";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.4.12";
            usesDefaultFeatures = false;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.6";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" "arrayvec/use_union" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "lazy_static" "std" ];
      };
      "crossbeam-epoch 0.8.2" = rec {
        crateName = "crossbeam-epoch";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1knsf0zz7rgzxn0nwz5gajjcrivxpw3zrdcp946gdhdgr9sd53h5";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossbeam-queue 0.1.2" = rec {
        crateName = "crossbeam-queue";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0jsa9dbxnwqcxfws09vaschf92d4imlbbikmcn4ka8z7rzb9r5vw";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [{
          name = "crossbeam-utils";
          packageId = "crossbeam-utils 0.6.6";
        }];

      };
      "crossbeam-queue 0.2.3" = rec {
        crateName = "crossbeam-queue";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0w15z68nz3ac4f2s4djhwha8vmlwsh9dlfrmsl4x84y2ah5acjvp";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
            usesDefaultFeatures = false;
          }
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
        ];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "std" = [ "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-utils 0.6.6" = rec {
        crateName = "crossbeam-utils";
        version = "0.6.6";
        edition = "2015";
        sha256 = "1rk0r9n04bmq4a3g2q5qhvvlmrmx780gc6h9lmc94mwndslkz5q4";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossbeam-utils 0.7.2" = rec {
        crateName = "crossbeam-utils";
        version = "0.7.2";
        edition = "2015";
        sha256 = "1a31wbrda1320gj2a6az1lin2d34xfc3xf88da4c17qy5lxcgiy3";
        authors = [ "The Crossbeam Project Developers" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
        ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "csv" = rec {
        crateName = "csv";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0yd2z55m2pg4al4yng4nl2y7c9dw2v7yhg5ynihxyrmmd9zzxbq0";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        dependencies = [
          {
            name = "bstr";
            packageId = "bstr";
            features = [ "serde1" ];
          }
          {
            name = "csv-core";
            packageId = "csv-core";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        devDependencies = [{
          name = "serde";
          packageId = "serde";
          features = [ "derive" ];
        }];

      };
      "csv-core" = rec {
        crateName = "csv-core";
        version = "0.1.10";
        edition = "2018";
        sha256 = "145wcc3560v1kmysqqspvddppiysr2rifqzy4nnlh3r6kxanc91b";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        dependencies = [{
          name = "memchr";
          packageId = "memchr";
          usesDefaultFeatures = false;
        }];
        features = { "libc" = [ "memchr/libc" ]; };
        resolvedDefaultFeatures = [ "default" ];
      };
      "ctor" = rec {
        crateName = "ctor";
        version = "0.1.15";
        edition = "2018";
        sha256 = "09x2my9x33srjdip8yf4lm5gq7xqis2694abvpa64r60pajqm19r";
        procMacro = true;
        authors = [ "Matt Mastracci <matthew@mastracci.com>" ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            usesDefaultFeatures = false;
            features = [ "full" "parsing" "printing" "proc-macro" ];
          }
        ];

      };
      "daggy" = rec {
        crateName = "daggy";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1qh9ckpbdvqzxgjh1nrd63kpp83rvvwxkr7cj00g7h8vgpda14wj";
        authors = [ "mitchmindtree <mitchell.nordine@gmail.com>" ];
        dependencies = [{
          name = "petgraph";
          packageId = "petgraph";
          usesDefaultFeatures = false;
        }];

      };
      "darling" = rec {
        crateName = "darling";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0n7qsp6854wm3y1q1lvylhv15zvc87ibbac1nyfmcdbyv1snww0d";
        authors = [ "Ted Driggs <ted.driggs@outlook.com>" ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core";
          }
          {
            name = "darling_macro";
            packageId = "darling_macro";
          }
        ];
        features = {
          "default" = [ "suggestions" ];
          "diagnostics" = [ "darling_core/diagnostics" ];
          "suggestions" = [ "darling_core/suggestions" ];
        };
        resolvedDefaultFeatures = [ "default" "suggestions" ];
      };
      "darling_core" = rec {
        crateName = "darling_core";
        version = "0.10.2";
        edition = "2015";
        sha256 = "16sija1jv0l754x4aa6b6fy01d1kf8m0r4id3flqipm45np61jgh";
        authors = [ "Ted Driggs <ted.driggs@outlook.com>" ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "ident_case";
            packageId = "ident_case";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "strsim";
            packageId = "strsim";
            optional = true;
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = { "suggestions" = [ "strsim" ]; };
        resolvedDefaultFeatures = [ "strsim" "suggestions" ];
      };
      "darling_macro" = rec {
        crateName = "darling_macro";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0wlv31cxkrjijz5gv13hvk55c9lmd781aj12c8n84sa9mksa5dfr";
        procMacro = true;
        authors = [ "Ted Driggs <ted.driggs@outlook.com>" ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
          }
        ];

      };
      "dashmap" = rec {
        crateName = "dashmap";
        version = "3.11.4";
        edition = "2018";
        sha256 = "0cpgil9a362bm8q778sidhrrqldsk0kisd04sbgfsq1dw0dd9z4c";
        authors = [ "Acrimon <joel.wejdenstal@gmail.com>" ];
        dependencies = [
          {
            name = "ahash";
            packageId = "ahash";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        features = { "no_std" = [ "hashbrown" ]; };
        resolvedDefaultFeatures = [ "default" ];
      };
      "data-encoding" = rec {
        crateName = "data-encoding";
        version = "2.2.1";
        edition = "2018";
        sha256 = "0sdx3pagijwd9dqgxnrn2g88qqaj475bf71bi9yxvs7s9p019akj";
        authors = [ "Julien Cretin <git@ia0.eu>" ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "deflate" = rec {
        crateName = "deflate";
        version = "0.7.20";
        edition = "2015";
        sha256 = "1d7d9fpmgjnznrksmd3vlv3dyw01wsrm11ifil6ag22871xnlyvh";
        authors = [ "oyvindln <oyvindln@users.noreply.github.com>" ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
          }
        ];
        features = { "gzip" = [ "gzip-header" ]; };
      };
      "deunicode" = rec {
        crateName = "deunicode";
        version = "1.1.1";
        edition = "2018";
        sha256 = "1ccd1d7bjr9z47njpsd4khnya9mywhwhli62h7hr2i70zlnml4c0";
        authors = [
          "Kornel Lesinski <kornel@geekhood.net>"
          "Amit Chowdhury <amitc97@gmail.com>"
        ];

      };
      "diesel" = rec {
        crateName = "diesel";
        version = "1.4.5";
        edition = "2015";
        sha256 = "134dy6gdbv30q388gsp5777w2qh63hdqsim1j8s1aylpmggfjb9y";
        authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
          }
          {
            name = "diesel_derives";
            packageId = "diesel_derives";
          }
          {
            name = "libsqlite3-sys";
            packageId = "libsqlite3-sys";
            optional = true;
            features = [ "min_sqlite_version_3_7_16" ];
          }
        ];
        features = {
          "128-column-tables" = [ "64-column-tables" ];
          "64-column-tables" = [ "32-column-tables" ];
          "default" = [ "with-deprecated" "32-column-tables" ];
          "deprecated-time" = [ "time" ];
          "extras" = [
            "chrono"
            "serde_json"
            "uuid"
            "deprecated-time"
            "network-address"
            "numeric"
            "r2d2"
          ];
          "huge-tables" = [ "64-column-tables" ];
          "large-tables" = [ "32-column-tables" ];
          "mysql" = [ "mysqlclient-sys" "url" "diesel_derives/mysql" ];
          "network-address" = [ "ipnetwork" "libc" ];
          "numeric" = [ "num-bigint" "bigdecimal" "num-traits" "num-integer" ];
          "postgres" = [ "pq-sys" "bitflags" "diesel_derives/postgres" ];
          "sqlite" = [ "libsqlite3-sys" "diesel_derives/sqlite" ];
          "unstable" = [ "diesel_derives/nightly" ];
          "x128-column-tables" = [ "128-column-tables" ];
          "x32-column-tables" = [ "32-column-tables" ];
          "x64-column-tables" = [ "64-column-tables" ];
        };
        resolvedDefaultFeatures = [
          "32-column-tables"
          "default"
          "libsqlite3-sys"
          "sqlite"
          "with-deprecated"
        ];
      };
      "diesel_derives" = rec {
        crateName = "diesel_derives";
        version = "1.4.1";
        edition = "2015";
        sha256 = "1lsq133fwk0zj8xvxhdxqgg0xs31zf3abnwdyshaf0ldca7hkxa5";
        procMacro = true;
        authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "full" "fold" ];
          }
        ];
        features = { "nightly" = [ "proc-macro2/nightly" ]; };
        resolvedDefaultFeatures = [ "default" "sqlite" ];
      };
      "diesel_migrations" = rec {
        crateName = "diesel_migrations";
        version = "1.4.0";
        edition = "2015";
        sha256 = "0k4g03ciqwya2xc1xvy5s9cs6q55k45wxa1gszswfg9m2f2dwg5z";
        authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
        dependencies = [
          {
            name = "migrations_internals";
            packageId = "migrations_internals";
          }
          {
            name = "migrations_macros";
            packageId = "migrations_macros";
          }
        ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "directories-next" = rec {
        crateName = "directories-next";
        version = "1.0.1";
        edition = "2018";
        sha256 = "0j2sb1rmhn2lkfacq1qasa1rl7c8cv2iff1qqwnpxv2vji7a1si1";
        authors = [ "The @xdg-rs members" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "dirs-sys-next";
            packageId = "dirs-sys-next";
          }
        ];

      };
      "dirs-sys-next" = rec {
        crateName = "dirs-sys-next";
        version = "0.1.0";
        edition = "2015";
        sha256 = "16iw13jarlagihbiq3n5sd8wfl7vpra089i3h8a2cfcmm2wgfq4w";
        authors = [ "The @xdg-rs members" ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features =
              [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];

      };
      "discard" = rec {
        crateName = "discard";
        version = "1.0.4";
        edition = "2015";
        sha256 = "1h67ni5bxvg95s91wgicily4ix7lcw7cq0a5gy9njrybaibhyb91";
        authors = [ "Pauan <pcxunlimited@gmail.com>" ];

      };
      "dispatch" = rec {
        crateName = "dispatch";
        version = "0.1.4";
        edition = "2015";
        sha256 = "019nzy993hxaiazcdnayx3csv2iki34i535asw11ki96hakkrs84";
        authors = [ "Steven Sheldon" ];

      };
      "dlib" = rec {
        crateName = "dlib";
        version = "0.4.2";
        edition = "2015";
        sha256 = "0xlsf3lrz9hd7q3ff6lp5mw4kn3nbryn746kd07i93r6wg8ia7xi";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [{
          name = "libloading";
          packageId = "libloading 0.6.2";
        }];
        features = { };
        resolvedDefaultFeatures = [ "dlopen" ];
      };
      "dot_vox" = rec {
        crateName = "dot_vox";
        version = "4.1.0";
        edition = "2015";
        sha256 = "0hdb8h6b938y422i63h6pzkkj5is9lwwhgksnyc07pjlxw2q9hc3";
        authors = [ "David Edmonds <edmonds.d.r@gmail.com>" ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "nom";
            packageId = "nom 4.2.3";
          }
        ];

      };
      "dotenv" = rec {
        crateName = "dotenv";
        version = "0.15.0";
        edition = "2018";
        crateBin = [ ];
        sha256 = "13ysjx7n2bqxxqydvnnbdwgik7i8n6h5c1qhr9g11x6cxnnhpjbp";
        authors = [
          "Noemi Lapresta <noemi.lapresta@gmail.com>"
          "Craig Hills <chills@gmail.com>"
          "Mike Piccolo <mfpiccolo@gmail.com>"
          "Alice Maz <alice@alicemaz.com>"
          "Sean Griffin <sean@seantheprogrammer.com>"
          "Adam Sharp <adam@sharplet.me>"
          "Arpad Borsos <arpad.borsos@googlemail.com>"
        ];
        features = { "cli" = [ "clap" ]; };
      };
      "downcast-rs" = rec {
        crateName = "downcast-rs";
        version = "1.1.1";
        edition = "2015";
        sha256 = "1xhs2qj02k9m4mm5fgh19y88850y9jsnwwlblf2ffc91gjs6xfjj";
        authors = [ "Ashish Myles <marcianx@gmail.com>" ];

      };
      "draw_state" = rec {
        crateName = "draw_state";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0lfng4fz9x7bwsmzv9r20ply10w0iid6vfcrhx292s6hw8vrbkrk";
        authors = [ "The Gfx-rs Developers" ];
        dependencies = [{
          name = "bitflags";
          packageId = "bitflags";
        }];

      };
      "either" = rec {
        crateName = "either";
        version = "1.5.3";
        edition = "2015";
        sha256 = "1qyz1b1acad6w0k5928jw5zaq900zhsk7p8dlcp4hh61w4f6n7xv";
        authors = [ "bluss" ];
        features = { "default" = [ "use_std" ]; };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "error-chain" = rec {
        crateName = "error-chain";
        version = "0.12.2";
        edition = "2015";
        sha256 = "1ka5y0fmymxzx3gz2yrd7rpz2i555m1iw4fpmcggpzcgr1n10wfk";
        authors = [
          "Brian Anderson <banderson@mozilla.com>"
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
          "Yamakaky <yamakaky@yamaworld.fr>"
          "Andrew Gauger <andygauge@gmail.com>"
        ];
        dependencies = [{
          name = "backtrace";
          packageId = "backtrace";
          optional = true;
        }];
        buildDependencies = [{
          name = "version_check";
          packageId = "version_check 0.9.2";
        }];
        features = { "default" = [ "backtrace" "example_generated" ]; };
        resolvedDefaultFeatures = [ "backtrace" "default" "example_generated" ];
      };
      "euc" = rec {
        crateName = "euc";
        version = "0.5.1";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/zesterer/euc.git";
          rev = "c9a7c17a03d45fce00caeeca09afa1e1558cd183";
          sha256 = "0qvk0bx1arkgmdc59sip39zszdw2fwv6jcy5jinv18n5m1nrclw4";
        };
        authors = [
          "Joshua Barretto <joshua.s.barretto@gmail.com>"
          "Martin Sandfuchs <martin@cluginbuehl.ch>"
        ];
        dependencies = [{
          name = "vek";
          packageId = "vek";
          usesDefaultFeatures = false;
          features = [ "rgb" "rgba" ];
        }];
        features = {
          "default" = [ "std" ];
          "libm" = [ "vek/libm" "num-traits" ];
          "std" = [ "vek/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "euclid" = rec {
        crateName = "euclid";
        version = "0.19.9";
        edition = "2015";
        sha256 = "1qah8h2z3dj2gb325f2qqcm30p4w7b8qsbadz6jyfxwl3di9jssr";
        authors = [ "The Servo Project Developers" ];
        dependencies = [
          {
            name = "euclid_macros";
            packageId = "euclid_macros";
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
        ];
        features = { };
      };
      "euclid_macros" = rec {
        crateName = "euclid_macros";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05dy60mxw2yg26m1ssqd5v7an0wly97rn0r3b8f7l0x5iv0q9jzx";
        procMacro = true;
        libPath = "lib.rs";
        authors = [
          "Emilio Cobos Álvarez <emilio@crisal.io>"
          "The Servo project developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "syn";
            packageId = "syn 0.15.44";
            features = [ "visit" ];
          }
        ];

      };
      "failure" = rec {
        crateName = "failure";
        version = "0.1.8";
        edition = "2015";
        sha256 = "11jg1wmbkijrs6bk9fqnbrm9zf0850whnqpgnxyswbn0dk8rnbnk";
        authors = [ "Without Boats <boats@mozilla.com>" ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            optional = true;
          }
          {
            name = "failure_derive";
            packageId = "failure_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures =
          [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
      "failure_derive" = rec {
        crateName = "failure_derive";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1936adqqk080439kx2bjf1bds7h89sg6wcif4jw0syndcv3s6kda";
        procMacro = true;
        authors = [ "Without Boats <woboats@gmail.com>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];
        features = { };
      };
      "filetime" = rec {
        crateName = "filetime";
        version = "0.2.10";
        edition = "2018";
        sha256 = "15f6gli6b29q25a1ziajrbmk9cg8qrf5fz6z393c4bqkkdbigz5g";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "fileapi" "minwindef" "winbase" ];
          }
        ];

      };
      "find_folder" = rec {
        crateName = "find_folder";
        version = "0.3.0";
        edition = "2015";
        sha256 = "06xr2sjiyjrwxlgjpf8ig6pq0ayfjv6qxmmfakw5j2ssp67h2vcz";
        authors = [
          "mitchmindtree <mitchell.nordine@gmail.com>"
          "bvssvni <bvssvni@gmail.com>"
        ];

      };
      "fixedbitset" = rec {
        crateName = "fixedbitset";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0czam11mi80dbyhf4rd4lz0ihcf7vkfchrdcrn45wbs0h40dxm46";
        authors = [ "bluss" ];

      };
      "fnv" = rec {
        crateName = "fnv";
        version = "1.0.7";
        edition = "2015";
        sha256 = "1hc2mcqha06aibcaza94vbi81j6pr9a1bbxrxjfhc91zin8yr7iz";
        libPath = "lib.rs";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "foreign-types" = rec {
        crateName = "foreign-types";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1cgk0vyd7r45cj769jym4a6s7vwshvd0z4bqrb92q1fwibmkkwzn";
        authors = [ "Steven Fackler <sfackler@gmail.com>" ];
        dependencies = [{
          name = "foreign-types-shared";
          packageId = "foreign-types-shared";
        }];

      };
      "foreign-types-shared" = rec {
        crateName = "foreign-types-shared";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0jxgzd04ra4imjv8jgkmdq59kj8fsz6w4zxsbmlai34h26225c00";
        authors = [ "Steven Fackler <sfackler@gmail.com>" ];

      };
      "fsevent" = rec {
        crateName = "fsevent";
        version = "2.0.2";
        edition = "2015";
        sha256 = "0qsylfbhgha319q6a8yvkznbm3hf47gy3y8nq82qijcm5hh4gwwp";
        authors = [ "Pierre Baillet <pierre@baillet.name>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fsevent-sys";
            packageId = "fsevent-sys";
          }
        ];

      };
      "fsevent-sys" = rec {
        crateName = "fsevent-sys";
        version = "3.0.2";
        edition = "2015";
        sha256 = "0821k4yac112iwwzqd4n5ml39dxbzi6d59d9fcz4qffay5vrr8kp";
        authors = [ "Pierre Baillet <pierre@baillet.name>" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
        }];

      };
      "fuchsia-cprng" = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1fnkqrbz7ixxzsb04bsz9p0zzazanma8znfdqjvh39n14vapfvx0";
        authors = [ "Erick Tryzelaar <etryzelaar@google.com>" ];

      };
      "fuchsia-zircon" = rec {
        crateName = "fuchsia-zircon";
        version = "0.3.3";
        edition = "2015";
        sha256 = "10jxc5ks1x06gpd0xg51kcjrxr35nj6qhx2zlc5n7bmskv3675rf";
        authors = [ "Raph Levien <raph@google.com>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
          }
        ];

      };
      "fuchsia-zircon-sys" = rec {
        crateName = "fuchsia-zircon-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "19zp2085qsyq2bh1gvcxq1lb8w6v6jj9kbdkhpdjrl95fypakjix";
        authors = [ "Raph Levien <raph@google.com>" ];

      };
      "futures 0.1.29" = rec {
        crateName = "futures";
        version = "0.1.29";
        edition = "2015";
        sha256 = "1vq3cw37knnd0afw3rcjzh71i2l01v5m4ysinrrqdvnn2ql0z60v";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        features = { "default" = [ "use_std" "with-deprecated" ]; };
        resolvedDefaultFeatures = [ "default" "use_std" "with-deprecated" ];
      };
      "futures 0.3.5" = rec {
        crateName = "futures";
        version = "0.3.5";
        edition = "2018";
        sha256 = "04zn97g8rvxlsqarpfamkiznkpr3jdb4lzfv6kfc1al7q9gbh18y";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
        ];
        devDependencies = [{
          name = "futures-executor";
          packageId = "futures-executor";
          features = [ "thread-pool" ];
        }];
        features = {
          "alloc" = [
            "futures-core/alloc"
            "futures-task/alloc"
            "futures-sink/alloc"
            "futures-channel/alloc"
            "futures-util/alloc"
          ];
          "async-await" =
            [ "futures-util/async-await" "futures-util/async-await-macro" ];
          "bilock" = [ "futures-util/bilock" ];
          "cfg-target-has-atomic" = [
            "futures-core/cfg-target-has-atomic"
            "futures-task/cfg-target-has-atomic"
            "futures-channel/cfg-target-has-atomic"
            "futures-util/cfg-target-has-atomic"
          ];
          "compat" = [ "std" "futures-util/compat" ];
          "default" = [ "std" "async-await" "executor" ];
          "executor" = [ "std" "futures-executor/std" ];
          "io-compat" = [ "compat" "futures-util/io-compat" ];
          "read-initializer" =
            [ "futures-io/read-initializer" "futures-util/read-initializer" ];
          "std" = [
            "alloc"
            "futures-core/std"
            "futures-task/std"
            "futures-io/std"
            "futures-sink/std"
            "futures-util/std"
            "futures-util/io"
            "futures-util/channel"
          ];
          "thread-pool" = [ "executor" "futures-executor/thread-pool" ];
          "unstable" = [
            "futures-core/unstable"
            "futures-task/unstable"
            "futures-channel/unstable"
            "futures-io/unstable"
            "futures-util/unstable"
          ];
          "write-all-vectored" = [ "futures-util/write-all-vectored" ];
        };
        resolvedDefaultFeatures = [
          "alloc"
          "async-await"
          "compat"
          "default"
          "executor"
          "futures-executor"
          "io-compat"
          "std"
          "thread-pool"
        ];
      };
      "futures-channel" = rec {
        crateName = "futures-channel";
        version = "0.3.5";
        edition = "2018";
        sha256 = "1mb756zxpgrsr0lxkgl358jlpyrwi0i68pnrasj6pjlcq9sasrpk";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" ];
          "cfg-target-has-atomic" = [ "futures-core/cfg-target-has-atomic" ];
          "default" = [ "std" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" ];
          "unstable" = [ "futures-core/unstable" ];
        };
        resolvedDefaultFeatures =
          [ "alloc" "default" "futures-sink" "sink" "std" ];
      };
      "futures-core" = rec {
        crateName = "futures-core";
        version = "0.3.5";
        edition = "2018";
        sha256 = "16d35ic4b4dkv1gy39cvy2v4391b9014hrxd6vwp3nfm1zwzzxar";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-cpupool" = rec {
        crateName = "futures-cpupool";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1r32456gpblzfvnkf60545v8acqk7gh5zhyhi1jn669k9gicv45b";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.29";
            usesDefaultFeatures = false;
            features = [ "use_std" ];
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
          "with-deprecated" = [ "futures/with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "futures-executor" = rec {
        crateName = "futures-executor";
        version = "0.3.5";
        edition = "2018";
        sha256 = "05732bhf9q8sqf9qd8px16rfkx9cn08nn05rpqx3s5g1if4bpmhh";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core/std" "futures-task/std" "futures-util/std" ];
          "thread-pool" = [ "std" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "default" "num_cpus" "std" "thread-pool" ];
      };
      "futures-io" = rec {
        crateName = "futures-io";
        version = "0.3.5";
        edition = "2018";
        sha256 = "128pnpcaqj9sxr1d0scy51yfk2ggvqp6szlm2jf8d3is04mi89yy";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "futures-macro" = rec {
        crateName = "futures-macro";
        version = "0.3.5";
        edition = "2018";
        sha256 = "0f8d4kmdxx0h7nca90zdpnbk429w6d3w8dw2hxrm9ar88c5a7dfh";
        procMacro = true;
        authors = [
          "Taylor Cramer <cramertj@google.com>"
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "full" ];
          }
        ];

      };
      "futures-sink" = rec {
        crateName = "futures-sink";
        version = "0.3.5";
        edition = "2018";
        sha256 = "1k4azaq6x7g9kmpvc91vx5w541y4p340rkl5bnhcfd5p7j4k481z";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-task" = rec {
        crateName = "futures-task";
        version = "0.3.5";
        edition = "2018";
        sha256 = "09m647nghwsg46ckys2846jfga6fbdwgfc08mfqij87215gnpdmx";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [{
          name = "once_cell";
          packageId = "once_cell";
          optional = true;
          usesDefaultFeatures = false;
          features = [ "std" ];
        }];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" "once_cell" ];
        };
        resolvedDefaultFeatures = [ "alloc" "once_cell" "std" ];
      };
      "futures-timer" = rec {
        crateName = "futures-timer";
        version = "2.0.2";
        edition = "2018";
        sha256 = "1xlx22asam8g5m32avwxx4x4p5hw3gvdhbk6047rn0hqn847bpm1";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];

      };
      "futures-util" = rec {
        crateName = "futures-util";
        version = "0.3.5";
        edition = "2018";
        sha256 = "1iijrqcamgll0h0r6ww9mh3ln4292c1wghw28h41lw4by17mfr47";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.29";
            rename = "futures_01";
            optional = true;
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-macro";
            packageId = "futures-macro";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-project";
            packageId = "pin-project";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
            optional = true;
          }
          {
            name = "proc-macro-nested";
            packageId = "proc-macro-nested";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" ];
          "async-await-macro" = [
            "async-await"
            "futures-macro"
            "proc-macro-hack"
            "proc-macro-nested"
          ];
          "cfg-target-has-atomic" = [
            "futures-core/cfg-target-has-atomic"
            "futures-task/cfg-target-has-atomic"
          ];
          "channel" = [ "std" "futures-channel" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" "async-await" "async-await-macro" ];
          "io" = [ "std" "futures-io" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "read-initializer" =
            [ "io" "futures-io/read-initializer" "futures-io/unstable" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "slab" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" ];
          "write-all-vectored" = [ "io" ];
        };
        resolvedDefaultFeatures = [
          "alloc"
          "async-await"
          "async-await-macro"
          "channel"
          "compat"
          "default"
          "futures-channel"
          "futures-io"
          "futures-macro"
          "futures-sink"
          "futures_01"
          "io"
          "io-compat"
          "memchr"
          "proc-macro-hack"
          "proc-macro-nested"
          "sink"
          "slab"
          "std"
          "tokio-io"
        ];
      };
      "fxhash" = rec {
        crateName = "fxhash";
        version = "0.2.1";
        edition = "2015";
        sha256 = "037mb9ichariqi45xm6mz0b11pa92gj38ba0409z3iz239sns6y3";
        libPath = "lib.rs";
        authors = [ "cbreeden <github@u.breeden.cc>" ];
        dependencies = [{
          name = "byteorder";
          packageId = "byteorder 1.3.4";
        }];

      };
      "gdk" = rec {
        crateName = "gdk";
        version = "0.8.0";
        edition = "2015";
        sha256 = "1af3sq8ly0317962k7w08gh236393kz6yxz5qwpzy26rycghac6x";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cairo-rs";
            packageId = "cairo-rs";
          }
          {
            name = "cairo-sys-rs";
            packageId = "cairo-sys-rs";
          }
          {
            name = "gdk-pixbuf";
            packageId = "gdk-pixbuf";
          }
          {
            name = "gdk-sys";
            packageId = "gdk-sys";
          }
          {
            name = "gio";
            packageId = "gio";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango";
            packageId = "pango";
          }
        ];
        features = {
          "dox" = [
            "gdk-sys/dox"
            "glib/dox"
            "gio/dox"
            "gdk-pixbuf/dox"
            "cairo-rs/dox"
            "pango/dox"
          ];
          "embed-lgpl-docs" = [
            "gtk-rs-lgpl-docs"
            "cairo-rs/embed-lgpl-docs"
            "gdk-pixbuf/embed-lgpl-docs"
            "gio/embed-lgpl-docs"
          ];
          "purge-lgpl-docs" = [
            "gtk-rs-lgpl-docs"
            "cairo-rs/purge-lgpl-docs"
            "gdk-pixbuf/purge-lgpl-docs"
            "gio/purge-lgpl-docs"
          ];
          "v3_10" = [ "v3_8" "gdk-sys/v3_10" "cairo-rs/v1_12" "gio/v2_36" ];
          "v3_12" = [ "v3_10" "gdk-sys/v3_12" "gio/v2_38" ];
          "v3_14" = [
            "v3_12"
            "gdk-sys/v3_14"
            "gdk-pixbuf/v2_30"
            "gio/v2_40"
            "pango/v1_34"
          ];
          "v3_16" = [ "v3_14" "gdk-sys/v3_16" "gio/v2_42" ];
          "v3_18" = [ "v3_16" "gdk-sys/v3_18" "gio/v2_44" ];
          "v3_20" = [ "v3_18" "gdk-sys/v3_20" "gio/v2_48" ];
          "v3_22" = [ "v3_20" "gdk-sys/v3_22" ];
          "v3_6" = [ "gdk-sys/v3_6" ];
          "v3_8" = [
            "v3_6"
            "gdk-sys/v3_8"
            "gdk-pixbuf/v2_28"
            "gio/v2_34"
            "pango/v1_32_4"
          ];
        };
      };
      "gdk-pixbuf" = rec {
        crateName = "gdk-pixbuf";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dg64hfa9ak5kdplwp26xw2r7mdx96b1fa6ffycwpss7pag1kln2";
        libName = "gdk_pixbuf";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "gdk-pixbuf-sys";
            packageId = "gdk-pixbuf-sys";
          }
          {
            name = "gio";
            packageId = "gio";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "dox" = [ "glib/dox" "gdk-pixbuf-sys/dox" ];
          "embed-lgpl-docs" = [ "gtk-rs-lgpl-docs" ];
          "purge-lgpl-docs" = [ "gtk-rs-lgpl-docs" ];
          "v2_28" = [ "gdk-pixbuf-sys/v2_28" ];
          "v2_30" = [ "v2_28" "gdk-pixbuf-sys/v2_30" ];
          "v2_32" = [ "v2_30" "gdk-pixbuf-sys/v2_32" ];
          "v2_36" = [ "v2_32" "gdk-pixbuf-sys/v2_36" ];
          "v2_36_8" = [ "v2_36" "gdk-pixbuf-sys/v2_36_8" ];
        };
      };
      "gdk-pixbuf-sys" = rec {
        crateName = "gdk-pixbuf-sys";
        version = "0.6.0";
        edition = "2015";
        sha256 = "1n4727w23sam788f2a3qc8p42wx7jq83y25wbrzw1bsgw1rknsnz";
        libName = "gdk_pixbuf_sys";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];
        features = {
          "v2_30" = [ "v2_28" ];
          "v2_32" = [ "v2_30" ];
          "v2_36" = [ "v2_32" ];
          "v2_36_8" = [ "v2_36" ];
        };
      };
      "gdk-sys" = rec {
        crateName = "gdk-sys";
        version = "0.6.0";
        edition = "2015";
        sha256 = "1hw0kf0l4f409h6bl9fihb90apkbxsn0yqqzpxqzzp960nagyqii";
        libName = "gdk_sys";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cairo-sys-rs";
            packageId = "cairo-sys-rs";
          }
          {
            name = "gdk-pixbuf-sys";
            packageId = "gdk-pixbuf-sys";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango-sys";
            packageId = "pango-sys";
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];
        features = {
          "v3_10" = [ "v3_8" ];
          "v3_12" = [ "v3_10" ];
          "v3_14" = [ "v3_12" ];
          "v3_16" = [ "v3_14" ];
          "v3_18" = [ "v3_16" ];
          "v3_20" = [ "v3_18" ];
          "v3_22" = [ "v3_20" ];
          "v3_8" = [ "v3_6" ];
        };
      };
      "getrandom" = rec {
        crateName = "getrandom";
        version = "0.1.14";
        edition = "2018";
        sha256 = "1sq30li71h19rhnhs1h6576ja68insajx8wvh1nn088r8pc8vg3s";
        authors = [ "The Rand Project Developers" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "wasi";
            packageId = "wasi";
            target = { target, features }: (target."os" == "wasi");
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
          "test-in-browser" = [ "wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "gfx" = rec {
        crateName = "gfx";
        version = "0.18.2";
        edition = "2015";
        sha256 = "0nqmxqi3x4ni0g78g77a6aldrv8cfvzhnpqhxyd2ap4aa3wldph1";
        authors = [ "The Gfx-rs Developers" ];
        dependencies = [
          {
            name = "draw_state";
            packageId = "draw_state";
          }
          {
            name = "gfx_core";
            packageId = "gfx_core";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        features = {
          "serialize" = [ "gfx_core/serialize" "draw_state/serde" ];
        };
      };
      "gfx_core" = rec {
        crateName = "gfx_core";
        version = "0.9.2";
        edition = "2015";
        sha256 = "0haldr99n12d90vqgvl77n59hywlklhdff85j2aljaz1yapdvyvm";
        authors = [ "The Gfx-rs Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "draw_state";
            packageId = "draw_state";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        features = { "serialize" = [ "serde" "draw_state/serde" ]; };
      };
      "gfx_device_gl" = rec {
        crateName = "gfx_device_gl";
        version = "0.16.2";
        edition = "2015";
        sha256 = "1g5yg19jvxdmviljyakhd6253bnb2qg7v8iscf48ihc0ldgki70h";
        authors = [ "The Gfx-rs Developers" ];
        dependencies = [
          {
            name = "gfx_core";
            packageId = "gfx_core";
          }
          {
            name = "gfx_gl";
            packageId = "gfx_gl";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];

      };
      "gfx_gl" = rec {
        crateName = "gfx_gl";
        version = "0.6.1";
        edition = "2015";
        sha256 = "0ppzj4bgjawdqz3fvnscqk8lnmgh95pwzh0v96vwy809cxj83lzj";
        authors = [ "The Gfx-rs Developers" ];
        buildDependencies = [{
          name = "gl_generator";
          packageId = "gl_generator 0.14.0";
        }];

      };
      "gfx_window_glutin" = rec {
        crateName = "gfx_window_glutin";
        version = "0.31.0";
        edition = "2015";
        sha256 = "0im6jy7fffvjr5saayr0b12cjxdvpm42zslgn5a5i9dm11pzc3ri";
        authors = [ "The Gfx-rs Developers" ];
        dependencies = [
          {
            name = "gfx_core";
            packageId = "gfx_core";
          }
          {
            name = "gfx_device_gl";
            packageId = "gfx_device_gl";
          }
          {
            name = "glutin";
            packageId = "glutin";
          }
        ];
        features = { };
        resolvedDefaultFeatures = [ "headless" ];
      };
      "gilrs" = rec {
        crateName = "gilrs";
        version = "0.7.4";
        edition = "2015";
        sha256 = "145jwryy8040zh7z0p8za6py7k765jdlnlgwffng9r84z54v4aqj";
        authors = [ "Arvamer <arvamer@gmail.com>" ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "gilrs-core";
            packageId = "gilrs-core";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "stdweb";
            packageId = "stdweb 0.4.20";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "uuid";
            packageId = "uuid";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
          }
        ];

        resolvedDefaultFeatures = [ "serde" ];
      };
      "gilrs-core" = rec {
        crateName = "gilrs-core";
        version = "0.2.6";
        edition = "2015";
        sha256 = "1k8928i2y21akdxas1ha2sd7ff937dz50mgyf9l6vwkaykd5iis3";
        authors = [ "Mateusz Sieczko <arvamer@gmail.com>" ];
        dependencies = [
          {
            name = "core-foundation";
            packageId = "core-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "io-kit-sys";
            packageId = "io-kit-sys";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "libudev-sys";
            packageId = "libudev-sys";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "nix";
            packageId = "nix 0.15.0";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "rusty-xinput";
            packageId = "rusty-xinput";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "stdweb";
            packageId = "stdweb 0.4.20";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "uuid";
            packageId = "uuid";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "vec_map";
            packageId = "vec_map";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "xinput" ];
          }
        ];

      };
      "gimli" = rec {
        crateName = "gimli";
        version = "0.21.0";
        edition = "2018";
        sha256 = "0p5n8h265b5acmnhca3ggsbdyaxbn79frnv4b2anhy73pk4y1j5w";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Philip Craig <philipjcraig@gmail.com>"
        ];
        features = {
          "default" =
            [ "read" "write" "std" "fallible-iterator" "endian-reader" ];
          "endian-reader" = [ "stable_deref_trait" ];
          "std" = [ "fallible-iterator/std" "stable_deref_trait/std" ];
          "write" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "read" ];
      };
      "gio" = rec {
        crateName = "gio";
        version = "0.4.1";
        edition = "2015";
        sha256 = "1jwa51n3ycagiilqqw93qaiw3p41y2ynq2i1i8rwgm5hy7cgmf9d";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "dox" = [ "gio-sys/dox" "glib/dox" ];
          "embed-lgpl-docs" = [ "gtk-rs-lgpl-docs" ];
          "purge-lgpl-docs" = [ "gtk-rs-lgpl-docs" ];
          "v2_34" = [ "gio-sys/v2_34" ];
          "v2_36" = [ "v2_34" "gio-sys/v2_36" ];
          "v2_38" = [ "v2_36" "gio-sys/v2_38" ];
          "v2_40" = [ "v2_38" "gio-sys/v2_40" ];
          "v2_42" = [ "v2_40" "gio-sys/v2_42" ];
          "v2_44" = [ "v2_42" "gio-sys/v2_44" ];
          "v2_46" = [ "v2_44" "gio-sys/v2_46" ];
          "v2_48" = [ "v2_46" "gio-sys/v2_48" ];
          "v2_50" = [ "v2_48" "gio-sys/v2_50" ];
        };
      };
      "gio-sys" = rec {
        crateName = "gio-sys";
        version = "0.6.0";
        edition = "2015";
        sha256 = "0c0hlrzanrzd6qi8jcnx10mydjm4gn1q7kkphngjf78pk4j8fmra";
        libName = "gio_sys";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];
        features = {
          "v2_36" = [ "v2_34" ];
          "v2_38" = [ "v2_36" ];
          "v2_40" = [ "v2_38" ];
          "v2_42" = [ "v2_40" ];
          "v2_44" = [ "v2_42" ];
          "v2_46" = [ "v2_44" ];
          "v2_48" = [ "v2_46" ];
          "v2_50" = [ "v2_48" ];
          "v2_52" = [ "v2_50" ];
          "v2_54" = [ "v2_52" ];
        };
      };
      "git2" = rec {
        crateName = "git2";
        version = "0.13.6";
        edition = "2018";
        sha256 = "07nkyk407bbcyrwqmvn855bnab50nk5yjws2pz253rw0544b5r0i";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libgit2-sys";
            packageId = "libgit2-sys";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            optional = true;
            target = { target, features }:
              (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }:
              (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
        ];
        features = {
          "default" = [ "ssh" "https" "ssh_key_from_memory" ];
          "https" = [ "libgit2-sys/https" "openssl-sys" "openssl-probe" ];
          "ssh" = [ "libgit2-sys/ssh" ];
          "ssh_key_from_memory" = [ "libgit2-sys/ssh_key_from_memory" ];
          "vendored-openssl" = [ "openssl-sys/vendored" ];
        };
        resolvedDefaultFeatures = [
          "default"
          "https"
          "openssl-probe"
          "openssl-sys"
          "ssh"
          "ssh_key_from_memory"
        ];
      };
      "gl_generator 0.13.1" = rec {
        crateName = "gl_generator";
        version = "0.13.1";
        edition = "2015";
        sha256 = "0jpqjqpyrl73sf8y20p5rv50qz8glnsvv9infg8h4vi52zgbp66a";
        libPath = "lib.rs";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
          "Corey Richardson"
          "Arseny Kapoulkine"
        ];
        dependencies = [
          {
            name = "khronos_api";
            packageId = "khronos_api";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "xml-rs";
            packageId = "xml-rs";
          }
        ];
        features = { };
      };
      "gl_generator 0.14.0" = rec {
        crateName = "gl_generator";
        version = "0.14.0";
        edition = "2015";
        sha256 = "0k8j1hmfnff312gy7x1aqjzcm8zxid7ij7dlb8prljib7b1dz58s";
        libPath = "lib.rs";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
          "Corey Richardson"
          "Arseny Kapoulkine"
        ];
        dependencies = [
          {
            name = "khronos_api";
            packageId = "khronos_api";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "xml-rs";
            packageId = "xml-rs";
          }
        ];
        features = { };
      };
      "gleam" = rec {
        crateName = "gleam";
        version = "0.6.19";
        edition = "2015";
        sha256 = "1iazvk3kvw3620gm6x8hy2x1lz51k04acl78cr3ppryhk5y0vqfa";
        authors = [ "The Servo Project Developers" ];
        buildDependencies = [{
          name = "gl_generator";
          packageId = "gl_generator 0.13.1";
        }];

      };
      "glib" = rec {
        crateName = "glib";
        version = "0.5.0";
        edition = "2015";
        sha256 = "0qcvs0r4yc1mdzhhhzi2sizpwjj7q6fxna4v3b6pn8if8fqy22sy";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "dox" = [ "glib-sys/dox" "gobject-sys/dox" ];
          "v2_34" = [ "glib-sys/v2_34" "gobject-sys/v2_34" ];
          "v2_38" = [ "v2_34" "glib-sys/v2_38" "gobject-sys/v2_38" ];
          "v2_40" = [ "v2_38" "glib-sys/v2_40" ];
          "v2_44" = [ "v2_40" "glib-sys/v2_44" "gobject-sys/v2_44" ];
          "v2_46" = [ "v2_44" "glib-sys/v2_46" "gobject-sys/v2_46" ];
          "v2_48" = [ "v2_46" "glib-sys/v2_48" ];
          "v2_50" = [ "v2_48" "glib-sys/v2_50" ];
          "v2_52" = [ "v2_50" "glib-sys/v2_52" ];
          "v2_54" = [ "v2_52" "glib-sys/v2_54" "gobject-sys/v2_54" ];
        };
      };
      "glib-sys" = rec {
        crateName = "glib-sys";
        version = "0.6.0";
        edition = "2015";
        sha256 = "02543265jwk0xjwbrm1mhx5f7cngh3y1l94rxrm54f2qkfbyynv1";
        libName = "glib_sys";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];
        features = {
          "v2_36" = [ "v2_34" ];
          "v2_38" = [ "v2_36" ];
          "v2_40" = [ "v2_38" ];
          "v2_44" = [ "v2_40" ];
          "v2_46" = [ "v2_44" ];
          "v2_48" = [ "v2_46" ];
          "v2_50" = [ "v2_48" ];
          "v2_52" = [ "v2_50" ];
          "v2_54" = [ "v2_52" ];
        };
      };
      "glob" = rec {
        crateName = "glob";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0x25wfr7vg3mzxc9x05dcphvd3nwlcmbnxrvwcvrrdwplcrrk4cv";
        authors = [ "The Rust Project Developers" ];

      };
      "glsl-include" = rec {
        crateName = "glsl-include";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1djad0gknm961brhg778zrc9rd4bqqzhxphd7rab8yhycfqsz8ns";
        authors = [ "Justin Shrake <justinshrake@gmail.com>" ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "regex";
            packageId = "regex";
          }
        ];

      };
      "glutin" = rec {
        crateName = "glutin";
        version = "0.21.2";
        edition = "2018";
        sha256 = "1ggyyqn7dvz4yx5ygqfvnxwfb78wvdm5y6xqw5my1b4x61dv6wak";
        authors = [
          "The glutin contributors"
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];
        dependencies = [
          {
            name = "android_glue";
            packageId = "android_glue";
            target = { target, features }: (target."os" == "android");
          }
          {
            name = "cgl";
            packageId = "cgl";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "cocoa";
            packageId = "cocoa 0.18.5";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "core-graphics";
            packageId = "core-graphics";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "glutin_egl_sys";
            packageId = "glutin_egl_sys";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "freebsd")
                || (target."os" == "dragonfly") || (target."os" == "netbsd")
                || (target."os" == "openbsd"));
          }
          {
            name = "glutin_egl_sys";
            packageId = "glutin_egl_sys";
            target = { target, features }: (target."os" == "android");
          }
          {
            name = "glutin_egl_sys";
            packageId = "glutin_egl_sys";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "glutin_emscripten_sys";
            packageId = "glutin_emscripten_sys";
            target = { target, features }: (target."os" == "emscripten");
          }
          {
            name = "glutin_gles2_sys";
            packageId = "glutin_gles2_sys";
            target = { target, features }:
              ((target."os" == "ios") || (target."os" == "macos"));
          }
          {
            name = "glutin_glx_sys";
            packageId = "glutin_glx_sys";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "freebsd")
                || (target."os" == "dragonfly") || (target."os" == "netbsd")
                || (target."os" == "openbsd"));
          }
          {
            name = "glutin_wgl_sys";
            packageId = "glutin_wgl_sys";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libloading";
            packageId = "libloading 0.5.2";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "freebsd")
                || (target."os" == "dragonfly") || (target."os" == "netbsd")
                || (target."os" == "openbsd"));
          }
          {
            name = "libloading";
            packageId = "libloading 0.5.2";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "objc";
            packageId = "objc";
            target = { target, features }:
              ((target."os" == "ios") || (target."os" == "macos"));
          }
          {
            name = "osmesa-sys";
            packageId = "osmesa-sys";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "freebsd")
                || (target."os" == "dragonfly") || (target."os" == "netbsd")
                || (target."os" == "openbsd"));
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "freebsd")
                || (target."os" == "dragonfly") || (target."os" == "netbsd")
                || (target."os" == "openbsd"));
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0";
            target = { target, features }: (target."os" == "android");
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "wayland-client";
            packageId = "wayland-client 0.21.13";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "freebsd")
                || (target."os" == "dragonfly") || (target."os" == "netbsd")
                || (target."os" == "openbsd"));
            features = [ "egl" "dlopen" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "winnt" "winuser" "wingdi" "libloaderapi" ];
          }
          {
            name = "winit";
            packageId = "winit";
          }
        ];
        features = {
          "icon_loading" = [ "winit/icon_loading" ];
          "serde" = [ "winit/serde" ];
        };
      };
      "glutin_egl_sys" = rec {
        crateName = "glutin_egl_sys";
        version = "0.1.4";
        edition = "2018";
        sha256 = "0k1x1frdp4wp47qkai8zzmgqxzpfcn7780m29qgd92lbnbrxwbkp";
        authors =
          [ "The glutin contributors" "Hal Gentz <zegentzy@protonmail.com>" ];
        dependencies = [{
          name = "winapi";
          packageId = "winapi 0.3.8";
          target = { target, features }: (target."os" == "windows");
          features = [ "winnt" "winuser" "wingdi" "libloaderapi" ];
        }];
        buildDependencies = [{
          name = "gl_generator";
          packageId = "gl_generator 0.13.1";
        }];

      };
      "glutin_emscripten_sys" = rec {
        crateName = "glutin_emscripten_sys";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1wb3qfxg3jh6ibb7bxmlmvf4jcpzck3pn0035g1sds3nvx343pl0";
        authors =
          [ "The glutin contributors" "Hal Gentz <zegentzy@protonmail.com>" ];

      };
      "glutin_gles2_sys" = rec {
        crateName = "glutin_gles2_sys";
        version = "0.1.4";
        edition = "2018";
        sha256 = "1q6scyshfvsz4i1jakylc1cnz33m14q5q8j5wi9qxjzbdgcm7s07";
        authors =
          [ "The glutin contributors" "Hal Gentz <zegentzy@protonmail.com>" ];
        dependencies = [{
          name = "objc";
          packageId = "objc";
          target = { target, features }: (target."os" == "ios");
        }];
        buildDependencies = [{
          name = "gl_generator";
          packageId = "gl_generator 0.13.1";
        }];

      };
      "glutin_glx_sys" = rec {
        crateName = "glutin_glx_sys";
        version = "0.1.6";
        edition = "2018";
        sha256 = "1hq970xnc6l122rx8pa82pirscdr5xnq526702hmxkynfkg47hh8";
        authors =
          [ "The glutin contributors" "Hal Gentz <zegentzy@protonmail.com>" ];
        dependencies = [{
          name = "x11-dl";
          packageId = "x11-dl";
          target = { target, features }:
            ((target."os" == "linux") || (target."os" == "freebsd")
              || (target."os" == "dragonfly") || (target."os" == "netbsd")
              || (target."os" == "openbsd"));
        }];
        buildDependencies = [{
          name = "gl_generator";
          packageId = "gl_generator 0.13.1";
        }];

      };
      "glutin_wgl_sys" = rec {
        crateName = "glutin_wgl_sys";
        version = "0.1.4";
        edition = "2018";
        sha256 = "0spbjkzzyn8mmfn0d9zipik21kkibvr1y51pyk0fmzm0wdzblgd9";
        authors =
          [ "The glutin contributors" "Hal Gentz <zegentzy@protonmail.com>" ];
        buildDependencies = [{
          name = "gl_generator";
          packageId = "gl_generator 0.13.1";
        }];

      };
      "gobject-sys" = rec {
        crateName = "gobject-sys";
        version = "0.6.0";
        edition = "2015";
        sha256 = "0vgq8firn52c5d2994fkdnbxjb7miaz0rk9gc28ib2yv0mj9sh3h";
        libName = "gobject_sys";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];
        features = {
          "v2_36" = [ "v2_34" ];
          "v2_38" = [ "v2_36" ];
          "v2_42" = [ "v2_38" ];
          "v2_44" = [ "v2_42" ];
          "v2_46" = [ "v2_44" ];
          "v2_54" = [ "v2_46" ];
        };
      };
      "gtk" = rec {
        crateName = "gtk";
        version = "0.4.1";
        edition = "2015";
        sha256 = "095wn6c78rlpagf5rip3hwxy6lqfl3l6il4wq6bqlq8h86zdd5fn";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cairo-rs";
            packageId = "cairo-rs";
          }
          {
            name = "cairo-sys-rs";
            packageId = "cairo-sys-rs";
          }
          {
            name = "gdk";
            packageId = "gdk";
          }
          {
            name = "gdk-pixbuf";
            packageId = "gdk-pixbuf";
          }
          {
            name = "gdk-pixbuf-sys";
            packageId = "gdk-pixbuf-sys";
          }
          {
            name = "gdk-sys";
            packageId = "gdk-sys";
          }
          {
            name = "gio";
            packageId = "gio";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "gtk-sys";
            packageId = "gtk-sys";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango";
            packageId = "pango";
          }
        ];
        buildDependencies = [{
          name = "cc";
          packageId = "cc";
          target = { target, features }: (target."os" == "macos");
        }];
        features = {
          "dox" = [ "gdk/dox" "gtk-sys/dox" ];
          "embed-lgpl-docs" = [ "gtk-rs-lgpl-docs" "gdk/embed-lgpl-docs" ];
          "purge-lgpl-docs" = [ "gtk-rs-lgpl-docs" "gdk/purge-lgpl-docs" ];
          "v3_10" = [ "v3_8" "gtk-sys/v3_10" "gdk/v3_10" ];
          "v3_12" = [ "v3_10" "gtk-sys/v3_12" "gdk/v3_12" ];
          "v3_14" = [ "v3_12" "gtk-sys/v3_14" "gdk/v3_14" ];
          "v3_16" = [ "v3_14" "gtk-sys/v3_16" "gdk/v3_16" ];
          "v3_18" = [ "v3_16" "gtk-sys/v3_18" "gdk/v3_18" ];
          "v3_20" = [ "v3_18" "gtk-sys/v3_20" "gdk/v3_20" ];
          "v3_22" = [ "v3_20" "gtk-sys/v3_22" "gdk/v3_22" ];
          "v3_22_20" = [ "v3_22" "gtk-sys/v3_22_26" "gdk/v3_22" ];
          "v3_22_26" = [ "v3_22_20" "gtk-sys/v3_22_26" "gdk/v3_22" ];
          "v3_6" = [ "gtk-sys/v3_6" "gdk/v3_6" ];
          "v3_8" = [ "v3_6" "gtk-sys/v3_8" "gdk/v3_8" ];
        };
      };
      "gtk-sys" = rec {
        crateName = "gtk-sys";
        version = "0.6.0";
        edition = "2015";
        sha256 = "148sc9wa8xsvan7qyxbs3nf9hqmj0idwcn4jnczs319sbg7m959x";
        libName = "gtk_sys";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "atk-sys";
            packageId = "atk-sys";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cairo-sys-rs";
            packageId = "cairo-sys-rs";
          }
          {
            name = "gdk-pixbuf-sys";
            packageId = "gdk-pixbuf-sys";
          }
          {
            name = "gdk-sys";
            packageId = "gdk-sys";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango-sys";
            packageId = "pango-sys";
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];
        features = {
          "v3_10" = [ "v3_8" ];
          "v3_12" = [ "v3_10" ];
          "v3_14" = [ "v3_12" ];
          "v3_16" = [ "v3_14" ];
          "v3_18" = [ "v3_16" ];
          "v3_20" = [ "v3_18" ];
          "v3_22" = [ "v3_20" ];
          "v3_22_26" = [ "v3_22_6" ];
          "v3_22_6" = [ "v3_22" ];
          "v3_8" = [ "v3_6" ];
        };
      };
      "guillotiere" = rec {
        crateName = "guillotiere";
        version = "0.4.2";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/Imberflur/guillotiere";
          rev = "42c298f5bcf0f95f1a004360d05e25ca3711e9ed";
          sha256 = "1knqbn777f3cgzbsaqawzclgrqf3nav6x3gjzc2hsls3acccx1ya";
        };
        authors = [ "Nicolas Silva <nical@fastmail.com>" ];
        dependencies = [
          {
            name = "euclid";
            packageId = "euclid";
          }
          {
            name = "svg_fmt";
            packageId = "svg_fmt";
          }
        ];
        features = { "serialization" = [ "serde" "euclid/serde" ]; };
      };
      "h2" = rec {
        crateName = "h2";
        version = "0.1.26";
        edition = "2015";
        sha256 = "0qn457y8xh03p7c7cpk76r22gqpyqxc58g5022j3iya7d0j4rcx5";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "string";
            packageId = "string";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
        ];
        features = { };
      };
      "hashbrown" = rec {
        crateName = "hashbrown";
        version = "0.7.2";
        edition = "2018";
        sha256 = "1ks110dbp81ddn3v826vnrlk5psh3vgvwf4rmb9s0gfdpyb2wa4n";
        authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
        dependencies = [
          {
            name = "ahash";
            packageId = "ahash";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        devDependencies = [{
          name = "rayon";
          packageId = "rayon";
        }];
        features = {
          "ahash-compile-time-rng" = [ "ahash/compile-time-rng" ];
          "default" = [ "ahash" "inline-more" ];
          "rustc-dep-of-std" = [
            "nightly"
            "core"
            "compiler_builtins"
            "alloc"
            "rustc-internal-api"
          ];
        };
        resolvedDefaultFeatures =
          [ "ahash" "default" "inline-more" "nightly" "rayon" "serde" ];
      };
      "hermit-abi" = rec {
        crateName = "hermit-abi";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0w9vpn4xy371xc3cnns8xqki4szz2xkfajslyn4hl2vmks00yy4i";
        authors = [ "Stefan Lankes" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
          usesDefaultFeatures = false;
        }];
        features = {
          "rustc-dep-of-std" = [
            "core"
            "compiler_builtins/rustc-dep-of-std"
            "libc/rustc-dep-of-std"
          ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hex" = rec {
        crateName = "hex";
        version = "0.3.2";
        edition = "2015";
        sha256 = "0xsdcjiik5j750j67zk42qdnmm4ahirk3gmkmcqgq7qls2jjcl40";
        authors = [ "KokaKiwi <kokakiwi@kokakiwi.net>" ];
        features = { };
      };
      "hibitset" = rec {
        crateName = "hibitset";
        version = "0.6.3";
        edition = "2015";
        sha256 = "1cb4dpjbhlg88s6ac16c4fymqffpip9c8ls2s6kmji542s1vp8ck";
        authors = [ "csheratt" ];
        dependencies = [
          {
            name = "atom";
            packageId = "atom";
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
        ];
        features = {
          "default" = [ "parallel" ];
          "parallel" = [ "rayon" ];
        };
        resolvedDefaultFeatures = [ "parallel" "rayon" ];
      };
      "horrorshow" = rec {
        crateName = "horrorshow";
        version = "0.8.3";
        edition = "2018";
        sha256 = "1yykh6hly8dk2ghvzgjil41aa4g8cib4xjdbjsc4ir683c57xkl7";
        authors = [ "Steven Allen <steven@stebalien.com>" ];
        features = {
          "default" = [ "ops" "std" "alloc" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "ops" "std" ];
      };
      "hound" = rec {
        crateName = "hound";
        version = "3.4.0";
        edition = "2015";
        sha256 = "0jbm25p2nc8758dnfjan1yk7hz2i85y89nrbai14zzxfrsr4n5la";
        authors = [ "Ruud van Asseldonk <dev@veniogames.com>" ];

      };
      "http" = rec {
        crateName = "http";
        version = "0.1.21";
        edition = "2015";
        sha256 = "1w21xnhd8f48zvbmm5njg2y1nb4p08ppn8r0cs2xi5d8wgnzbk6n";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];

      };
      "http-body" = rec {
        crateName = "http-body";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0b99404k4mw6a92hvyr0qwzkqv4f866ykg0x7913limjq5cwhhb7";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "tokio-buf";
            packageId = "tokio-buf";
            usesDefaultFeatures = false;
          }
        ];

      };
      "http-service" = rec {
        crateName = "http-service";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0267bbkwgncjk2j26iv58g42smhzwfwafi55g2zr9y7svl2zc9cn";
        authors = [ "Aaron Turon <aturon@mozilla.com>" ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures 0.3.5";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
        ];

      };
      "http-service-hyper" = rec {
        crateName = "http-service-hyper";
        version = "0.4.1";
        edition = "2018";
        sha256 = "1zwaxpyx7cycpv48qvaj9223v2s5k0mjzsi4jlpvizg0jjp5sgg3";
        authors = [
          "Aaron Turon <aturon@mozilla.com>"
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
          "Wonwoo Choi <chwo9843@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.5";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-service";
            packageId = "http-service";
          }
          {
            name = "hyper";
            packageId = "hyper";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "runtime" ];
          "runtime" = [ "hyper/runtime" ];
        };
        resolvedDefaultFeatures = [ "default" "runtime" ];
      };
      "httparse" = rec {
        crateName = "httparse";
        version = "1.3.4";
        edition = "2015";
        sha256 = "1yf23ldnjwfkkhkca7f4w15mky9961gjz28dlwyybhphc7l9l5yd";
        authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "hyper" = rec {
        crateName = "hyper";
        version = "0.12.35";
        edition = "2015";
        sha256 = "1xnm8zi4bdjqhlnx3238kx8yjf29jjd1ww54apcql7wf8g8nxglx";
        authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "futures-cpupool";
            packageId = "futures-cpupool";
            optional = true;
          }
          {
            name = "h2";
            packageId = "h2";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-body";
            packageId = "http-body";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "net2";
            packageId = "net2";
            optional = true;
          }
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "rt-full" ];
          }
          {
            name = "tokio-buf";
            packageId = "tokio-buf";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
            optional = true;
          }
          {
            name = "tokio-tcp";
            packageId = "tokio-tcp";
            optional = true;
          }
          {
            name = "tokio-threadpool";
            packageId = "tokio-threadpool";
            optional = true;
          }
          {
            name = "tokio-timer";
            packageId = "tokio-timer";
            optional = true;
          }
          {
            name = "want";
            packageId = "want";
          }
        ];
        buildDependencies = [{
          name = "rustc_version";
          packageId = "rustc_version";
        }];
        features = {
          "default" = [ "__internal_flaky_tests" "runtime" ];
          "runtime" = [
            "futures-cpupool"
            "net2"
            "tokio"
            "tokio-executor"
            "tokio-reactor"
            "tokio-tcp"
            "tokio-threadpool"
            "tokio-timer"
          ];
        };
        resolvedDefaultFeatures = [
          "futures-cpupool"
          "net2"
          "runtime"
          "tokio"
          "tokio-executor"
          "tokio-reactor"
          "tokio-tcp"
          "tokio-threadpool"
          "tokio-timer"
        ];
      };
      "ident_case" = rec {
        crateName = "ident_case";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0fac21q6pwns8gh1hz3nbq15j8fi441ncl6w4vlnd1cmc55kiq5r";
        authors = [ "Ted Driggs <ted.driggs@outlook.com>" ];

      };
      "idna 0.1.5" = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0kl4gs5kaydn4v07c6ka33spm9qdh2np0x7iw7g5zd8z1c7rxw1q";
        authors = [ "The rust-url developers" ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];

      };
      "idna 0.2.0" = rec {
        crateName = "idna";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1a9066imqpdrm1aavfasdyb1zahqaz8jmdcwdawvb1pf60y6gqh2";
        authors = [ "The rust-url developers" ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];

      };
      "image" = rec {
        crateName = "image";
        version = "0.22.5";
        edition = "2015";
        sha256 = "0jpbd0p1q7xx6395ba9ikz2k4cfp26qczisa8m2v15w3hzd2mv88";
        authors = [
          "ccgn"
          "bvssvni <bvssvni@gmail.com>"
          "nwin"
          "TyOverby <ty@pre-alpha.com>"
          "HeroicKatora"
          "Calum"
          "CensoredUsername <cens.username@gmail.com>"
          "fintelia <fintelia@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
          }
          {
            name = "num-iter";
            packageId = "num-iter";
          }
          {
            name = "num-rational";
            packageId = "num-rational";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "png";
            packageId = "png";
            optional = true;
          }
        ];
        features = {
          "default" = [
            "gif_codec"
            "jpeg"
            "ico"
            "png_codec"
            "pnm"
            "tga"
            "tiff"
            "webp"
            "bmp"
            "hdr"
            "dxt"
            "jpeg_rayon"
          ];
          "gif_codec" = [ "gif" ];
          "hdr" = [ "scoped_threadpool" ];
          "ico" = [ "bmp" "png_codec" ];
          "jpeg" = [ "jpeg-decoder" ];
          "jpeg_rayon" = [ "jpeg-decoder/rayon" ];
          "png_codec" = [ "png" ];
        };
        resolvedDefaultFeatures = [ "bmp" "ico" "png" "png_codec" ];
      };
      "indexmap" = rec {
        crateName = "indexmap";
        version = "1.4.0";
        edition = "2015";
        sha256 = "1ziabh0lc4wwahv3qgv6aqckyydcrczpagpfp770jn5m2fqv5663";
        authors = [ "bluss" "Josh Stone <cuviper@gmail.com>" ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = { "serde-1" = [ "serde" ]; };
      };
      "inflate" = rec {
        crateName = "inflate";
        version = "0.4.5";
        edition = "2015";
        sha256 = "1zxjdn8iwa0ssxrnjmywm3r1v284wryvzrf8vkc7nyf5ijbjknqw";
        authors = [ "nwin <nwin@users.noreply.github.com>" ];
        dependencies = [{
          name = "adler32";
          packageId = "adler32";
        }];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "inotify" = rec {
        crateName = "inotify";
        version = "0.8.3";
        edition = "2018";
        sha256 = "1m74znskinrvfcp0hczwwdxvc7kvnrrailngkivk1iwknfa0mpa6";
        authors = [
          "Hanno Braun <mail@hannobraun.de>"
          "Félix Saparelli <me@passcod.name>"
          "Cristian Kubis <cristian.kubis@tsunix.de>"
          "Frank Denis <github@pureftpd.org>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "inotify-sys";
            packageId = "inotify-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "default" = [ "stream" ];
          "stream" = [ "futures-core" "mio" "tokio" ];
        };
      };
      "inotify-sys" = rec {
        crateName = "inotify-sys";
        version = "0.1.3";
        edition = "2015";
        sha256 = "1h2nwgajz80qddjm4mpma94zahxw84nscbycy9pgzbjrgjl1ljp7";
        authors = [ "Hanno Braun <hb@hannobraun.de>" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
        }];

      };
      "instant" = rec {
        crateName = "instant";
        version = "0.1.4";
        edition = "2018";
        sha256 = "10k1170waz1na056wvjvkps3lz28z9pc8kp8vpy4kpp53i5a4xvp";
        type = [ "cdylib" "rlib" ];
        authors = [ "sebcrozet <developer@crozet.re>" ];
        features = {
          "now" = [ "time" ];
          "wasm-bindgen" = [ "js-sys" "wasm-bindgen_rs" "web-sys" ];
        };
      };
      "io-kit-sys" = rec {
        crateName = "io-kit-sys";
        version = "0.1.0";
        edition = "2015";
        sha256 = "186h7gm6kf1d00cb3w5mpyf9arcdkxw7jzhl1c4wvm2xk5scq7gj";
        authors = [ "Junji Takakura <j.takakura@gmail.com>" ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "mach";
            packageId = "mach";
          }
        ];

      };
      "iovec" = rec {
        crateName = "iovec";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0ph73qygwx8i0mblrf110cj59l00gkmsgrpzz1rm85syz5pymcxj";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
          target = { target, features }: target."unix";
        }];

      };
      "itertools" = rec {
        crateName = "itertools";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0jyml7ygr7kijkcjdl3fk5f34y5h5jsavclim7l13zjiavw1hkr8";
        authors = [ "bluss" ];
        dependencies = [{
          name = "either";
          packageId = "either";
          usesDefaultFeatures = false;
        }];
        features = { "default" = [ "use_std" ]; };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itoa" = rec {
        crateName = "itoa";
        version = "0.4.5";
        edition = "2015";
        sha256 = "13nxqrfnh83a7x5rw4wq2ilp8nxvwy74dxzysdg59dbxqk0agdxq";
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "jobserver" = rec {
        crateName = "jobserver";
        version = "0.1.21";
        edition = "2018";
        sha256 = "1wm7h76xf7a4d0q6583agbsyl2s46vndrlnr015zffclpcz32waw";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
          target = { target, features }: target."unix";
        }];

      };
      "js-sys" = rec {
        crateName = "js-sys";
        version = "0.3.40";
        edition = "2018";
        sha256 = "0xr18n6xkh6a3sf4kppjq2rwb94x4a933gck035cw9gas8xc446f";
        authors = [ "The wasm-bindgen Developers" ];
        dependencies = [{
          name = "wasm-bindgen";
          packageId = "wasm-bindgen";
        }];

      };
      "kernel32-sys" = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1389av0601a9yz8dvx5zha9vmkd6ik7ax0idpb032d28555n41vm";
        libName = "kernel32";
        authors = [ "Peter Atashian <retep998@gmail.com>" ];
        dependencies = [{
          name = "winapi";
          packageId = "winapi 0.2.8";
        }];
        buildDependencies = [{
          name = "winapi-build";
          packageId = "winapi-build";
        }];

      };
      "khronos_api" = rec {
        crateName = "khronos_api";
        version = "3.1.0";
        edition = "2015";
        sha256 = "1p0xj5mlbagqyvvnv8wmv3cr7l9y1m153888pxqwg3vk3mg5inz2";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
          "Corey Richardson"
          "Arseny Kapoulkine"
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];

      };
      "kv-log-macro" = rec {
        crateName = "kv-log-macro";
        version = "1.0.6";
        edition = "2018";
        sha256 = "066lypi7b3h413f43mqly6zd5nd4ddjlv9m96pmsfz2z45npvxag";
        authors = [ "Yoshua Wuyts <yoshuawuyts@gmail.com>" ];
        dependencies = [{
          name = "log";
          packageId = "log";
          features = [ "kv_unstable" ];
        }];

      };
      "lazy_static" = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "0in6ikhw8mgl33wjv6q6xfrb5b9jr16q8ygjy803fay4zcisvaz2";
        authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
        features = { "spin_no_std" = [ "spin" ]; };
      };
      "lazycell" = rec {
        crateName = "lazycell";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0gvqycmpv7parc98i6y64ai7rvxrn1947z2a6maa02g4kvxdd55j";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Nikita Pekin <contact@nikitapek.in>"
        ];
        features = { "nightly-testing" = [ "clippy" "nightly" ]; };
      };
      "lewton" = rec {
        crateName = "lewton";
        version = "0.10.1";
        edition = "2015";
        sha256 = "03bwszwdra225y8i6061m799pzy1kg130mr13vma0jqzjykvwhmy";
        type = [ "lib" "staticlib" ];
        authors = [ "est31 <MTest31@outlook.com>" ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
          }
          {
            name = "ogg";
            packageId = "ogg";
            optional = true;
          }
          {
            name = "tinyvec";
            packageId = "tinyvec";
            features = [ "alloc" ];
          }
        ];
        devDependencies = [{
          name = "ogg";
          packageId = "ogg";
        }];
        features = {
          "async_ogg" = [ "ogg" "ogg/async" "futures" "tokio-io" ];
          "default" = [ "ogg" ];
        };
        resolvedDefaultFeatures = [ "default" "ogg" ];
      };
      "libc" = rec {
        crateName = "libc";
        version = "0.2.71";
        edition = "2015";
        sha256 = "0jbgi25rhglhvpxv62alyzyral6601kldmlhbxim4w6j15jv0mwl";
        authors = [ "The Rust Project Developers" ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "extra_traits" "std" "use_std" ];
      };
      "libgit2-sys" = rec {
        crateName = "libgit2-sys";
        version = "0.12.7+1.0.0";
        edition = "2018";
        sha256 = "1q2k647p267cam1chmyzrz676xnjlhyfbzgca69ppjwvcil7kl5w";
        libName = "libgit2_sys";
        libPath = "lib.rs";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libssh2-sys";
            packageId = "libssh2-sys";
            optional = true;
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: target."unix";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "https" = [ "openssl-sys" ];
          "ssh" = [ "libssh2-sys" ];
        };
        resolvedDefaultFeatures =
          [ "https" "libssh2-sys" "openssl-sys" "ssh" "ssh_key_from_memory" ];
      };
      "libloading 0.5.2" = rec {
        crateName = "libloading";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0lyply8rcqc8agajzxs7bq6ivba9dnn1i68kgb9z2flnfjh13cgj";
        authors = [ "Simonas Kazlauskas <libloading@kazlauskas.me>" ];
        dependencies = [{
          name = "winapi";
          packageId = "winapi 0.3.8";
          target = { target, features }: target."windows";
          features = [ "winerror" "errhandlingapi" "libloaderapi" ];
        }];
        buildDependencies = [{
          name = "cc";
          packageId = "cc";
        }];

      };
      "libloading 0.6.2" = rec {
        crateName = "libloading";
        version = "0.6.2";
        edition = "2015";
        sha256 = "07671b8b8s7w7kj65cja3l31gkdl1r9cfy2wy1fw8w7hd7kvib9c";
        authors = [ "Simonas Kazlauskas <libloading@kazlauskas.me>" ];
        dependencies = [{
          name = "winapi";
          packageId = "winapi 0.3.8";
          target = { target, features }: target."windows";
          features = [ "winerror" "errhandlingapi" "libloaderapi" ];
        }];

      };
      "libsqlite3-sys" = rec {
        crateName = "libsqlite3-sys";
        version = "0.18.0";
        edition = "2018";
        sha256 = "1ggpbnis0rci97ln628y2v6pkgfhb6zgc8rsp444mkdfph14lw0y";
        authors = [ "The rusqlite developers" ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            optional = true;
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
            optional = true;
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            optional = true;
            target = { target, features }: (target."env" == "msvc");
          }
        ];
        features = {
          "buildtime_bindgen" = [ "bindgen" "pkg-config" "vcpkg" ];
          "bundled" = [ "cc" "bundled_bindings" ];
          "bundled-windows" = [ "cc" "bundled_bindings" ];
          "default" = [ "min_sqlite_version_3_6_8" ];
          "min_sqlite_version_3_6_23" = [ "pkg-config" "vcpkg" ];
          "min_sqlite_version_3_6_8" = [ "pkg-config" "vcpkg" ];
          "min_sqlite_version_3_7_16" = [ "pkg-config" "vcpkg" ];
          "min_sqlite_version_3_7_7" = [ "pkg-config" "vcpkg" ];
          "session" = [ "preupdate_hook" ];
        };
        resolvedDefaultFeatures = [
          "bundled"
          "bundled_bindings"
          "cc"
          "default"
          "min_sqlite_version_3_6_8"
          "min_sqlite_version_3_7_16"
          "pkg-config"
          "vcpkg"
        ];
      };
      "libssh2-sys" = rec {
        crateName = "libssh2-sys";
        version = "0.2.17";
        edition = "2015";
        sha256 = "09gmh2bvnm1cv0qyzjac5cx1aah66ikx6dlz1fa6rshrkdmm2pyl";
        libName = "libssh2_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Wez Furlong <wez@wezfurlong.org>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            target = { target, features }: target."unix";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = { target, features }: (target."env" == "msvc");
          }
        ];
        features = { "vendored-openssl" = [ "openssl-sys/vendored" ]; };
      };
      "libudev-sys" = rec {
        crateName = "libudev-sys";
        version = "0.1.4";
        edition = "2015";
        sha256 = "09236fdzlx9l0dlrsc6xx21v5x8flpfm3d5rjq9jr5ivlas6k11w";
        authors = [ "David Cuddeback <david.cuddeback@gmail.com>" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
        }];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];

      };
      "libz-sys" = rec {
        crateName = "libz-sys";
        version = "1.0.25";
        edition = "2015";
        sha256 = "1gjycyl2283525abks98bhxa4r259m617xfm5z52p3p3c8ry9d9f";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
        }];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = { target, features }: (target."env" == "msvc");
          }
        ];
        features = { };
      };
      "line_drawing" = rec {
        crateName = "line_drawing";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1fcna7hq1g1kkkqy07hydscx5d2zgb6gskz3vnsvsif8h8ysvisw";
        authors = [ "Expenses <expenses@airmail.cc>" ];
        dependencies = [{
          name = "num-traits";
          packageId = "num-traits";
        }];

      };
      "linked-hash-map" = rec {
        crateName = "linked-hash-map";
        version = "0.5.3";
        edition = "2015";
        sha256 = "0jih3za0p1mywlnwcakc462q1byk6z8vnrzdm36hg6cxk7asdmcd";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        features = {
          "heapsize_impl" = [ "heapsize" ];
          "serde_impl" = [ "serde" "serde_test" ];
        };
      };
      "lock_api" = rec {
        crateName = "lock_api";
        version = "0.3.4";
        edition = "2018";
        sha256 = "0xgc5dzmajh0akbh5d6d7rj9mh5rzpk74pyrc946v2ixgakj9nn4";
        authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
        dependencies = [{
          name = "scopeguard";
          packageId = "scopeguard";
          usesDefaultFeatures = false;
        }];
        features = { };
      };
      "log" = rec {
        crateName = "log";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1xz18ixccl5c6np4linv3ypc7hpmmgpc5zzd2ymp2ssfx0mhbdhl";
        authors = [ "The Rust Project Developers" ];
        dependencies = [{
          name = "cfg-if";
          packageId = "cfg-if";
        }];
        features = { "kv_unstable_sval" = [ "kv_unstable" "sval/fmt" ]; };
        resolvedDefaultFeatures = [ "kv_unstable" "std" ];
      };
      "lz4-compress" = rec {
        crateName = "lz4-compress";
        version = "0.1.1";
        edition = "2015";
        crateBin = [ ];
        sha256 = "14cb8rpdfk6q3bjkf7mirpyzb6rvvcglqnayx6lvpa92m4rnb5hg";
        authors = [ "ticki <Ticki@users.noreply.github.com>" ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 0.5.3";
          }
          {
            name = "quick-error";
            packageId = "quick-error";
          }
        ];

      };
      "mach" = rec {
        crateName = "mach";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1qdhs16cl1j3w7kvy6ak7h8lbyqmr6i3i15qfzpnv9gyrn3j9pc6";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "David Cuddeback <david.cuddeback@gmail.com>"
        ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
          usesDefaultFeatures = false;
        }];
        features = {
          "default" = [ "use_std" "deprecated" ];
          "use_std" = [ "libc/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "deprecated" "use_std" ];
      };
      "malloc_buf" = rec {
        crateName = "malloc_buf";
        version = "0.0.6";
        edition = "2015";
        sha256 = "1jqr77j89pwszv51fmnknzvd53i1nkmcr8rjrvcxhm4dx1zr1fv2";
        authors = [ "Steven Sheldon" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
        }];

      };
      "matchers" = rec {
        crateName = "matchers";
        version = "0.0.1";
        edition = "2018";
        sha256 = "1q8ckqmkjqkznvdi9x0z769yz2bmvlqcwx51ad2lpk4mfmgpi6gh";
        authors = [ "Eliza Weisman <eliza@buoyant.io>" ];
        dependencies = [{
          name = "regex-automata";
          packageId = "regex-automata";
        }];

      };
      "matches" = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "020axl4q7rk9vz90phs7f8jas4imxal9y9kxl4z4v7a6719mrz3z";
        libPath = "lib.rs";
        authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];

      };
      "maybe-uninit" = rec {
        crateName = "maybe-uninit";
        version = "2.0.0";
        edition = "2015";
        sha256 = "004y0nzmpfdrhz251278341z6ql34iv1k6dp1h6af7d6nd6jwc30";
        authors =
          [ "est31 <MTest31@outlook.com>" "The Rust Project Developers" ];

      };
      "memchr" = rec {
        crateName = "memchr";
        version = "2.3.3";
        edition = "2015";
        sha256 = "0074pvsfl938ndl5js14ibc7i9q0k3zp390z843w8nlyv4bxha1p";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
        features = {
          "default" = [ "std" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "use_std" ];
      };
      "memmap" = rec {
        crateName = "memmap";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0ns7kkd1h4pijdkwfvw4qlbbmqmlmzwlq3g2676dcl5vwyazv1b5";
        authors = [ "Dan Burkert <dan@danburkert.com>" ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [
              "basetsd"
              "handleapi"
              "memoryapi"
              "minwindef"
              "std"
              "sysinfoapi"
            ];
          }
        ];

      };
      "memoffset" = rec {
        crateName = "memoffset";
        version = "0.5.4";
        edition = "2015";
        sha256 = "1n236rn8yxbi4ckh1qkz34822bgp24qijnp99sfhjx73lw12rz5l";
        authors = [ "Gilad Naaman <gilad.naaman@gmail.com>" ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "migrations_internals" = rec {
        crateName = "migrations_internals";
        version = "1.4.1";
        edition = "2015";
        sha256 = "0q2qk4jpa16mcfcmhjz6hdg2s73az1k7j0cy08vvh87h997chkrb";
        authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
        dependencies = [{
          name = "diesel";
          packageId = "diesel";
          usesDefaultFeatures = false;
        }];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "migrations_macros" = rec {
        crateName = "migrations_macros";
        version = "1.4.2";
        edition = "2015";
        sha256 = "173qgwans6n2jf6b7qajq273rvg1r9c34p5fflzr53gx14lz2lwp";
        procMacro = true;
        authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
        dependencies = [
          {
            name = "migrations_internals";
            packageId = "migrations_internals";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "extra-traits" ];
          }
        ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "mime" = rec {
        crateName = "mime";
        version = "0.3.16";
        edition = "2015";
        sha256 = "13dcm9lh01hdwfjcg74ppljyjfj1c6w3a3cwkhxf0w8wa37cfq1a";
        authors = [ "Sean McArthur <sean@seanmonstar.com>" ];

      };
      "minifb" = rec {
        crateName = "minifb";
        version = "0.14.0";
        edition = "2015";
        sha256 = "0k01hl2iqvmmvdhwmmw6ij0n7crnwypi8l7aiks6kpdhir2j173r";
        authors = [ "Daniel Collin <daniel@collin.com>" ];
        dependencies = [
          {
            name = "cast";
            packageId = "cast";
          }
          {
            name = "orbclient";
            packageId = "orbclient";
            target = { target, features }:
              (stdenv.hostPlatform.config == "x86_64-unknown-redox");
          }
          {
            name = "raw-window-handle";
            packageId = "raw-window-handle";
          }
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winuser" "wingdi" "libloaderapi" "errhandlingapi" ];
          }
          {
            name = "x11-dl";
            packageId = "x11-dl";
            target = { target, features }:
              (stdenv.hostPlatform.config == "aarch64-unknown-linux-gnu");
          }
          {
            name = "x11-dl";
            packageId = "x11-dl";
            target = { target, features }:
              (stdenv.hostPlatform.config == "arm-unknown-linux-gnueabihf");
          }
          {
            name = "x11-dl";
            packageId = "x11-dl";
            target = { target, features }:
              (stdenv.hostPlatform.config == "armv7-unknown-linux-gnueabihf");
          }
          {
            name = "x11-dl";
            packageId = "x11-dl";
            target = { target, features }:
              (stdenv.hostPlatform.config == "i686-unknown-linux-gnu");
          }
          {
            name = "x11-dl";
            packageId = "x11-dl";
            target = { target, features }:
              (stdenv.hostPlatform.config == "x86_64-unknown-dragonfly");
          }
          {
            name = "x11-dl";
            packageId = "x11-dl";
            target = { target, features }:
              (stdenv.hostPlatform.config == "x86_64-unknown-freebsd");
          }
          {
            name = "x11-dl";
            packageId = "x11-dl";
            target = { target, features }:
              (stdenv.hostPlatform.config == "x86_64-unknown-linux-gnu");
          }
        ];
        buildDependencies = [{
          name = "cc";
          packageId = "cc";
        }];

      };
      "mio" = rec {
        crateName = "mio";
        version = "0.6.22";
        edition = "2015";
        sha256 = "0c64razhyam9892kgxsshmkqs6smrd11087nxb48nhjn4q4lgqzw";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "fuchsia-zircon";
            packageId = "fuchsia-zircon";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "miow";
            packageId = "miow";
            target = { target, features }: target."windows";
          }
          {
            name = "net2";
            packageId = "net2";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
        ];
        features = { "default" = [ "with-deprecated" ]; };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "mio-extras" = rec {
        crateName = "mio-extras";
        version = "2.0.6";
        edition = "2018";
        sha256 = "069gfhlv0wlwfx1k2sriwfws490kjp490rv2qivyfb01j3i3yh2j";
        authors = [ "Carl Lerche <me@carllerche.com>" "David Hotham" ];
        dependencies = [
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];

      };
      "mio-uds" = rec {
        crateName = "mio-uds";
        version = "0.6.8";
        edition = "2015";
        sha256 = "1w36w09gd8as1mah80wdy0kgpshmphmljj68gij34hvdnag6kjxg";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [
          {
            name = "iovec";
            packageId = "iovec";
            target = { target, features }: target."unix";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "mio";
            packageId = "mio";
            target = { target, features }: target."unix";
          }
        ];

      };
      "miow" = rec {
        crateName = "miow";
        version = "0.2.1";
        edition = "2015";
        sha256 = "06g9b8sqlh5gxakwqq4rrib07afwanfnxgxajrldwcgk3hxjy7wc";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
          }
          {
            name = "net2";
            packageId = "net2";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
          {
            name = "ws2_32-sys";
            packageId = "ws2_32-sys";
          }
        ];

      };
      "mopa" = rec {
        crateName = "mopa";
        version = "0.2.2";
        edition = "2015";
        sha256 = "05grm5s996fmjs7w2bq6lwrq969gwn1knba6aw7j6v15f41791d7";
        authors = [ "Chris Morgan <me@chrismorgan.info>" ];
        features = { "no_std_examples" = [ "no_std" ]; };
      };
      "msgbox" = rec {
        crateName = "msgbox";
        version = "0.4.0";
        edition = "2015";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/bekker/msgbox-rs.git";
          rev = "68fe39a60019b38a1569ae4e9ed796a0f0542673";
          sha256 = "18h6s50n7mz2ggfishhi91p2298shqhzx5xagpg9q4zb4y90c2wr";
        };
        authors = [ "Jang Ryeol <ryeolj5911@gmail.com>" ];
        dependencies = [
          {
            name = "cocoa";
            packageId = "cocoa 0.19.1";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "gtk";
            packageId = "gtk";
            target = { target, features }: (target."os" == "freebsd");
          }
          {
            name = "gtk";
            packageId = "gtk";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "objc";
            packageId = "objc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "winuser" ];
          }
        ];

      };
      "net2" = rec {
        crateName = "net2";
        version = "0.2.34";
        edition = "2015";
        sha256 = "1xsay6x9fqkq34mfyfyavkrk29z7j4wb9fzw5as4yw3nmhcck9rb";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }:
              ((target."os" == "redox") || target."unix"
                || (target."os" == "wasi"));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features =
              [ "handleapi" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = { "default" = [ "duration" ]; };
        resolvedDefaultFeatures = [ "default" "duration" ];
      };
      "nix 0.14.1" = rec {
        crateName = "nix";
        version = "0.14.1";
        edition = "2015";
        sha256 = "1kmxdlmvnmq8cfpmr3g6wk37rwi2ybdvp1z6z3831m1p23p2nwkc";
        authors = [ "The nix-rust Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [{
          name = "cc";
          packageId = "cc";
          target = { target, features }: (target."os" == "dragonfly");
        }];

      };
      "nix 0.15.0" = rec {
        crateName = "nix";
        version = "0.15.0";
        edition = "2015";
        sha256 = "0aa2l7wg9pzx24ks4p97gdy09a4hhs1sr9drxnm75v906d7hnbiv";
        authors = [ "The nix-rust Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            features = [ "extra_traits" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [{
          name = "cc";
          packageId = "cc";
          target = { target, features }: (target."os" == "dragonfly");
        }];

      };
      "nodrop" = rec {
        crateName = "nodrop";
        version = "0.1.14";
        edition = "2015";
        sha256 = "1fz1v9r8ijacf0hlq0pdv5l9mz8vgqg1snmhvpjmi9aci1b4mvvj";
        authors = [ "bluss" ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
      "noise" = rec {
        crateName = "noise";
        version = "0.6.0";
        edition = "2015";
        sha256 = "0w7p5cgqwiyyjdz4n7pdwlix03pgb20ah7m02fv9g8fq9mvjax9k";
        authors = [ "The Noise-rs Developers." ];
        dependencies = [{
          name = "rand";
          packageId = "rand 0.5.6";
        }];
        features = { "default" = [ "image" ]; };
      };
      "nom 4.2.3" = rec {
        crateName = "nom";
        version = "4.2.3";
        edition = "2015";
        sha256 = "1mkvby8b4m61p4g1px0pwr58yfkphyp1jcfbp4qfp7l6iqdaklia";
        authors = [ "contact@geoffroycouprie.com" ];
        dependencies = [{
          name = "memchr";
          packageId = "memchr";
          usesDefaultFeatures = false;
        }];
        buildDependencies = [{
          name = "version_check";
          packageId = "version_check 0.1.5";
        }];
        features = {
          "default" = [ "std" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
          "verbose-errors" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "nom 5.1.1" = rec {
        crateName = "nom";
        version = "5.1.1";
        edition = "2018";
        sha256 = "1mma0q5bzgzbyyjc2w8z0wvff08yaaf28lhmnsj2slwpv99i4iqb";
        authors = [ "contact@geoffroycouprie.com" ];
        dependencies = [{
          name = "memchr";
          packageId = "memchr";
          usesDefaultFeatures = false;
        }];
        buildDependencies = [{
          name = "version_check";
          packageId = "version_check 0.9.2";
        }];
        features = {
          "default" = [ "std" "lexical" ];
          "lexical" = [ "lexical-core" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "notify" = rec {
        crateName = "notify";
        version = "5.0.0-pre.3";
        edition = "2018";
        sha256 = "03kxlcnpg8xkhp3g04y8basy7kpkzwjx97hfp9hb3d48rw3kdl3p";
        authors = [
          "Félix Saparelli <me@passcod.name>"
          "Daniel Faust <hessijames@gmail.com>"
        ];
        dependencies = [
          {
            name = "anymap";
            packageId = "anymap";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.4.2";
          }
          {
            name = "filetime";
            packageId = "filetime";
          }
          {
            name = "fsevent";
            packageId = "fsevent";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "fsevent-sys";
            packageId = "fsevent-sys";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "inotify";
            packageId = "inotify";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mio";
            packageId = "mio";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "mio-extras";
            packageId = "mio-extras";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [
              "fileapi"
              "handleapi"
              "ioapiset"
              "minwinbase"
              "synchapi"
              "winbase"
              "winnt"
            ];
          }
        ];
        features = { };
      };
      "num 0.1.42" = rec {
        crateName = "num";
        version = "0.1.42";
        edition = "2015";
        sha256 = "0vhmyvfan380f86895z0f8rjscjc6qvwcmyvm15370ik2mjas0s7";
        authors = [ "The Rust Project Developers" ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
          }
          {
            name = "num-iter";
            packageId = "num-iter";
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
        ];
        features = {
          "bigint" = [ "num-bigint" ];
          "complex" = [ "num-complex" ];
          "default" = [ "bigint" "complex" "rational" "rustc-serialize" ];
          "rational" = [ "num-rational" ];
          "rustc-serialize" = [
            "num-bigint/rustc-serialize"
            "num-complex/rustc-serialize"
            "num-rational/rustc-serialize"
          ];
          "serde" =
            [ "num-bigint/serde" "num-complex/serde" "num-rational/serde" ];
        };
      };
      "num 0.2.1" = rec {
        crateName = "num";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0dhcvhprvvx1iaaq7sxlgxw5awmj8dibni8vhizi59zyz4q60lxq";
        authors = [ "The Rust Project Developers" ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-complex";
            packageId = "num-complex";
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-iter";
            packageId = "num-iter";
            usesDefaultFeatures = false;
          }
          {
            name = "num-rational";
            packageId = "num-rational";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [
            "num-bigint/i128"
            "num-complex/i128"
            "num-integer/i128"
            "num-iter/i128"
            "num-rational/i128"
            "num-traits/i128"
          ];
          "rand" = [ "num-bigint/rand" "num-complex/rand" ];
          "serde" =
            [ "num-bigint/serde" "num-complex/serde" "num-rational/serde" ];
          "std" = [
            "num-bigint/std"
            "num-complex/std"
            "num-integer/std"
            "num-iter/std"
            "num-rational/std"
            "num-rational/bigint"
            "num-traits/std"
          ];
        };
        resolvedDefaultFeatures = [ "default" "num-bigint" "std" ];
      };
      "num-bigint" = rec {
        crateName = "num-bigint";
        version = "0.2.6";
        edition = "2015";
        sha256 = "015k3wixdi4w698sappvy43pf8bvkw0f88xplmdgc3zfk2cpy309";
        authors = [ "The Rust Project Developers" ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-complex" = rec {
        crateName = "num-complex";
        version = "0.2.4";
        edition = "2015";
        sha256 = "15dwaksw729r3v14sgzc9723s3fnfixiir8jzwx7b7kim48r9cdn";
        authors = [ "The Rust Project Developers" ];
        dependencies = [{
          name = "num-traits";
          packageId = "num-traits";
          usesDefaultFeatures = false;
        }];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-integer" = rec {
        crateName = "num-integer";
        version = "0.1.43";
        edition = "2015";
        sha256 = "0nw79ynfvw8br6yncv27pw65y2vw2z7m3kv9g2hinm1dcrz4ancd";
        authors = [ "The Rust Project Developers" ];
        dependencies = [{
          name = "num-traits";
          packageId = "num-traits";
          usesDefaultFeatures = false;
        }];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-iter" = rec {
        crateName = "num-iter";
        version = "0.1.41";
        edition = "2015";
        sha256 = "17sb142lhmpsq17cf9wrffjh8vjk901axxf55565r6cgfiy6nvks";
        authors = [ "The Rust Project Developers" ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-rational" = rec {
        crateName = "num-rational";
        version = "0.2.4";
        edition = "2015";
        sha256 = "1vsaz96chxcgpqd5a0dq8hb3b4sj6dnlhwmpbkf4mx6vnls0202w";
        authors = [ "The Rust Project Developers" ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = {
          "bigint" = [ "num-bigint" ];
          "bigint-std" = [ "bigint" "num-bigint/std" ];
          "default" = [ "bigint-std" "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "bigint" "num-bigint" "std" ];
      };
      "num-traits" = rec {
        crateName = "num-traits";
        version = "0.2.12";
        edition = "2015";
        sha256 = "04fnzwlnn6fcy09jjbi9l7bj5dvg657x5c2sjgwfb3pl0z67n9mc";
        authors = [ "The Rust Project Developers" ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 1.0.0";
        }];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num_cpus" = rec {
        crateName = "num_cpus";
        version = "1.13.0";
        edition = "2015";
        sha256 = "1cv6yxhz2zbnwn8pn1yn8grg7zsnd523947fby41a737aqvryj85";
        authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }:
              (((target."arch" == "x86_64") || (target."arch" == "aarch64"))
                && (target."os" == "hermit"));
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "objc" = rec {
        crateName = "objc";
        version = "0.2.7";
        edition = "2015";
        sha256 = "1cbpf6kz8a244nn1qzl3xyhmp05gsg4n313c9m3567625d3innwi";
        authors = [ "Steven Sheldon" ];
        dependencies = [{
          name = "malloc_buf";
          packageId = "malloc_buf";
        }];
        features = { "exception" = [ "objc_exception" ]; };
      };
      "objc-foundation" = rec {
        crateName = "objc-foundation";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1y9bwb3m5fdq7w7i4bnds067dhm4qxv4m1mbg9y61j9nkrjipp8s";
        authors = [ "Steven Sheldon" ];
        dependencies = [
          {
            name = "block";
            packageId = "block";
          }
          {
            name = "objc";
            packageId = "objc";
          }
          {
            name = "objc_id";
            packageId = "objc_id";
          }
        ];

      };
      "objc_id" = rec {
        crateName = "objc_id";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0fq71hnp2sdblaighjc82yrac3adfmqzhpr11irhvdfp9gdlsbf9";
        authors = [ "Steven Sheldon" ];
        dependencies = [{
          name = "objc";
          packageId = "objc";
        }];

      };
      "object" = rec {
        crateName = "object";
        version = "0.19.0";
        edition = "2018";
        sha256 = "1cpc3arnxypx0292q8mrh08jzlic5s0rr7alz8lfcbj89i1akg4w";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Philip Craig <philipjcraig@gmail.com>"
        ];
        features = {
          "compression" = [ "flate2" "std" ];
          "default" = [ "read" "compression" ];
          "pe" = [ "coff" ];
          "read" = [ "read_core" "coff" "elf" "macho" "pe" "wasm" ];
          "wasm" = [ "wasmparser" ];
          "write" = [ "write_core" "coff" "elf" "macho" ];
          "write_core" = [ "crc32fast" "indexmap" "std" ];
        };
        resolvedDefaultFeatures = [ "coff" "elf" "macho" "pe" "read_core" ];
      };
      "ogg" = rec {
        crateName = "ogg";
        version = "0.7.0";
        edition = "2015";
        sha256 = "058ym6sr2k7fj5d7q9j7v4gcn3q3ys8chfmvfkhx1scb2jwiv7yp";
        authors = [ "est31 <MTest31@outlook.com>" ];
        dependencies = [{
          name = "byteorder";
          packageId = "byteorder 1.3.4";
        }];
        features = { "async" = [ "tokio-io" "futures" "bytes" ]; };
      };
      "once_cell" = rec {
        crateName = "once_cell";
        version = "1.4.0";
        edition = "2018";
        sha256 = "138n52yni5qym7ds8kxckvhdy4x0m0scy0gl74brmwsahmz1yqqb";
        authors = [ "Aleksey Kladov <aleksey.kladov@gmail.com>" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "oorandom" = rec {
        crateName = "oorandom";
        version = "11.1.1";
        edition = "2018";
        sha256 = "0n33kc6bci43762knisghpi23alasj2ckqp43ccn0zrwqddk5bwl";
        authors = [ "Simon Heath <icefox@dreamquest.io>" ];

      };
      "openssl-probe" = rec {
        crateName = "openssl-probe";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1pijrdifgsdwd45b08c2g0dsmnhz7c3kmagb70839ngrd7d29bvp";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];

      };
      "openssl-sys" = rec {
        crateName = "openssl-sys";
        version = "0.9.58";
        edition = "2015";
        sha256 = "1pkq3x8w16kqvkg75g4w7nny56w9clssww0ibpzg015n153xnhm8";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
        }];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = { target, features }: (target."env" == "msvc");
          }
        ];
        features = { "vendored" = [ "openssl-src" ]; };
      };
      "orbclient" = rec {
        crateName = "orbclient";
        version = "0.3.27";
        edition = "2015";
        sha256 = "00lldp1z1vjqdhx4ky03fjxw08y45rqpz98awdcd1ywlmdbqzcgq";
        authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
        dependencies = [
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }:
              ((!(builtins.elem "no_std" features))
                && (target."os" == "redox"));
          }
          {
            name = "sdl2";
            packageId = "sdl2";
            target = { target, features }:
              ((!(builtins.elem "no_std" features))
                && (!(target."os" == "redox")));
          }
        ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "ordered-float" = rec {
        crateName = "ordered-float";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0625x96987kspdxbikry5mb7hsf5pdc5bbanxd8wjwqlx0ar71hq";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
          "Matt Brubeck <mbrubeck@limpet.net>"
        ];
        dependencies = [{
          name = "num-traits";
          packageId = "num-traits";
          usesDefaultFeatures = false;
        }];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "osmesa-sys" = rec {
        crateName = "osmesa-sys";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0fq1q1zcgfb0qydrg9r2738jlwc4hqxgb9vj11z72bjxx7kfrkw8";
        libName = "osmesa_sys";
        libPath = "lib.rs";
        authors = [ "Daggerbot <daggerbot@gmail.com>" ];
        dependencies = [{
          name = "shared_library";
          packageId = "shared_library";
        }];

      };
      "packed_simd" = rec {
        crateName = "packed_simd";
        version = "0.3.3";
        edition = "2018";
        sha256 = "0822wqf6kzw4ig9ykndg348w2bxkhs3x64brzsvdxh2a1pyajpm8";
        authors = [ "Gonzalo Brito Gadeschi <gonzalobg88@gmail.com>" ];
        dependencies = [{
          name = "cfg-if";
          packageId = "cfg-if";
        }];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "pango" = rec {
        crateName = "pango";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0rr7dc4s9fhx3pl22mvkr2a382c17h3likck0cy3qdr4w80lhds5";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango-sys";
            packageId = "pango-sys";
          }
        ];
        features = {
          "dox" = [ "pango-sys/dox" "glib/dox" ];
          "v1_31" = [ "pango-sys/v1_31" ];
          "v1_32" = [ "v1_31" "pango-sys/v1_32" ];
          "v1_32_4" = [ "v1_32" "pango-sys/v1_32_4" ];
          "v1_34" = [ "v1_32_4" "pango-sys/v1_34" ];
          "v1_36_7" = [ "v1_34" "pango-sys/v1_36_7" ];
          "v1_38" = [ "v1_36_7" "pango-sys/v1_38" ];
          "v1_42" = [ "v1_38" "pango-sys/v1_42" ];
        };
      };
      "pango-sys" = rec {
        crateName = "pango-sys";
        version = "0.6.0";
        edition = "2015";
        sha256 = "18clfl1a7cxs83y5lbx9k3r034892mfmwcz4ldc41bx444wrn0wl";
        libName = "pango_sys";
        authors = [ "The Gtk-rs Project Developers" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];
        features = {
          "v1_32" = [ "v1_31" ];
          "v1_32_4" = [ "v1_32" ];
          "v1_34" = [ "v1_32_4" ];
          "v1_36_7" = [ "v1_34" ];
          "v1_38" = [ "v1_36_7" ];
          "v1_42" = [ "v1_38" ];
        };
      };
      "parking_lot 0.10.2" = rec {
        crateName = "parking_lot";
        version = "0.10.2";
        edition = "2018";
        sha256 = "0pjhcbyk6n0g6jsr6s9nf4x8wribm1b2yf8fgc8drbqa77mh99yk";
        authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.7.2";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot 0.9.0" = rec {
        crateName = "parking_lot";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0lk2vq3hp88ygpgsrypdr3ss71fidnqbykva0csgxhmn5scb2hpq";
        authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.6.2";
          }
        ];
        buildDependencies = [{
          name = "rustc_version";
          packageId = "rustc_version";
        }];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot_core 0.6.2" = rec {
        crateName = "parking_lot_core";
        version = "0.6.2";
        edition = "2018";
        sha256 = "0ay67dpnrn68ryyvp720m9i8hzp189fd4d6slrs1lvmcwywv2xmq";
        authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec 0.6.13";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [
              "winnt"
              "ntstatus"
              "minwindef"
              "winerror"
              "winbase"
              "errhandlingapi"
              "handleapi"
            ];
          }
        ];
        buildDependencies = [{
          name = "rustc_version";
          packageId = "rustc_version";
        }];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "parking_lot_core 0.7.2" = rec {
        crateName = "parking_lot_core";
        version = "0.7.2";
        edition = "2018";
        sha256 = "18s0cw5y32447c06fhg2mp3xfng22fn1h9fpx3il98sbimv7r36m";
        authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.4.0";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [
              "winnt"
              "ntstatus"
              "minwindef"
              "winerror"
              "winbase"
              "errhandlingapi"
              "handleapi"
            ];
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "peeking_take_while" = rec {
        crateName = "peeking_take_while";
        version = "0.1.2";
        edition = "2015";
        sha256 = "16bhqr6rdyrp12zv381cxaaqqd0pwysvm1q8h2ygihvypvfprc8r";
        authors = [ "Nick Fitzgerald <fitzgen@gmail.com>" ];

      };
      "percent-encoding 1.0.1" = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0cgq08v1fvr6bs5fvy390cz830lq4fak8havdasdacxcw790s09i";
        libPath = "lib.rs";
        authors = [ "The rust-url developers" ];

      };
      "percent-encoding 2.1.0" = rec {
        crateName = "percent-encoding";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0bp3zrsk3kr47fbpipyczidbbx4g54lzxdm77ni1i3qws10mdzfl";
        libPath = "lib.rs";
        authors = [ "The rust-url developers" ];

      };
      "petgraph" = rec {
        crateName = "petgraph";
        version = "0.4.13";
        edition = "2015";
        sha256 = "0kyfmca854s54jk26g2x1kjb04c3k7cjilaxyr0if8lhxv8mjdlw";
        authors = [ "bluss" "mitchmindtree" ];
        dependencies = [{
          name = "fixedbitset";
          packageId = "fixedbitset";
        }];
        features = {
          "all" = [ "unstable" "quickcheck" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" ];
          "graphmap" = [ "ordermap" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
      };
      "pin-project" = rec {
        crateName = "pin-project";
        version = "0.4.20";
        edition = "2018";
        sha256 = "069rhbdy323xxbxxqq3n47mylnd10qx36qdw36xi5l9pj3zp6lz7";
        authors = [ "Taiki Endo <te316e89@gmail.com>" ];
        dependencies = [{
          name = "pin-project-internal";
          packageId = "pin-project-internal";
          usesDefaultFeatures = false;
        }];

      };
      "pin-project-internal" = rec {
        crateName = "pin-project-internal";
        version = "0.4.20";
        edition = "2018";
        sha256 = "0vdya7f3msv7bz41di9iir3y06n4wzymqshxg9071hykjd4b9d0h";
        procMacro = true;
        authors = [ "Taiki Endo <te316e89@gmail.com>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "pin-project-lite" = rec {
        crateName = "pin-project-lite";
        version = "0.1.7";
        edition = "2018";
        sha256 = "05dp09xswfb18i2jmlvzkb0pd0fin9s3m64fgyksg6161zqxnai8";
        authors = [ "Taiki Endo <te316e89@gmail.com>" ];

      };
      "pin-utils" = rec {
        crateName = "pin-utils";
        version = "0.1.0";
        edition = "2018";
        sha256 = "117ir7vslsl2z1a7qzhws4pd01cg2d3338c47swjyvqv2n60v1wb";
        authors = [ "Josef Brandl <mail@josefbrandl.de>" ];

      };
      "piston-float" = rec {
        crateName = "piston-float";
        version = "0.3.0";
        edition = "2015";
        sha256 = "169i7rhi986m2s5x7v993cn1k1rin15jwlb66bvbrm7g82kc6n5h";
        libName = "float";
        authors = [ "bvssvni <bvssvni@gmail.com>" ];

      };
      "piston-viewport" = rec {
        crateName = "piston-viewport";
        version = "0.5.0";
        edition = "2015";
        sha256 = "049n07r87ww24mvkzcp0w7k6z7d3zp08wrnsgkaydavxbycxv5kx";
        libName = "viewport";
        authors = [ "bvssvni <bvssvni@gmail.com>" ];
        dependencies = [{
          name = "piston-float";
          packageId = "piston-float";
        }];

      };
      "pistoncore-input" = rec {
        crateName = "pistoncore-input";
        version = "0.24.0";
        edition = "2015";
        sha256 = "0bq5lkw0x10fdiycl30g8jpq1naz4wscm816cklwifn78bi2qq8c";
        libName = "input";
        authors = [ "bvssvni <bvssvni@gmail.com>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "piston-viewport";
            packageId = "piston-viewport";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];

      };
      "pkg-config" = rec {
        crateName = "pkg-config";
        version = "0.3.17";
        edition = "2015";
        sha256 = "0xynnaxdv0gzadlw4h79j855k0q7rj4zb9xb1vk00nc6ss559nh5";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];

      };
      "plotters" = rec {
        crateName = "plotters";
        version = "0.2.15";
        edition = "2018";
        sha256 = "1fzn4h0mk5d8z5wpnggkajypbb2mv6lrsqih0gg37fmywzxqa5hd";
        authors = [ "Hao Hou <haohou302@gmail.com>" ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: (target."arch" == "wasm32");
            features = [
              "Document"
              "DomRect"
              "Element"
              "HtmlElement"
              "Node"
              "Window"
              "HtmlCanvasElement"
              "CanvasRenderingContext2d"
            ];
          }
        ];
        features = {
          "bitmap" = [ "ttf" ];
          "cairo" = [ "cairo-rs" "ttf" ];
          "datetime" = [ "chrono" ];
          "default" = [
            "image_encoder"
            "svg"
            "chrono"
            "palette_ext"
            "gif_backend"
            "deprecated_items"
            "bitmap"
            "ttf"
            "errorbar"
            "candlestick"
            "boxplot"
            "histogram"
            "area_series"
            "line_series"
            "point_series"
          ];
          "evcxr" = [ "svg" ];
          "gif_backend" = [ "gif" "bitmap" ];
          "image_encoder" = [ "image" "bitmap" ];
          "palette_ext" = [ "palette" ];
          "piston" = [ "piston_window" "ttf" ];
          "ttf" = [ "font-kit" "rusttype" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "area_series" "line_series" "svg" ];
      };
      "png" = rec {
        crateName = "png";
        version = "0.15.3";
        edition = "2018";
        sha256 = "10x2qkhyfnm3si5vgx77r2ik811gaap7ahi825wfxgsb0lirm1gg";
        authors = [ "nwin <nwin@users.noreply.github.com>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "deflate";
            packageId = "deflate";
            optional = true;
          }
          {
            name = "inflate";
            packageId = "inflate";
          }
        ];
        features = {
          "default" = [ "png-encoding" ];
          "png-encoding" = [ "deflate" ];
        };
        resolvedDefaultFeatures = [ "default" "deflate" "png-encoding" ];
      };
      "portpicker" = rec {
        crateName = "portpicker";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/xMAC94x/portpicker-rs";
          rev = "9d6df36c53c94684080a64a7212dd6bfc3617ee4";
          sha256 = "00vl2k3xfihxq86kf5rsknjl8dxmrxqhwajwn0hj4gzgnbssr0rx";
        };
        authors = [ "Hannes Karppila <hannes.karppila@gmail.com>" ];
        dependencies = [{
          name = "rand";
          packageId = "rand 0.7.3";
        }];

      };
      "ppv-lite86" = rec {
        crateName = "ppv-lite86";
        version = "0.2.8";
        edition = "2018";
        sha256 = "1shj4q7jwj0azssr8cg51dk3kh7d4lg9rmbbz1kbqk971vc5wyi3";
        authors = [ "The CryptoCorrosion Contributors" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "proc-macro-hack" = rec {
        crateName = "proc-macro-hack";
        version = "0.5.16";
        edition = "2018";
        sha256 = "1r657v7d9vh1ivrvq65rvg9gjb29dpa0l3zg2fgrn5j8znz5c13y";
        procMacro = true;
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];

      };
      "proc-macro-nested" = rec {
        crateName = "proc-macro-nested";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1pmnm488ff22n8miizanbj2yqshldc5vbw70s18yvsdrcga1pzha";
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];

      };
      "proc-macro2 0.4.30" = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0nd71fl24sys066jrha6j7i34nfkjv44yzw8yww9742wmc8j0gfg";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [{
          name = "unicode-xid";
          packageId = "unicode-xid 0.1.0";
        }];
        features = { "default" = [ "proc-macro" ]; };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "proc-macro2 1.0.18" = rec {
        crateName = "proc-macro2";
        version = "1.0.18";
        edition = "2018";
        sha256 = "1yn8szcbnm9j2sw427vpf603xjg6v27hfny40ifzdc8nm0qn7bmy";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [{
          name = "unicode-xid";
          packageId = "unicode-xid 0.2.0";
        }];
        features = { "default" = [ "proc-macro" ]; };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "prometheus" = rec {
        crateName = "prometheus";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1k8ig1yayxvl96kavsmjdmc19mj9i324viqm1jb6x6p3vrbfs36x";
        authors =
          [ "overvenus@gmail.com" "siddontang@gmail.com" "vistaswx@gmail.com" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "spin";
            packageId = "spin";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "default" = [ "protobuf" ];
          "gen" = [ "protobuf-codegen-pure" ];
          "nightly" = [ "libc" ];
          "process" = [ "libc" "procfs" ];
          "push" = [ "reqwest" "libc" "protobuf" ];
        };
      };
      "qstring" = rec {
        crateName = "qstring";
        version = "0.7.2";
        edition = "2018";
        sha256 = "0khhcpwifis87r5chr4jiv3w1bkswcf226c0yjx809pzbzkglr6l";
        authors = [ "Martin Algesten <martin@algesten.se>" ];
        dependencies = [{
          name = "percent-encoding";
          packageId = "percent-encoding 2.1.0";
        }];

      };
      "quick-error" = rec {
        crateName = "quick-error";
        version = "1.2.3";
        edition = "2015";
        sha256 = "1q6za3v78hsspisc197bg3g7rpc989qycy8ypr8ap8igv10ikl51";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];

      };
      "quote 0.6.13" = rec {
        crateName = "quote";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1qgqq48jymp5h4y082aanf25hrw6bpb678xh3zw993qfhxmkpqkc";
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];
        dependencies = [{
          name = "proc-macro2";
          packageId = "proc-macro2 0.4.30";
          usesDefaultFeatures = false;
        }];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "quote 1.0.7" = rec {
        crateName = "quote";
        version = "1.0.7";
        edition = "2018";
        sha256 = "0drzd6pq7whq7qhdvvs8wn6pbb0hhc12pz8wv80fb05ixhbksmma";
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];
        dependencies = [{
          name = "proc-macro2";
          packageId = "proc-macro2 1.0.18";
          usesDefaultFeatures = false;
        }];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "radium" = rec {
        crateName = "radium";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1b27ihsm5sg17nrkj475y1wymzdxzg7lxy770c98crb16230mxfy";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
          "myrrlyn <self@myrrlyn.dev>"
        ];

      };
      "rand 0.5.6" = rec {
        crateName = "rand";
        version = "0.5.6";
        edition = "2015";
        sha256 = "1fdcgja9167hlzkf4g5daqwp498lwiyq7aqm05whklpbsdyc8666";
        authors = [ "The Rust Project Developers" ];
        dependencies = [
          {
            name = "cloudabi";
            packageId = "cloudabi";
            optional = true;
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            optional = true;
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            optional = true;
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "i128_support" ];
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
          "std" = [
            "rand_core/std"
            "alloc"
            "libc"
            "winapi"
            "cloudabi"
            "fuchsia-cprng"
          ];
        };
        resolvedDefaultFeatures = [
          "alloc"
          "cloudabi"
          "default"
          "fuchsia-cprng"
          "libc"
          "std"
          "winapi"
        ];
      };
      "rand 0.6.5" = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1jl4449jcl4wgmzld6ffwqj5gwxrp8zvx8w573g1z368qg6xlwbd";
        authors =
          [ "The Rand Project Developers" "The Rust Project Developers" ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.1.0";
          }
          {
            name = "rand_isaac";
            packageId = "rand_isaac";
          }
          {
            name = "rand_jitter";
            packageId = "rand_jitter";
          }
          {
            name = "rand_os";
            packageId = "rand_os";
            optional = true;
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg 0.1.2";
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 0.1.7";
        }];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" =
            [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand_os" "std" ];
      };
      "rand 0.7.3" = rec {
        crateName = "rand";
        version = "0.7.3";
        edition = "2018";
        sha256 = "00sdaimkbz491qgi6qxkv582yivl32m2jd401kzbn94vsiwicsva";
        authors =
          [ "The Rand Project Developers" "The Rust Project Developers" ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            rename = "getrandom_package";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.2.2";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
            target = { target, features }: (target."os" == "emscripten");
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg 0.2.1";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg 0.2.1";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" =
            [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [
          "alloc"
          "default"
          "getrandom"
          "getrandom_package"
          "libc"
          "rand_pcg"
          "small_rng"
          "std"
        ];
      };
      "rand_chacha 0.1.1" = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1vxwyzs4fy1ffjc8l00fsyygpiss135irjf7nyxgq2v0lqf3lvam";
        authors =
          [ "The Rand Project Developers" "The Rust Project Developers" ];
        dependencies = [{
          name = "rand_core";
          packageId = "rand_core 0.3.1";
          usesDefaultFeatures = false;
        }];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 0.1.7";
        }];

      };
      "rand_chacha 0.2.2" = rec {
        crateName = "rand_chacha";
        version = "0.2.2";
        edition = "2018";
        sha256 = "00il36fkdbsmpr99p9ksmmp6dn1md7rmnwmz0rr77jbrca2yvj7l";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "default" "simd" "std" ];
      };
      "rand_core 0.3.1" = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0jzdgszfa4bliigiy4hi66k7fs3gfwi2qxn8vik84ph77fwdwvvs";
        authors =
          [ "The Rand Project Developers" "The Rust Project Developers" ];
        dependencies = [{
          name = "rand_core";
          packageId = "rand_core 0.4.2";
        }];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rand_core 0.4.2" = rec {
        crateName = "rand_core";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1p09ynysrq1vcdlmcqnapq4qakl2yd1ng3kxh3qscpx09k2a6cww";
        authors =
          [ "The Rand Project Developers" "The Rust Project Developers" ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rand_core 0.5.1" = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "06bdvx08v3rkz451cm7z59xwwqn1rkfh6v9ay77b14f8dwlybgch";
        authors =
          [ "The Rand Project Developers" "The Rust Project Developers" ];
        dependencies = [{
          name = "getrandom";
          packageId = "getrandom";
          optional = true;
        }];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_hc 0.1.0" = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i0vl8q5ddvvy0x8hf1zxny393miyzxkwqnw31ifg6p0gdy6fh3v";
        authors = [ "The Rand Project Developers" ];
        dependencies = [{
          name = "rand_core";
          packageId = "rand_core 0.3.1";
          usesDefaultFeatures = false;
        }];

      };
      "rand_hc 0.2.0" = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0g31sqwpmsirdlwr0svnacr4dbqyz339im4ssl9738cjgfpjjcfa";
        authors = [ "The Rand Project Developers" ];
        dependencies = [{
          name = "rand_core";
          packageId = "rand_core 0.5.1";
        }];

      };
      "rand_isaac" = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "027flpjr4znx2csxk7gxb7vrf9c7y5mydmvg5az2afgisp4rgnfy";
        authors =
          [ "The Rand Project Developers" "The Rust Project Developers" ];
        dependencies = [{
          name = "rand_core";
          packageId = "rand_core 0.3.1";
          usesDefaultFeatures = false;
        }];
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
      "rand_jitter" = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "16z387y46bfz3csc42zxbjq89vcr1axqacncvv8qhyy93p4xarhi";
        authors = [ "The Rand Project Developers" ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }:
              ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "profileapi" ];
          }
        ];
        features = { "std" = [ "rand_core/std" ]; };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_os" = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0wahppm0s64gkr2vmhcgwc0lij37in1lgfxg5rbgqlz0l5vgcxbv";
        authors = [ "The Rand Project Developers" ];
        dependencies = [
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
            features = [ "std" ];
          }
          {
            name = "rdrand";
            packageId = "rdrand";
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          }
        ];

      };
      "rand_pcg 0.1.2" = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0i0bdla18a8x4jn1w0fxsbs3jg7ajllz6azmch1zw33r06dv1ydb";
        authors = [ "The Rand Project Developers" ];
        dependencies = [{
          name = "rand_core";
          packageId = "rand_core 0.4.2";
        }];
        buildDependencies = [{
          name = "autocfg";
          packageId = "autocfg 0.1.7";
        }];
        features = { "serde1" = [ "serde" "serde_derive" ]; };
      };
      "rand_pcg 0.2.1" = rec {
        crateName = "rand_pcg";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0ab4h6s6x3py833jk61lwadq83qd1c8bih2hgi6yps9rnv0x1aqn";
        authors = [ "The Rand Project Developers" ];
        dependencies = [{
          name = "rand_core";
          packageId = "rand_core 0.5.1";
        }];
        features = { "serde1" = [ "serde" ]; };
      };
      "rand_xorshift" = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0p2x8nr00hricpi2m6ca5vysiha7ybnghz79yqhhx6sl4gkfkxyb";
        authors =
          [ "The Rand Project Developers" "The Rust Project Developers" ];
        dependencies = [{
          name = "rand_core";
          packageId = "rand_core 0.3.1";
          usesDefaultFeatures = false;
        }];
        features = { "serde1" = [ "serde" "serde_derive" ]; };
      };
      "raw-window-handle" = rec {
        crateName = "raw-window-handle";
        version = "0.3.3";
        edition = "2018";
        sha256 = "04c2wir7qq3g2b143yav52a1g5ack8ffqx2bpmrn9bc0dix1li0a";
        authors = [ "Osspial <osspial@gmail.com>" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
        }];
        features = { };
      };
      "rayon" = rec {
        crateName = "rayon";
        version = "1.3.0";
        edition = "2018";
        sha256 = "1650g13bxlmywhdlw65q3g1zyyb7l0wcm35v45kf31cwgwly6v6v";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon-core";
            packageId = "rayon-core";
          }
        ];

      };
      "rayon-core" = rec {
        crateName = "rayon-core";
        version = "1.7.0";
        edition = "2018";
        sha256 = "1ac55kpnh2390ah7r071vnjbiy308qpznql0n597x5dgxx39pa08";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue 0.2.3";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];

      };
      "rdrand" = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1cjq0kwx1bk7jx3kzyciiish5gqsj7620dm43dc52sr8fzmm9037";
        authors = [ "Simonas Kazlauskas <rdrand@kazlauskas.me>" ];
        dependencies = [{
          name = "rand_core";
          packageId = "rand_core 0.3.1";
          usesDefaultFeatures = false;
        }];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "redox_syscall" = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "110y7dyfm2vci4x5vk7gr0q551dvp31npl99fnsx2fb17wzwcf94";
        libName = "syscall";
        authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];

      };
      "redox_users" = rec {
        crateName = "redox_users";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0cbl5w16l3bqm22i4vszclf6hzpljxicghmllw7j13az4s9k1ch9";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
          }
          {
            name = "rust-argon2";
            packageId = "rust-argon2 0.7.0";
          }
        ];

      };
      "regex" = rec {
        crateName = "regex";
        version = "1.3.9";
        edition = "2015";
        sha256 = "1rnqga94ypykl2apgj26l2j1s9bvr2ix4dlzs323n6abyky80dww";
        authors = [ "The Rust Project Developers" ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            usesDefaultFeatures = false;
          }
          {
            name = "thread_local";
            packageId = "thread_local";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "perf" "unicode" "regex-syntax/default" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-cache" = [ "thread_local" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [
            "unicode-age"
            "unicode-bool"
            "unicode-case"
            "unicode-gencat"
            "unicode-perl"
            "unicode-script"
            "unicode-segment"
            "regex-syntax/unicode"
          ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [
          "aho-corasick"
          "default"
          "memchr"
          "perf"
          "perf-cache"
          "perf-dfa"
          "perf-inline"
          "perf-literal"
          "std"
          "thread_local"
          "unicode"
          "unicode-age"
          "unicode-bool"
          "unicode-case"
          "unicode-gencat"
          "unicode-perl"
          "unicode-script"
          "unicode-segment"
        ];
      };
      "regex-automata" = rec {
        crateName = "regex-automata";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1r3aqa9c0s9sfrmd2w0mli16ldjzbar0rzb1x7srfjkasrqys7df";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
            usesDefaultFeatures = false;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "regex-syntax" ];
          "transducer" = [ "std" "fst" ];
        };
        resolvedDefaultFeatures = [ "default" "regex-syntax" "std" ];
      };
      "regex-syntax" = rec {
        crateName = "regex-syntax";
        version = "0.6.18";
        edition = "2015";
        sha256 = "1s648w7rwpxnq9iqwbyy43ar4al07906jpz0jxlql23bgjwjwh96";
        authors = [ "The Rust Project Developers" ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [
            "unicode-age"
            "unicode-bool"
            "unicode-case"
            "unicode-gencat"
            "unicode-perl"
            "unicode-script"
            "unicode-segment"
          ];
        };
        resolvedDefaultFeatures = [
          "default"
          "unicode"
          "unicode-age"
          "unicode-bool"
          "unicode-case"
          "unicode-gencat"
          "unicode-perl"
          "unicode-script"
          "unicode-segment"
        ];
      };
      "ring" = rec {
        crateName = "ring";
        version = "0.16.14";
        edition = "2018";
        sha256 = "00wnw05snf12nxgkr5jq3ajapz81hmhsz809z042h9qj9zxgxcq6";
        authors = [ "Brian Smith <brian@briansmith.org>" ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }:
              ((target."os" == "android") || (target."os" == "linux"));
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }:
              ((target."os" == "android") || (target."os" == "freebsd")
                || (target."os" == "linux") || (target."os" == "netbsd")
                || (target."os" == "openbsd") || (target."os" == "solaris"));
            features = [ "std" ];
          }
          {
            name = "spin";
            packageId = "spin";
            usesDefaultFeatures = false;
            target = { target, features }:
              (((target."arch" == "aarch64") || (target."arch" == "arm")
                || (target."arch" == "x86") || (target."arch" == "x86_64"))
                && (!(target."os" == "ios")));
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            usesDefaultFeatures = false;
            target = { target, features }:
              ((target."arch" == "wasm32") && (target."vendor" == "unknown")
                && (target."os" == "unknown") && (target."env" == ""));
            features = [ "Crypto" "Window" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "windows");
            features = [ "ntsecapi" "wtypesbase" ];
          }
        ];
        buildDependencies = [{
          name = "cc";
          packageId = "cc";
          usesDefaultFeatures = false;
        }];
        devDependencies = [{
          name = "libc";
          packageId = "libc";
          usesDefaultFeatures = false;
          target = { target, features }: (target."unix" || target."windows");
        }];
        features = {
          "default" = [ "alloc" "dev_urandom_fallback" ];
          "dev_urandom_fallback" = [ "once_cell" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures =
          [ "alloc" "default" "dev_urandom_fallback" "once_cell" ];
      };
      "rodio" = rec {
        crateName = "rodio";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0w3s45pay3q618apgc8yj9z15h951mz85mhpg8dm1m9g4rhg5fvk";
        authors = [ "Pierre Krieger <pierre.krieger1708@gmail.com>" ];
        dependencies = [
          {
            name = "cpal";
            packageId = "cpal";
          }
          {
            name = "hound";
            packageId = "hound";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "lewton";
            packageId = "lewton";
            optional = true;
          }
        ];
        features = {
          "default" = [ "flac" "vorbis" "wav" "mp3" ];
          "flac" = [ "claxon" ];
          "mp3" = [ "minimp3" ];
          "vorbis" = [ "lewton" ];
          "wav" = [ "hound" ];
        };
        resolvedDefaultFeatures = [ "hound" "lewton" "vorbis" "wav" ];
      };
      "ron" = rec {
        crateName = "ron";
        version = "0.6.0";
        edition = "2018";
        sha256 = "13wgh5izxzrxkhpq39km4zklqr7br4fla77rdyhvbwyv47rn04m9";
        authors = [
          "Christopher Durham <cad97@cad97.com>"
          "Dzmitry Malyshau <kvarkus@gmail.com>"
          "Thomas Schaller <torkleyy@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.12.1";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "serde_derive" ];
          }
        ];

      };
      "roots" = rec {
        crateName = "roots";
        version = "0.0.5";
        edition = "2015";
        sha256 = "0v9pzqhphr894xpwf5f1m80fxm2xp7i612db4j5yaaxn59qprip4";
        authors = [ "Mikhail Vorotilov <mikhail.vorotilov@gmail.com>" ];

      };
      "route-recognizer" = rec {
        crateName = "route-recognizer";
        version = "0.1.13";
        edition = "2015";
        sha256 = "1y7ln295s0sjclfyj2yw084w6zan8q6jy46hrmm48g0bxdjr0l7a";
        authors = [ "wycats" ];

      };
      "rust-argon2 0.7.0" = rec {
        crateName = "rust-argon2";
        version = "0.7.0";
        edition = "2018";
        sha256 = "05xh5wfxgzq3b6jys8r34f3hmqqfs8ylvf934n9z87wfv95szj1b";
        libName = "argon2";
        authors = [ "Martijn Rijkeboer <mrr@sru-systems.com>" ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.11.0";
          }
          {
            name = "blake2b_simd";
            packageId = "blake2b_simd";
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
        ];

      };
      "rust-argon2 0.8.2" = rec {
        crateName = "rust-argon2";
        version = "0.8.2";
        edition = "2018";
        sha256 = "069syiy3ncg9yai58p3dalwvgpr1aqisqls0x1sk54vm0wjn3awx";
        libName = "argon2";
        authors = [ "Martijn Rijkeboer <mrr@sru-systems.com>" ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.12.1";
          }
          {
            name = "blake2b_simd";
            packageId = "blake2b_simd";
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = { "default" = [ "crossbeam-utils" ]; };
      };
      "rustc-demangle" = rec {
        crateName = "rustc-demangle";
        version = "0.1.16";
        edition = "2015";
        sha256 = "10qp42sl1wrdbgbbh8rnay2grm976z7hqgz32c4y09l1c071qsac";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        features = { "rustc-dep-of-std" = [ "core" "compiler_builtins" ]; };
      };
      "rustc-hash" = rec {
        crateName = "rustc-hash";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1qkc5khrmv5pqi5l5ca9p5nl5hs742cagrndhbrlk3dhlrx3zm08";
        authors = [ "The Rust Project Developers" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "rustc_version" = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "02h3x57lcr8l2pm0a645s9whdh33pn5cnrwvn5cb57vcrc53x3hk";
        authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
        dependencies = [{
          name = "semver";
          packageId = "semver";
        }];

      };
      "rustls" = rec {
        crateName = "rustls";
        version = "0.17.0";
        edition = "2018";
        sha256 = "1q8m835viqrf4bbd2fa8rnmaj48fkd984saxf0238hb8blgs7m60";
        authors = [ "Joseph Birr-Pixton <jpixton@gmail.com>" ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.11.0";
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "ring";
            packageId = "ring";
          }
          {
            name = "sct";
            packageId = "sct";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        devDependencies = [{
          name = "log";
          packageId = "log";
        }];
        features = {
          "default" = [ "logging" ];
          "logging" = [ "log" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "logging" ];
      };
      "rusttype 0.7.9" = rec {
        crateName = "rusttype";
        version = "0.7.9";
        edition = "2018";
        sha256 = "1m9ms4p94cgif74y1rzkj04rx8i1la193c0jgvnip61rd904429i";
        authors = [
          "Dylan Ede <dylanede@googlemail.com>"
          "Jeremy Soller <jackpot51@gmail.com>"
          "Alex Butler <alexheretic@gmail.com>"
        ];
        dependencies = [{
          name = "rusttype";
          packageId = "rusttype 0.8.3";
          rename = "rusttype_next";
        }];
        features = {
          "bench" = [ "gpu_cache" ];
          "gpu_cache" = [ "rusttype_next/gpu_cache" ];
        };
        resolvedDefaultFeatures = [ "gpu_cache" ];
      };
      "rusttype 0.8.3" = rec {
        crateName = "rusttype";
        version = "0.8.3";
        edition = "2018";
        sha256 = "1h5lyr61ffgg0wzp4yhc1fr5y83lzf3is17ixih7n7qhal842qcz";
        authors = [
          "Dylan Ede <dylanede@googlemail.com>"
          "Jeremy Soller <jackpot51@gmail.com>"
          "Alex Butler <alexheretic@gmail.com>"
        ];
        dependencies = [
          {
            name = "approx";
            packageId = "approx";
            usesDefaultFeatures = false;
          }
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "ordered-float";
            packageId = "ordered-float";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
            optional = true;
          }
          {
            name = "stb_truetype";
            packageId = "stb_truetype";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "has-atomics" ];
          "gpu_cache" = [
            "std"
            "linked-hash-map"
            "rustc-hash"
            "crossbeam-deque"
            "crossbeam-utils"
            "num_cpus"
          ];
          "libm-math" = [ "libm" "stb_truetype/libm" ];
          "std" = [ "has-atomics" "stb_truetype/std" ];
        };
        resolvedDefaultFeatures = [
          "crossbeam-deque"
          "crossbeam-utils"
          "default"
          "gpu_cache"
          "has-atomics"
          "linked-hash-map"
          "num_cpus"
          "rustc-hash"
          "std"
        ];
      };
      "rusty-xinput" = rec {
        crateName = "rusty-xinput";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1fxk5lkkjk09k8k3az2lli4kkr6zr6mq9871rhacmf9fqd5nbanj";
        libName = "rusty_xinput";
        authors = [ "Lokathor <zefria@gmail.com>" ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "libloaderapi" "xinput" "winerror" ];
          }
        ];

      };
      "ryu" = rec {
        crateName = "ryu";
        version = "1.0.5";
        edition = "2018";
        sha256 = "0vpqv1dj7fksa6hm3zpk5rbsjs0ifbfy7xwzsyyil0rx37a03lvi";
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];
        features = { };
      };
      "same-file" = rec {
        crateName = "same-file";
        version = "1.0.6";
        edition = "2018";
        sha256 = "00h5j1w87dmhnvbv9l8bic3y7xxsnjmssvifw2ayvgx9mb1ivz4k";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        dependencies = [{
          name = "winapi-util";
          packageId = "winapi-util";
          target = { target, features }: target."windows";
        }];

      };
      "scan_fmt" = rec {
        crateName = "scan_fmt";
        version = "0.2.5";
        edition = "2015";
        sha256 = "1gmaa07z8bkkdv5xhq2lrgml6ri7fqyyrjpiks3phmpmq3p8d0i4";
        authors = [ "wlentz" ];
        dependencies = [{
          name = "regex";
          packageId = "regex";
          optional = true;
        }];
        features = { "default" = [ "regex" ]; };
        resolvedDefaultFeatures = [ "default" "regex" ];
      };
      "scopeguard" = rec {
        crateName = "scopeguard";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1kbqm85v43rq92vx7hfiay6pmcga03vrjbbfwqpyj3pwsg3b16nj";
        authors = [ "bluss" ];
        features = { "default" = [ "use_std" ]; };
      };
      "sct" = rec {
        crateName = "sct";
        version = "0.6.0";
        edition = "2018";
        sha256 = "0g4dz7las43kcpi9vqv9c6l1afjkdv3g3w3s7d2w7a7w77wjl173";
        authors = [ "Joseph Birr-Pixton <jpixton@gmail.com>" ];
        dependencies = [
          {
            name = "ring";
            packageId = "ring";
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
        ];

      };
      "sdl2" = rec {
        crateName = "sdl2";
        version = "0.32.2";
        edition = "2015";
        sha256 = "0yyx7sl08y241ddyyfkk9ysxbxllfdpwny6s37vza0z365ra0lfh";
        libPath = "src/sdl2/lib.rs";
        authors = [
          "Tony Aldridge <tony@angry-lawyer.com>"
          "Cobrand <cobrandw@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "num";
            packageId = "num 0.1.42";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "sdl2-sys";
            packageId = "sdl2-sys";
          }
        ];
        features = {
          "bundled" = [ "sdl2-sys/bundled" ];
          "gfx" = [ "c_vec" "sdl2-sys/gfx" ];
          "image" = [ "sdl2-sys/image" ];
          "mixer" = [ "sdl2-sys/mixer" ];
          "static-link" = [ "sdl2-sys/static-link" ];
          "ttf" = [ "sdl2-sys/ttf" ];
          "use-bindgen" = [ "sdl2-sys/use-bindgen" ];
          "use-pkgconfig" = [ "sdl2-sys/use-pkgconfig" ];
          "use_mac_framework" = [ "sdl2-sys/use_mac_framework" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "sdl2-sys" = rec {
        crateName = "sdl2-sys";
        version = "0.32.6";
        edition = "2018";
        sha256 = "11kz2bqkpcywpyd5hyqflbszpgdmh64zxb61wibpsabx0wji3rrl";
        libName = "sdl2_sys";
        authors = [ "Tony Aldridge <tony@angry-lawyer.com>" ];
        dependencies = [{
          name = "libc";
          packageId = "libc";
        }];
        buildDependencies = [{
          name = "cfg-if";
          packageId = "cfg-if";
        }];
        features = {
          "bundled" = [ "cmake" "tar" "flate2" "unidiff" ];
          "use-bindgen" = [ "bindgen" ];
          "use-pkgconfig" = [ "pkg-config" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver" = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "00q4lkcj0rrgbhviv9sd4p6qmdsipkwkbra7rh11jrhq5kpvjzhx";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [{
          name = "semver-parser";
          packageId = "semver-parser";
        }];
        features = { "ci" = [ "serde" ]; };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver-parser" = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "18vhypw6zgccnrlm5ps1pwa0khz7ry927iznpr88b87cagr1v2iq";
        authors = [ "Steve Klabnik <steve@steveklabnik.com>" ];

      };
      "serde" = rec {
        crateName = "serde";
        version = "1.0.114";
        edition = "2015";
        sha256 = "1lwcxlh8c09cs6qmwr6w68hl989mczwmwrzgc3p7hl0aixcgf5sk";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [{
          name = "serde_derive";
          packageId = "serde_derive";
          optional = true;
        }];
        devDependencies = [{
          name = "serde_derive";
          packageId = "serde_derive";
        }];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "serde_derive" "std" ];
      };
      "serde_derive" = rec {
        crateName = "serde_derive";
        version = "1.0.114";
        edition = "2015";
        sha256 = "13lgjxsc617yhblm779jwg43gxab2dfgrpyd6znvl3v90i5yj2ra";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "visit" ];
          }
        ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_json" = rec {
        crateName = "serde_json";
        version = "1.0.55";
        edition = "2018";
        sha256 = "09l27n06a1k962hjdpy1c0f6fpyv3zb3j6iqfcz7mh4vfdz5sb7c";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "itoa";
            packageId = "itoa";
            usesDefaultFeatures = false;
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "preserve_order" = [ "indexmap" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_qs" = rec {
        crateName = "serde_qs";
        version = "0.5.2";
        edition = "2015";
        sha256 = "1q83k6p21vccr5jj25xmfrxnz8gggrby2867kblidgkbk52fygnl";
        authors = [ "Sam Scott <me@samjs.co.uk>" ];
        dependencies = [
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "error-chain";
            packageId = "error-chain";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 1.0.1";
          }
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        features = { "actix" = [ "actix-web" ]; };
        resolvedDefaultFeatures = [ "default" ];
      };
      "sha1" = rec {
        crateName = "sha1";
        version = "0.6.0";
        edition = "2015";
        sha256 = "03gs2q4m67rn2p8xcdfxhip6mpgahdwm12bnb3vh90ahv9grhy95";
        authors = [ "Armin Ronacher <armin.ronacher@active-4.com>" ];
        features = { };
      };
      "sharded-slab" = rec {
        crateName = "sharded-slab";
        version = "0.0.9";
        edition = "2018";
        sha256 = "0gpz2zmc73w0qlhypqv1b4irw56yp7lfxwirahmb9dbg2vss7m86";
        authors = [ "Eliza Weisman <eliza@buoyant.io>" ];
        dependencies = [{
          name = "lazy_static";
          packageId = "lazy_static";
        }];

      };
      "shared_library" = rec {
        crateName = "shared_library";
        version = "0.1.9";
        edition = "2015";
        sha256 = "04fs37kdak051hm524a360978g58ayrcarjsbf54vqps5c7px7js";
        authors = [ "Pierre Krieger <pierre.krieger1708@gmail.com>" ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "shlex" = rec {
        crateName = "shlex";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1lmv6san7g8dv6jdfp14m7bdczq9ss7j7bgsfqyqjc3jnjfippvz";
        authors = [ "comex <comexk@gmail.com>" ];

      };
      "shred" = rec {
        crateName = "shred";
        version = "0.10.2";
        edition = "2018";
        sha256 = "0v81g5vwa8bwqm388hiinb6966nr8dcqp1zq42nr9b37wqvq5w65";
        authors = [ "torkleyy <torkleyy@gmail.com>" ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.1";
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
          }
          {
            name = "mopa";
            packageId = "mopa";
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
          {
            name = "shred-derive";
            packageId = "shred-derive";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.4.0";
          }
          {
            name = "tynm";
            packageId = "tynm";
          }
        ];
        devDependencies = [{
          name = "shred-derive";
          packageId = "shred-derive";
        }];
        features = {
          "default" = [ "parallel" "shred-derive" ];
          "parallel" = [ "rayon" ];
        };
        resolvedDefaultFeatures = [ "parallel" "rayon" "shred-derive" ];
      };
      "shred-derive" = rec {
        crateName = "shred-derive";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1pvzfjhii1chn6b07mfi9bvxpybcpnasmsxx3l4vy7vmya071wx1";
        procMacro = true;
        authors = [ "torkleyy" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
          }
        ];

      };
      "shrev" = rec {
        crateName = "shrev";
        version = "1.1.1";
        edition = "2018";
        sha256 = "0zs3zw5inn151jyxh17szbz91zd7nx9ry1jbbdrrvbq3gq0jwxdm";
        authors = [
          "Simon Rönnberg <seamonr@gmail.com>"
          "torkleyy <torkleyy@gmail.com>"
        ];

      };
      "slab" = rec {
        crateName = "slab";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1y59xsa27jk84sxzswjk60xcjf8b4fm5960jwpznrrcmasyva4f1";
        authors = [ "Carl Lerche <me@carllerche.com>" ];

      };
      "smallvec 0.6.13" = rec {
        crateName = "smallvec";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1dl219vnfkmsfx28lm3f83lyw24zap6fdsli6rg8nnp1aa67bc7p";
        libPath = "lib.rs";
        authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
        dependencies = [{
          name = "maybe-uninit";
          packageId = "maybe-uninit";
        }];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "smallvec 1.4.0" = rec {
        crateName = "smallvec";
        version = "1.4.0";
        edition = "2018";
        sha256 = "1r2yxn8qamzb1jn91zbphl0x49scbfxxjr629ql58mv1w5w5djy7";
        libPath = "lib.rs";
        authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
        features = { };
      };
      "smithay-client-toolkit 0.4.6" = rec {
        crateName = "smithay-client-toolkit";
        version = "0.4.6";
        edition = "2015";
        sha256 = "1yj8yzd0lhqpsgq0x4iikl9a02q2hnkky81brk938alv0ibqrjrc";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "andrew";
            packageId = "andrew";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "dlib";
            packageId = "dlib";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "memmap";
            packageId = "memmap";
          }
          {
            name = "nix";
            packageId = "nix 0.14.1";
          }
          {
            name = "wayland-client";
            packageId = "wayland-client 0.21.13";
            features = [ "cursor" ];
          }
          {
            name = "wayland-commons";
            packageId = "wayland-commons 0.21.13";
          }
          {
            name = "wayland-protocols";
            packageId = "wayland-protocols 0.21.13";
            features = [ "native_client" "unstable_protocols" ];
          }
        ];
        devDependencies = [{
          name = "wayland-client";
          packageId = "wayland-client 0.21.13";
          features = [ "dlopen" ];
        }];

      };
      "smithay-client-toolkit 0.6.6" = rec {
        crateName = "smithay-client-toolkit";
        version = "0.6.6";
        edition = "2015";
        sha256 = "078gj7pw3x09y202yfz423iapky5q968n3qni1dj1jzmmk3qs722";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "andrew";
            packageId = "andrew";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "dlib";
            packageId = "dlib";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "memmap";
            packageId = "memmap";
          }
          {
            name = "nix";
            packageId = "nix 0.14.1";
          }
          {
            name = "wayland-client";
            packageId = "wayland-client 0.23.6";
            features = [ "cursor" ];
          }
          {
            name = "wayland-protocols";
            packageId = "wayland-protocols 0.23.6";
            features = [ "client" "unstable_protocols" ];
          }
        ];
        devDependencies = [{
          name = "wayland-client";
          packageId = "wayland-client 0.23.6";
          features = [ "dlopen" ];
        }];

      };
      "smithay-clipboard" = rec {
        crateName = "smithay-clipboard";
        version = "0.4.0";
        edition = "2018";
        sha256 = "1lbvq2sym0m1i278ri0am14carsdq9k8i73lpxn1mk9myp3qwzli";
        authors = [
          "Lucas Timmins <timmins.s.lucas@gmail.com>"
          "Victor Berger <victor.berger@m4x.org>"
        ];
        dependencies = [
          {
            name = "nix";
            packageId = "nix 0.14.1";
          }
          {
            name = "smithay-client-toolkit";
            packageId = "smithay-client-toolkit 0.6.6";
            rename = "sctk";
          }
        ];

      };
      "specs" = rec {
        crateName = "specs";
        version = "0.16.1";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/amethyst/specs.git";
          rev = "7a2e348ab2223818bad487695c66c43db88050a5";
          sha256 = "1z7gjiq7zirg9az3ly1y2ghi5m7s3x1bp35gw5x0cyv50fsi3pjq";
        };
        authors = [ "slide-rs hackers" ];
        dependencies = [
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue 0.2.3";
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
          }
          {
            name = "hibitset";
            packageId = "hibitset";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "serde_derive" ];
          }
          {
            name = "shred";
            packageId = "shred";
            usesDefaultFeatures = false;
          }
          {
            name = "shrev";
            packageId = "shrev";
          }
          {
            name = "tuple_utils";
            packageId = "tuple_utils";
          }
        ];
        devDependencies = [{
          name = "shred";
          packageId = "shred";
          usesDefaultFeatures = false;
          features = [ "shred-derive" ];
        }];
        features = {
          "default" = [ "parallel" ];
          "derive" = [ "shred-derive" "specs-derive" ];
          "parallel" = [ "rayon" "shred/parallel" "hibitset/parallel" ];
          "shred-derive" = [ "shred/shred-derive" ];
          "stdweb" = [ "uuid/stdweb" ];
          "uuid_entity" = [ "uuid" "serde" ];
          "wasm-bindgen" = [ "uuid/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [
          "default"
          "parallel"
          "rayon"
          "serde"
          "shred-derive"
          "storage-event-control"
        ];
      };
      "specs-idvs" = rec {
        crateName = "specs-idvs";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://gitlab.com/veloren/specs-idvs.git";
          rev = "fcb0b2306b571f62f9f85d89e79e087454d95efd";
          sha256 = "00w4kc60d7mjb5gbkcxrxzarshmhf4idqm3sk8335f7s3pn9q0s5";
        };
        authors = [ "Acrimon <joel.wejdenstal@gmail.com>" ];
        dependencies = [{
          name = "specs";
          packageId = "specs";
        }];

      };
      "spin" = rec {
        crateName = "spin";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0b84m6dbzrwf2kxylnw82d3dr8w06av7rfkr8s85fb5f43rwyqvf";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <git@JohnEricson.me>"
        ];

      };
      "static_assertions" = rec {
        crateName = "static_assertions";
        version = "1.1.0";
        edition = "2015";
        sha256 = "0gsl6xmw10gvn3zs1rv99laj5ig7ylffnh71f9l34js4nr4r7sx2";
        authors = [ "Nikolai Vazquez" ];
        features = { };
      };
      "stb_truetype" = rec {
        crateName = "stb_truetype";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0lgvnh3ma6cz811bk8imj45djz76zs47b8327sgnmik2x03nnyzp";
        authors = [
          "Dylan Ede <dylanede@googlemail.com>"
          "Alex Butler <alexheretic@gmail.com>"
        ];
        dependencies = [{
          name = "byteorder";
          packageId = "byteorder 1.3.4";
          usesDefaultFeatures = false;
        }];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "std" ];
      };
      "stdweb 0.1.3" = rec {
        crateName = "stdweb";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0gjk7ch31a3kgdc39kj4zqinf10yqaf717wanh9kwwbbwg430m7g";
        authors = [ "Jan Bujak <j@exia.io>" ];
        features = {
          "default" = [ "serde" "serde_json" ];
          "dev" = [ "serde" "serde_json" "clippy" ];
          "serde-support" = [ "serde" "serde_json" ];
        };
      };
      "stdweb 0.4.20" = rec {
        crateName = "stdweb";
        version = "0.4.20";
        edition = "2015";
        sha256 = "1md14n9rzxzdskz3hpgln8vxfwqsw2cswc0f5nslh4r82rmlj8nh";
        authors = [ "Jan Bujak <j@exia.io>" ];
        dependencies = [
          {
            name = "discard";
            packageId = "discard";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "stdweb-derive";
            packageId = "stdweb-derive";
          }
          {
            name = "stdweb-internal-macros";
            packageId = "stdweb-internal-macros";
          }
          {
            name = "stdweb-internal-runtime";
            packageId = "stdweb-internal-runtime";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }:
              ((target."arch" == "wasm32") && (target."vendor" == "unknown")
                && (target."os" == "unknown") && (!target."cargo_web"));
          }
        ];
        buildDependencies = [{
          name = "rustc_version";
          packageId = "rustc_version";
        }];
        devDependencies = [{
          name = "serde_json";
          packageId = "serde_json";
        }];
        features = {
          "default" = [ "serde" "serde_json" ];
          "experimental_features_which_may_break_on_minor_version_bumps" =
            [ "futures-support" ];
          "futures-support" = [
            "futures-core-preview"
            "futures-channel-preview"
            "futures-util-preview"
            "futures-executor-preview"
          ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "serde_json" ];
      };
      "stdweb-derive" = rec {
        crateName = "stdweb-derive";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1vsh7g0gaxn4kxqq3knhymdn02p2pfxmnd2j0vplpj6c1yj60yn8";
        procMacro = true;
        authors = [ "Jan Bujak <j@exia.io>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "printing" ];
          }
        ];

      };
      "stdweb-internal-macros" = rec {
        crateName = "stdweb-internal-macros";
        version = "0.2.9";
        edition = "2015";
        sha256 = "049fq8fl5ny9l5if2qv7kxwng7g6ns95h4fbm3zx360dmpv5zyjq";
        procMacro = true;
        authors = [ "Jan Bujak <j@exia.io>" ];
        dependencies = [
          {
            name = "base-x";
            packageId = "base-x";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sha1";
            packageId = "sha1";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            usesDefaultFeatures = false;
            features = [ "full" "parsing" "printing" "clone-impls" ];
          }
        ];

      };
      "stdweb-internal-runtime" = rec {
        crateName = "stdweb-internal-runtime";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1h0nkppb4r8dbrbms2hw9n5xdcs392m0r5hj3b6lsx3h6fx02dr1";
        authors = [ "Jan Bujak <j@exia.io>" ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "string" = rec {
        crateName = "string";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0vaxz85ja52fn66akgvggb29wqa5bpj3y38syykpr1pbrjzi8hfj";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [{
          name = "bytes";
          packageId = "bytes";
          optional = true;
        }];
        features = { "default" = [ "bytes" ]; };
        resolvedDefaultFeatures = [ "bytes" "default" ];
      };
      "strsim" = rec {
        crateName = "strsim";
        version = "0.9.3";
        edition = "2015";
        sha256 = "0k497pv882qn3q977ckznm13vxx927g8s1swvcv68j3c1pccwik4";
        authors = [ "Danny Guo <dannyguo91@gmail.com>" ];

      };
      "sum_type" = rec {
        crateName = "sum_type";
        version = "0.2.0";
        edition = "2015";
        sha256 = "05ba7qldsrl0g60bcfm2pgl0iqi7crvpqnj43s4qwz1wkw64lnys";
        authors = [ "Michael Bryan <michaelfbryan@gmail.com>" ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "svg_fmt" = rec {
        crateName = "svg_fmt";
        version = "0.2.1";
        edition = "2018";
        sha256 = "1z06f8nzjk65l2jzpvfgcb0iqajwm3wrm2prs46g6dypi5ggkr90";
        authors = [ "Nicolas Silva <nical@fastmail.com>" ];

      };
      "syn 0.15.44" = rec {
        crateName = "syn";
        version = "0.15.44";
        edition = "2015";
        sha256 = "1id5g6x6zihv3j7hwrw3m1jp636bg8dpi671r7zy3jvpkavb794w";
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.1.0";
          }
        ];
        features = {
          "default" =
            [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [
          "clone-impls"
          "default"
          "derive"
          "extra-traits"
          "full"
          "parsing"
          "printing"
          "proc-macro"
          "quote"
          "visit"
        ];
      };
      "syn 1.0.33" = rec {
        crateName = "syn";
        version = "1.0.33";
        edition = "2018";
        sha256 = "1kdj0piws00cc0rgn2315625dfxfpxrzf6gib5lms05viipdkmg8";
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0";
          }
        ];
        features = {
          "default" =
            [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
          "test" = [ "syn-test-suite/all-features" ];
        };
        resolvedDefaultFeatures = [
          "clone-impls"
          "default"
          "derive"
          "extra-traits"
          "fold"
          "full"
          "parsing"
          "printing"
          "proc-macro"
          "quote"
          "visit"
          "visit-mut"
        ];
      };
      "synstructure" = rec {
        crateName = "synstructure";
        version = "0.12.4";
        edition = "2018";
        sha256 = "00c72ij813xsilssgya6m6f73d0s5zzsld1y26bvhk3kdzbg4d5q";
        authors = [ "Nika Layzell <nika@thelayzells.com>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            usesDefaultFeatures = false;
            features = [
              "derive"
              "parsing"
              "printing"
              "clone-impls"
              "visit"
              "extra-traits"
            ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" =
            [ "proc-macro2/proc-macro" "syn/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "textwrap" = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [ "Martin Geisler <martin@geisler.net>" ];
        dependencies = [{
          name = "unicode-width";
          packageId = "unicode-width";
        }];

      };
      "thiserror" = rec {
        crateName = "thiserror";
        version = "1.0.20";
        edition = "2018";
        sha256 = "020d7pfq7vg2iw1bbilnyq764zy35ncg2syn9a7vgk6qriqd1zbx";
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];
        dependencies = [{
          name = "thiserror-impl";
          packageId = "thiserror-impl";
        }];

      };
      "thiserror-impl" = rec {
        crateName = "thiserror-impl";
        version = "1.0.20";
        edition = "2018";
        sha256 = "14qphjwa68sfjk3404iwv6hh8kvk6vmcwan9589sqqrhyw9gr05x";
        procMacro = true;
        authors = [ "David Tolnay <dtolnay@gmail.com>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
          }
        ];

      };
      "thread_local" = rec {
        crateName = "thread_local";
        version = "1.0.1";
        edition = "2015";
        sha256 = "054vlrr1vsdy1h4b7n99mr24pnj8928ig9qwzg36wnkld4dns36l";
        authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
        dependencies = [{
          name = "lazy_static";
          packageId = "lazy_static";
        }];

      };
      "tide" = rec {
        crateName = "tide";
        version = "0.6.0";
        edition = "2018";
        sha256 = "0fdply7b4576xv9m2kh69xqgzyzl9zngw3ixf097j45f928cj6g6";
        authors = [
          "Aaron Turon <aturon@mozilla.com>"
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            features = [ "unstable" ];
          }
          {
            name = "cookie";
            packageId = "cookie";
            features = [ "percent-encode" ];
          }
          {
            name = "futures";
            packageId = "futures 0.3.5";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-service";
            packageId = "http-service";
          }
          {
            name = "http-service-hyper";
            packageId = "http-service-hyper";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "route-recognizer";
            packageId = "route-recognizer";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_qs";
            packageId = "serde_qs";
          }
        ];
        devDependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            features = [ "unstable" "attributes" ];
          }
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "default" = [ "hyper-server" ];
          "docs" = [ "unstable" ];
          "hyper-server" = [ "http-service-hyper" ];
        };
        resolvedDefaultFeatures =
          [ "default" "http-service-hyper" "hyper-server" ];
      };
      "time" = rec {
        crateName = "time";
        version = "0.1.43";
        edition = "2015";
        sha256 = "0f14wrgxj7ya2v4msg5mni7046bsm2angm7cn3pd3yv04gpm12na";
        authors = [ "The Rust Project Developers" ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [
              "std"
              "minwinbase"
              "minwindef"
              "ntdef"
              "profileapi"
              "sysinfoapi"
              "timezoneapi"
            ];
          }
        ];
        devDependencies = [{
          name = "winapi";
          packageId = "winapi 0.3.8";
          features = [ "std" "processthreadsapi" "winbase" ];
        }];

      };
      "tiny_http" = rec {
        crateName = "tiny_http";
        version = "0.7.0";
        edition = "2015";
        sha256 = "00if87nqzwf7nzjvvq5vnjfvcpqr76jij65vk51imsndqk1lzkhm";
        authors =
          [ "pierre.krieger1708@gmail.com" "Corey Farwell <coreyf@rwell.org>" ];
        dependencies = [
          {
            name = "ascii";
            packageId = "ascii";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "chunked_transfer";
            packageId = "chunked_transfer";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
        ];
        features = { "ssl" = [ "openssl" ]; };
        resolvedDefaultFeatures = [ "default" ];
      };
      "tinytemplate" = rec {
        crateName = "tinytemplate";
        version = "1.1.0";
        edition = "2015";
        sha256 = "0by1k1hdz6jgv4ykd0izirwsm6p3qb6s9g1jb4ffqg500ihcfgbd";
        authors = [ "Brook Heisler <brookheisler@gmail.com>" ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];

      };
      "tinyvec" = rec {
        crateName = "tinyvec";
        version = "0.3.3";
        edition = "2018";
        sha256 = "1vgg2z317kq75bpd0nfda2v507qjpd7g2cjahjgivn2s78nkv5ak";
        authors = [ "Lokathor <zefria@gmail.com>" ];
        features = { };
        resolvedDefaultFeatures = [ "alloc" "default" ];
      };
      "tokio" = rec {
        crateName = "tokio";
        version = "0.1.22";
        edition = "2015";
        sha256 = "1xhaadfmm6m37f79xv5020gc3np9wqza3bq95ymp522qpfsw02as";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "mio";
            packageId = "mio";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "tokio-current-thread";
            packageId = "tokio-current-thread";
            optional = true;
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
            optional = true;
          }
          {
            name = "tokio-threadpool";
            packageId = "tokio-threadpool";
            optional = true;
          }
          {
            name = "tokio-timer";
            packageId = "tokio-timer";
            optional = true;
          }
        ];
        devDependencies = [{
          name = "num_cpus";
          packageId = "num_cpus";
        }];
        features = {
          "codec" = [ "io" "tokio-codec" ];
          "default" = [
            "codec"
            "fs"
            "io"
            "reactor"
            "rt-full"
            "sync"
            "tcp"
            "timer"
            "udp"
            "uds"
          ];
          "experimental-tracing" = [ "tracing-core" ];
          "fs" = [ "tokio-fs" ];
          "io" = [ "bytes" "tokio-io" ];
          "reactor" = [ "io" "mio" "tokio-reactor" ];
          "rt-full" = [
            "num_cpus"
            "reactor"
            "timer"
            "tokio-current-thread"
            "tokio-executor"
            "tokio-threadpool"
          ];
          "sync" = [ "tokio-sync" ];
          "tcp" = [ "tokio-tcp" ];
          "timer" = [ "tokio-timer" ];
          "udp" = [ "tokio-udp" ];
          "uds" = [ "tokio-uds" ];
        };
        resolvedDefaultFeatures = [
          "bytes"
          "io"
          "mio"
          "num_cpus"
          "reactor"
          "rt-full"
          "timer"
          "tokio-current-thread"
          "tokio-executor"
          "tokio-io"
          "tokio-reactor"
          "tokio-threadpool"
          "tokio-timer"
        ];
      };
      "tokio-buf" = rec {
        crateName = "tokio-buf";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0inwrkh8knqy44mr9h2i305zyy4pxhfy90y0gr5rm1akdks21clg";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "either";
            packageId = "either";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
        ];
        features = {
          "default" = [ "util" ];
          "util" = [ "bytes/either" "either" ];
        };
        resolvedDefaultFeatures = [ "default" "either" "util" ];
      };
      "tokio-current-thread" = rec {
        crateName = "tokio-current-thread";
        version = "0.1.7";
        edition = "2015";
        sha256 = "03p2w316ha0irgzvy37njx9hl71133gcrmrq4801w4rzm0r0xpmi";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
        ];

      };
      "tokio-executor" = rec {
        crateName = "tokio-executor";
        version = "0.1.10";
        edition = "2015";
        sha256 = "0w8n78d2vixs1vghqc4wy9w0d1h6qkli51c1yzhzbns88n7inbgv";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
        ];

      };
      "tokio-io" = rec {
        crateName = "tokio-io";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0x06zyzinans1pn90g6i150lgixijdf1cg8y2gipjd09ms58dz2p";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];

      };
      "tokio-reactor" = rec {
        crateName = "tokio-reactor";
        version = "0.1.12";
        edition = "2015";
        sha256 = "0l8klnd41q55f3ialzz0lb7s5bfwa38nh86sa9vai2xsqh75kg09";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-sync";
            packageId = "tokio-sync";
          }
        ];
        devDependencies = [{
          name = "num_cpus";
          packageId = "num_cpus";
        }];

      };
      "tokio-sync" = rec {
        crateName = "tokio-sync";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1vkxz0y7qf9sshfpxvn506pvxy4vza8piavd8p64y5n85cam1zpd";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
        ];

      };
      "tokio-tcp" = rec {
        crateName = "tokio-tcp";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0whzqnkyfym1ipzznibyjl3j9281walq4n0q5xs2xdz3cvniipwq";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
          }
        ];

      };
      "tokio-threadpool" = rec {
        crateName = "tokio-threadpool";
        version = "0.1.18";
        edition = "2015";
        sha256 = "12azq8jm71b7hdm72pxrgqm2879bn6b0fcdl1s7i2k3qh5jhnwnz";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue 0.2.3";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
        ];

      };
      "tokio-timer" = rec {
        crateName = "tokio-timer";
        version = "0.2.13";
        edition = "2015";
        sha256 = "15pjjj6daks3sii8p24a509b0dapl2kyk740nwfgz59w64nly14k";
        authors = [ "Carl Lerche <me@carllerche.com>" ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
        ];

      };
      "toml" = rec {
        crateName = "toml";
        version = "0.5.6";
        edition = "2018";
        sha256 = "06n7j8z63hj6g0kj2x6sqwxnm4q3s0q5d873bdk41vqy1cb2vjgz";
        authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
        dependencies = [{
          name = "serde";
          packageId = "serde";
        }];
        features = { "preserve_order" = [ "indexmap" ]; };
        resolvedDefaultFeatures = [ "default" ];
      };
      "tracing" = rec {
        crateName = "tracing";
        version = "0.1.15";
        edition = "2018";
        sha256 = "0ps9id9jlinx1b2yifnvby84ck0kr36kxdgwqqd92b0n1vnl07x4";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "tracing-attributes";
            packageId = "tracing-attributes";
            optional = true;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "attributes" = [ "tracing-attributes" ];
          "default" = [ "std" "attributes" ];
          "log-always" = [ "log" ];
          "std" = [ "tracing-core/std" ];
        };
        resolvedDefaultFeatures =
          [ "attributes" "default" "std" "tracing-attributes" ];
      };
      "tracing-appender" = rec {
        crateName = "tracing-appender";
        version = "0.1.0";
        edition = "2018";
        sha256 = "1h19cskjxvzpv685ybb0vsfn6r585mzz4b7hzm7z8m4vyqgsd1hy";
        authors = [
          "Zeki Sherif <zekshi@amazon.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.4.2";
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber";
          }
        ];

      };
      "tracing-attributes" = rec {
        crateName = "tracing-attributes";
        version = "0.1.8";
        edition = "2018";
        sha256 = "0k4qvq437md3zynm8qbas6jfb0xp222xisij6af3r4pxwc6svfwr";
        procMacro = true;
        authors = [
          "Tokio Contributors <team@tokio.rs>"
          "Eliza Weisman <eliza@buoyant.io>"
          "David Barsky <dbarsky@amazon.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = { };
      };
      "tracing-core" = rec {
        crateName = "tracing-core";
        version = "0.1.10";
        edition = "2018";
        sha256 = "05dpa21valy0c6nj5ybn951774icxhdb70cwq0ida7088yd3ma0a";
        authors = [ "Tokio Contributors <team@tokio.rs>" ];
        dependencies = [{
          name = "lazy_static";
          packageId = "lazy_static";
          optional = true;
        }];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "tracing-futures" = rec {
        crateName = "tracing-futures";
        version = "0.2.4";
        edition = "2018";
        sha256 = "0k4vd3jyqz9cx8rbwbp0p93qfp1w6rfk7sc6c1jh1ai18zqvcyxb";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "pin-project";
            packageId = "pin-project";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std-future" "std" ];
          "futures-01" = [ "futures_01" "std" ];
          "futures-03" = [ "std-future" "futures" "futures-task" "std" ];
          "std" = [ "tracing/std" ];
          "std-future" = [ "pin-project" ];
        };
        resolvedDefaultFeatures =
          [ "default" "pin-project" "std" "std-future" ];
      };
      "tracing-log" = rec {
        crateName = "tracing-log";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1fdr0az98q9m5kiybvdvsb2m9mg86fdidgb5czzq2d71g1qqq3sy";
        authors = [ "Tokio Contributors <team@tokio.rs>" ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
          }
        ];
        features = {
          "default" = [ "log-tracer" "trace-logger" "std" ];
          "std" = [ "log/std" ];
        };
        resolvedDefaultFeatures =
          [ "default" "log-tracer" "std" "trace-logger" ];
      };
      "tracing-serde" = rec {
        crateName = "tracing-serde";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0ybfv0bzx542xkqzhcjx33knbs92zyvxjrf7iwkfvq0niwpvmk5n";
        authors = [ "Tokio Contributors <team@tokio.rs>" ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
          }
        ];

      };
      "tracing-subscriber" = rec {
        crateName = "tracing-subscriber";
        version = "0.2.6";
        edition = "2018";
        sha256 = "06d1lb92zknb4isd1xc993a12ahlykzbm05mw7v8zqq9j52ip884";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "David Barsky <me@davidbarsky.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
            optional = true;
          }
          {
            name = "chrono";
            packageId = "chrono";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "matchers";
            packageId = "matchers";
            optional = true;
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "sharded-slab";
            packageId = "sharded-slab";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.4.0";
            optional = true;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "log-tracer" "std" ];
          }
          {
            name = "tracing-serde";
            packageId = "tracing-serde";
            optional = true;
          }
        ];
        devDependencies = [{
          name = "tracing-log";
          packageId = "tracing-log";
        }];
        features = {
          "ansi" = [ "fmt" "ansi_term" ];
          "default" = [
            "env-filter"
            "smallvec"
            "fmt"
            "ansi"
            "chrono"
            "tracing-log"
            "json"
          ];
          "env-filter" = [ "matchers" "regex" "lazy_static" ];
          "fmt" = [ "registry" ];
          "json" = [ "tracing-serde" "serde" "serde_json" ];
          "registry" = [ "sharded-slab" ];
        };
        resolvedDefaultFeatures = [
          "ansi"
          "ansi_term"
          "chrono"
          "default"
          "env-filter"
          "fmt"
          "json"
          "lazy_static"
          "matchers"
          "regex"
          "registry"
          "serde"
          "serde_json"
          "sharded-slab"
          "smallvec"
          "tracing-log"
          "tracing-serde"
        ];
      };
      "treeculler" = rec {
        crateName = "treeculler";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://gitlab.com/yusdacra/treeculler.git";
          rev = "efcf5283cf386117a7e654abdaa45ef664a08e42";
          sha256 = "19niwgha0jnvrp22pq0070dfimb2wkda53a3parhga3vhap2g01b";
        };
        authors = [ "Yusuf Bera Ertan <y.bera003.06@protonmail.com>" ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "vek";
            packageId = "vek";
          }
        ];

      };
      "try-lock" = rec {
        crateName = "try-lock";
        version = "0.2.2";
        edition = "2015";
        sha256 = "10p36rx6pqi9d0zr876xa8vksx2m66ha45myakl50rn08dxyn176";
        authors = [ "Sean McArthur <sean@seanmonstar.com>" ];

      };
      "tuple_utils" = rec {
        crateName = "tuple_utils";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1wgl7a32a9gvcxiyxznmglc9kc4d2j7c4dfzpr3nzcf5w8c490s4";
        authors = [ "Colin Sherratt <colin.sherratt@gmail.com>" ];

      };
      "tynm" = rec {
        crateName = "tynm";
        version = "0.1.4";
        edition = "2018";
        sha256 = "0knk747j6hl2fw2i008z135sxjki315waqik1alv8q9rjs0vfzrn";
        authors = [ "Azriel Hoh <azriel91@gmail.com>" ];
        dependencies = [{
          name = "nom";
          packageId = "nom 5.1.1";
          usesDefaultFeatures = false;
          features = [ "std" ];
        }];

      };
      "unicode-bidi" = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "1malx8ljgm7v1gbaazkn7iicy5wj0bwcyadj3l727a38ch6bvwj9";
        libName = "unicode_bidi";
        authors = [ "The Servo Project Developers" ];
        dependencies = [{
          name = "matches";
          packageId = "matches";
        }];
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-normalization" = rec {
        crateName = "unicode-normalization";
        version = "0.1.12";
        edition = "2015";
        sha256 = "195gb4fzlgg4g9cv6w057ncpmvvnx30r00w9hj114knhmlmm6yal";
        authors = [ "kwantam <kwantam@gmail.com>" ];
        dependencies = [{
          name = "smallvec";
          packageId = "smallvec 1.4.0";
        }];

      };
      "unicode-width" = rec {
        crateName = "unicode-width";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0yflmxkxmm89ckrb3sz58whn491aycrj8cxra0hzzlb72x9rvana";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid 0.1.0" = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1z57lqh4s18rr4x0j4fw4fmp9hf9346h0kmdgqsqx0fhjr3k0wpw";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid 0.2.0" = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0z09fn515xm7zyr0mmdyxa9mx2f7azcpv74pqmg611iralwpcvl2";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = { };
        resolvedDefaultFeatures = [ "default" ];
      };
      "untrusted" = rec {
        crateName = "untrusted";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0jkbqaj9d3v5a91pp3wp9mffvng1nhycx6sh4qkdd9qyr62ccmm1";
        libPath = "src/untrusted.rs";
        authors = [ "Brian Smith <brian@briansmith.org>" ];

      };
      "ureq" = rec {
        crateName = "ureq";
        version = "1.1.1";
        edition = "2018";
        sha256 = "0xlw95q8lg5v228hn0zlfdmbl9lafjp1d42wczjghp0s3vyd6xxp";
        authors = [ "Martin Algesten <martin@algesten.se>" ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.12.1";
          }
          {
            name = "chunked_transfer";
            packageId = "chunked_transfer";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "qstring";
            packageId = "qstring";
          }
          {
            name = "rustls";
            packageId = "rustls";
            optional = true;
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
          {
            name = "webpki";
            packageId = "webpki";
            optional = true;
          }
          {
            name = "webpki-roots";
            packageId = "webpki-roots";
            optional = true;
          }
        ];
        features = {
          "charset" = [ "encoding" ];
          "cookies" = [ "cookie" ];
          "default" = [ "tls" "cookies" ];
          "json" = [ "serde" "serde_json" ];
          "native-certs" = [ "rustls-native-certs" ];
          "socks-proxy" = [ "socks" ];
          "tls" = [ "rustls" "webpki" "webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "rustls" "tls" "webpki" "webpki-roots" ];
      };
      "url 1.7.2" = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0nim1c90mxpi9wgdw2xh8dqd72vlklwlzam436akcrhjac6pqknx";
        authors = [ "The rust-url developers" ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna 0.1.5";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 1.0.1";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
      "url 2.1.1" = rec {
        crateName = "url";
        version = "2.1.1";
        edition = "2015";
        sha256 = "1jw7cw8br4xvjb92ddrrh1r7jvqhyhiknnnfpgq9np63fs24m7c2";
        authors = [ "The rust-url developers" ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna 0.2.0";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
        ];

      };
      "uuid" = rec {
        crateName = "uuid";
        version = "0.8.1";
        edition = "2018";
        sha256 = "049w16qwk3d3b9cmpgvd7fvcnwgs75l8rlsagh06w7ga9dm2zplz";
        authors = [
          "Ashley Mannix<ashleymannix@live.com.au>"
          "Christopher Armstrong"
          "Dylan DPC<dylan.dpc@gmail.com>"
          "Hunar Roop Kahlon<hunar.roop@gmail.com>"
        ];
        dependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "serde_derive" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "guid" = [ "winapi" ];
          "stdweb" = [ "rand/stdweb" ];
          "v3" = [ "md5" ];
          "v4" = [ "rand" ];
          "v5" = [ "sha1" ];
          "wasm-bindgen" = [ "rand/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" "rand" "serde" "std" "v4" ];
      };
      "uvth 3.1.1" = rec {
        crateName = "uvth";
        version = "3.1.1";
        edition = "2018";
        sha256 = "1gxbhzrbw6cf1c9rjrfpx0d54p609nw9j6vsrl7ynwyij1w1d6p5";
        authors = [ "Acrimon <joel.wejdenstal@gmail.com>" ];
        dependencies = [
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.3.9";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];

      };
      "uvth 4.0.1" = rec {
        crateName = "uvth";
        version = "4.0.1";
        edition = "2018";
        sha256 = "0sxvw57ii7r5fdzm17yaqimadgb4lxvis7xfdi6375kb23wi0n8y";
        authors = [ "Acrimon <joel.wejdenstal@gmail.com>" ];
        dependencies = [
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.3.9";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];

      };
      "vcpkg" = rec {
        crateName = "vcpkg";
        version = "0.2.10";
        edition = "2015";
        sha256 = "132hlmsc4maava91vl4lh677sl1c7vr8ccl53fnr5w41y6dh4m34";
        authors = [ "Jim McGrath <jimmc2@gmail.com>" ];

      };
      "vec_map" = rec {
        crateName = "vec_map";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1481w9g1dw9rxp3l6snkdqihzyrd2f8vispzqmwjwsdyhw8xzggi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = { "eders" = [ "serde" ]; };
      };
      "vek" = rec {
        crateName = "vek";
        version = "0.11.2";
        edition = "2018";
        sha256 = "0k8cd6h30h65zl44b636swx2fsd2f6y8sz0mc0myh2sy9rqdhmr6";
        authors = [
          "Yoan Lecoq <yoanlecoq.io@gmail.com>"
          "Joshua Barretto <joshua.s.barretto@gmail.com>"
          "Sunjay Varma <varma.sunjay@gmail.com>"
          "timokoesters <timo@koesters.xyz>"
          "Imbris <imbrisf@gmail.com>"
        ];
        dependencies = [
          {
            name = "approx";
            packageId = "approx";
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        buildDependencies = [{
          name = "rustc_version";
          packageId = "rustc_version";
        }];
        features = {
          "default" = [ "repr_simd" "rgba" "rgb" "std" ];
          "libm" = [ "num-traits/libm" ];
          "std" = [ "num-traits/std" "serde/std" ];
        };
        resolvedDefaultFeatures =
          [ "default" "repr_simd" "rgb" "rgba" "serde" "std" ];
      };
      "veloren-chat-cli" = rec {
        crateName = "veloren-chat-cli";
        version = "0.6.0";
        edition = "2018";
        crateBin = [{
          name = "veloren-chat-cli";
          path = "src/main.rs";
        }];
        src = lib.cleanSourceWith {
          filter = sourceFilter;
          src = ../chat-cli;
        };
        authors = [ "Joshua Barretto <joshua.s.barretto@gmail.com>" ];
        dependencies = [
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber";
            usesDefaultFeatures = false;
            features = [ "fmt" "chrono" "ansi" "smallvec" ];
          }
          {
            name = "veloren-client";
            packageId = "veloren-client";
            rename = "client";
          }
          {
            name = "veloren-common";
            packageId = "veloren-common";
            rename = "common";
          }
        ];

      };
      "veloren-client" = rec {
        crateName = "veloren-client";
        version = "0.6.0";
        edition = "2018";
        src = lib.cleanSourceWith {
          filter = sourceFilter;
          src = ../client;
        };
        authors = [ "Joshua Barretto <joshua.s.barretto@gmail.com>" ];
        dependencies = [
          {
            name = "authc";
            packageId = "authc";
          }
          {
            name = "byteorder";
            packageId = "byteorder 1.3.4";
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            features = [ "rayon" "serde" "nightly" ];
          }
          {
            name = "image";
            packageId = "image";
            usesDefaultFeatures = false;
            features = [ "png" ];
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "specs";
            packageId = "specs";
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "uvth";
            packageId = "uvth 3.1.1";
          }
          {
            name = "vek";
            packageId = "vek";
            features = [ "serde" ];
          }
          {
            name = "veloren-common";
            packageId = "veloren-common";
            rename = "common";
            features = [ "no-assets" ];
          }
          {
            name = "veloren_network";
            packageId = "veloren_network";
            rename = "network";
            usesDefaultFeatures = false;
          }
        ];

      };
      "veloren-common" = rec {
        crateName = "veloren-common";
        version = "0.6.0";
        edition = "2018";
        src = lib.cleanSourceWith {
          filter = sourceFilter;
          src = ../common;
        };
        authors = [
          "Joshua Barretto <joshua.s.barretto@gmail.com>"
          "Maciej Ćwięka <mckol363@gmail.com>"
          "Imbris <imbrisf@gmail.com>"
        ];
        dependencies = [
          {
            name = "authc";
            packageId = "authc";
          }
          {
            name = "crossbeam";
            packageId = "crossbeam";
          }
          {
            name = "dot_vox";
            packageId = "dot_vox";
          }
          {
            name = "find_folder";
            packageId = "find_folder";
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            features = [ "rayon" "serde" "nightly" ];
          }
          {
            name = "image";
            packageId = "image";
            usesDefaultFeatures = false;
            features = [ "png" ];
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "notify";
            packageId = "notify";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "ron";
            packageId = "ron";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "specs";
            packageId = "specs";
            features = [ "serde" "storage-event-control" ];
          }
          {
            name = "specs-idvs";
            packageId = "specs-idvs";
          }
          {
            name = "sum_type";
            packageId = "sum_type";
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "vek";
            packageId = "vek";
            features = [ "serde" ];
          }
        ];
        devDependencies = [{
          name = "criterion";
          packageId = "criterion";
        }];
        features = { };
        resolvedDefaultFeatures = [ "no-assets" ];
      };
      "veloren-server" = rec {
        crateName = "veloren-server";
        version = "0.6.0";
        edition = "2018";
        src = lib.cleanSourceWith {
          filter = sourceFilter;
          src = ../server;
        };
        authors = [ "Joshua Barretto <joshua.s.barretto@gmail.com>" ];
        dependencies = [
          {
            name = "authc";
            packageId = "authc";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "crossbeam";
            packageId = "crossbeam";
          }
          {
            name = "diesel";
            packageId = "diesel";
            features = [ "sqlite" ];
          }
          {
            name = "diesel_migrations";
            packageId = "diesel_migrations";
          }
          {
            name = "dotenv";
            packageId = "dotenv";
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            features = [ "rayon" "serde" "nightly" ];
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libsqlite3-sys";
            packageId = "libsqlite3-sys";
            features = [ "bundled" ];
          }
          {
            name = "portpicker";
            packageId = "portpicker";
          }
          {
            name = "prometheus";
            packageId = "prometheus";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            features = [ "small_rng" ];
          }
          {
            name = "ron";
            packageId = "ron";
            usesDefaultFeatures = false;
          }
          {
            name = "scan_fmt";
            packageId = "scan_fmt";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "specs";
            packageId = "specs";
            features = [ "shred-derive" ];
          }
          {
            name = "specs-idvs";
            packageId = "specs-idvs";
          }
          {
            name = "tiny_http";
            packageId = "tiny_http";
          }
          {
            name = "tracing";
            packageId = "tracing";
          }
          {
            name = "uvth";
            packageId = "uvth 3.1.1";
          }
          {
            name = "vek";
            packageId = "vek";
          }
          {
            name = "veloren-common";
            packageId = "veloren-common";
            rename = "common";
          }
          {
            name = "veloren-world";
            packageId = "veloren-world";
            rename = "world";
          }
          {
            name = "veloren_network";
            packageId = "veloren_network";
            rename = "network";
            usesDefaultFeatures = false;
          }
        ];
        features = { "default" = [ "worldgen" ]; };
        resolvedDefaultFeatures = [ "default" "worldgen" ];
      };
      "veloren-server-cli" = rec {
        crateName = "veloren-server-cli";
        version = "0.6.0";
        edition = "2018";
        crateBin = [{
          name = "veloren-server-cli";
          path = "src/main.rs";
        }];
        src = lib.cleanSourceWith {
          filter = sourceFilter;
          src = ../server-cli;
        };
        authors = [ "Joshua Barretto <joshua.s.barretto@gmail.com>" ];
        dependencies = [
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber";
            usesDefaultFeatures = false;
            features = [ "env-filter" "fmt" "chrono" "ansi" "smallvec" ];
          }
          {
            name = "veloren-common";
            packageId = "veloren-common";
            rename = "common";
          }
          {
            name = "veloren-server";
            packageId = "veloren-server";
            rename = "server";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "worldgen" ];
          "worldgen" = [ "server/worldgen" ];
        };
        resolvedDefaultFeatures = [ "default" "worldgen" ];
      };
      "veloren-voxygen" = rec {
        crateName = "veloren-voxygen";
        version = "0.6.0";
        edition = "2018";
        crateBin = [{
          name = "veloren-voxygen";
          path = "src/main.rs";
        }];
        src = lib.cleanSourceWith {
          filter = sourceFilter;
          src = ../voxygen;
        };
        authors = [
          "Joshua Barretto <joshua.s.barretto@gmail.com>"
          "Imbris <imbrisf@gmail.com>"
        ];
        dependencies = [
          {
            name = "authc";
            packageId = "authc";
          }
          {
            name = "backtrace";
            packageId = "backtrace";
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "conrod_core";
            packageId = "conrod_core";
          }
          {
            name = "conrod_winit";
            packageId = "conrod_winit";
          }
          {
            name = "const-tweaker";
            packageId = "const-tweaker";
            optional = true;
          }
          {
            name = "cpal";
            packageId = "cpal";
          }
          {
            name = "crossbeam";
            packageId = "crossbeam";
          }
          {
            name = "deunicode";
            packageId = "deunicode";
          }
          {
            name = "directories-next";
            packageId = "directories-next";
          }
          {
            name = "dispatch";
            packageId = "dispatch";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "dot_vox";
            packageId = "dot_vox";
          }
          {
            name = "euc";
            packageId = "euc";
          }
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "gfx";
            packageId = "gfx";
          }
          {
            name = "gfx_device_gl";
            packageId = "gfx_device_gl";
            optional = true;
          }
          {
            name = "gfx_window_glutin";
            packageId = "gfx_window_glutin";
          }
          {
            name = "gilrs";
            packageId = "gilrs";
            features = [ "serde" ];
          }
          {
            name = "glsl-include";
            packageId = "glsl-include";
          }
          {
            name = "glutin";
            packageId = "glutin";
          }
          {
            name = "guillotiere";
            packageId = "guillotiere";
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            features = [ "rayon" "serde" "nightly" ];
          }
          {
            name = "image";
            packageId = "image";
            usesDefaultFeatures = false;
            features = [ "ico" "png" ];
          }
          {
            name = "msgbox";
            packageId = "msgbox";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num";
            packageId = "num 0.2.1";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "rodio";
            packageId = "rodio";
            usesDefaultFeatures = false;
            features = [ "wav" "vorbis" ];
          }
          {
            name = "ron";
            packageId = "ron";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "specs";
            packageId = "specs";
          }
          {
            name = "specs-idvs";
            packageId = "specs-idvs";
          }
          {
            name = "tracing";
            packageId = "tracing";
          }
          {
            name = "tracing-appender";
            packageId = "tracing-appender";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber";
            usesDefaultFeatures = false;
            features =
              [ "env-filter" "fmt" "chrono" "ansi" "smallvec" "tracing-log" ];
          }
          {
            name = "treeculler";
            packageId = "treeculler";
          }
          {
            name = "uvth";
            packageId = "uvth 3.1.1";
          }
          {
            name = "vek";
            packageId = "vek";
            features = [ "serde" ];
          }
          {
            name = "veloren-client";
            packageId = "veloren-client";
            rename = "client";
          }
          {
            name = "veloren-common";
            packageId = "veloren-common";
            rename = "common";
          }
          {
            name = "veloren-server";
            packageId = "veloren-server";
            rename = "server";
            optional = true;
          }
          {
            name = "veloren-voxygen-anim";
            packageId = "veloren-voxygen-anim";
            rename = "anim";
            usesDefaultFeatures = false;
          }
          {
            name = "winit";
            packageId = "winit";
            features = [ "serde" ];
          }
        ];
        buildDependencies = [{
          name = "winres";
          packageId = "winres";
          target = { target, features }: target."windows";
        }];
        devDependencies = [
          {
            name = "criterion";
            packageId = "criterion";
          }
          {
            name = "gfx_window_glutin";
            packageId = "gfx_window_glutin";
            features = [ "headless" ];
          }
          {
            name = "git2";
            packageId = "git2";
          }
          {
            name = "veloren-world";
            packageId = "veloren-world";
          }
        ];
        features = {
          "default" = [ "gl" "singleplayer" "msgbox" ];
          "gl" = [ "gfx_device_gl" ];
          "hot-anim" = [ "anim/use-dyn-lib" ];
          "singleplayer" = [ "server" ];
          "tweak" = [ "const-tweaker" ];
        };
        resolvedDefaultFeatures = [
          "const-tweaker"
          "default"
          "gfx_device_gl"
          "gl"
          "hot-anim"
          "msgbox"
          "server"
          "singleplayer"
          "tweak"
        ];
      };
      "veloren-voxygen-anim" = rec {
        crateName = "veloren-voxygen-anim";
        version = "0.6.0";
        edition = "2018";
        src = lib.cleanSourceWith {
          filter = sourceFilter;
          src = ../voxygen/src/anim;
        };
        libName = "voxygen_anim";
        authors = [
          "Joshua Barretto <joshua.s.barretto@gmail.com>"
          "Imbris <imbrisf@gmail.com>"
        ];
        dependencies = [
          {
            name = "find_folder";
            packageId = "find_folder";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "libloading";
            packageId = "libloading 0.6.2";
            optional = true;
          }
          {
            name = "notify";
            packageId = "notify";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing";
            optional = true;
          }
          {
            name = "vek";
            packageId = "vek";
            features = [ "serde" ];
          }
          {
            name = "veloren-common";
            packageId = "veloren-common";
            rename = "common";
          }
        ];
        features = {
          "default" = [ "be-dyn-lib" ];
          "use-dyn-lib" =
            [ "libloading" "notify" "lazy_static" "tracing" "find_folder" ];
        };
        resolvedDefaultFeatures = [
          "be-dyn-lib"
          "default"
          "find_folder"
          "lazy_static"
          "libloading"
          "notify"
          "tracing"
          "use-dyn-lib"
        ];
      };
      "veloren-world" = rec {
        crateName = "veloren-world";
        version = "0.6.0";
        edition = "2018";
        src = lib.cleanSourceWith {
          filter = sourceFilter;
          src = ../world;
        };
        authors = [ "Joshua Barretto <joshua.s.barretto@gmail.com>" ];
        dependencies = [
          {
            name = "arr_macro";
            packageId = "arr_macro";
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "bitvec";
            packageId = "bitvec";
          }
          {
            name = "fxhash";
            packageId = "fxhash";
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            features = [ "rayon" "serde" "nightly" ];
          }
          {
            name = "image";
            packageId = "image";
            usesDefaultFeatures = false;
            features = [ "png" ];
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "noise";
            packageId = "noise";
            usesDefaultFeatures = false;
          }
          {
            name = "num";
            packageId = "num 0.2.1";
          }
          {
            name = "ordered-float";
            packageId = "ordered-float";
          }
          {
            name = "packed_simd";
            packageId = "packed_simd";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.2.2";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "ron";
            packageId = "ron";
            usesDefaultFeatures = false;
          }
          {
            name = "roots";
            packageId = "roots";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "vek";
            packageId = "vek";
          }
          {
            name = "veloren-common";
            packageId = "veloren-common";
            rename = "common";
          }
        ];
        devDependencies = [
          {
            name = "minifb";
            packageId = "minifb";
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber";
            usesDefaultFeatures = false;
            features = [ "fmt" "chrono" "ansi" "smallvec" ];
          }
        ];

      };
      "veloren_network" = rec {
        crateName = "veloren_network";
        version = "0.1.0";
        edition = "2018";
        src = lib.cleanSourceWith {
          filter = sourceFilter;
          src = ../network;
        };
        authors = [ "Marcel Märtens <marcel.cochem@googlemail.com>" ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            usesDefaultFeatures = false;
            features = [ "std" "async-task" "default" ];
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.4.2";
          }
          {
            name = "futures";
            packageId = "futures 0.3.5";
            features = [ "thread-pool" ];
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            usesDefaultFeatures = false;
          }
          {
            name = "lz4-compress";
            packageId = "lz4-compress";
          }
          {
            name = "prometheus";
            packageId = "prometheus";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-futures";
            packageId = "tracing-futures";
          }
        ];
        devDependencies = [
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber";
            usesDefaultFeatures = false;
            features = [ "env-filter" "fmt" "chrono" "ansi" "smallvec" ];
          }
          {
            name = "uvth";
            packageId = "uvth 4.0.1";
            usesDefaultFeatures = false;
          }
        ];

      };
      "version_check 0.1.5" = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1pf91pvj8n6akh7w6j5ypka6aqz08b3qpzgs0ak2kjf4frkiljwi";
        authors = [ "Sergio Benitez <sb@sergio.bz>" ];

      };
      "version_check 0.9.2" = rec {
        crateName = "version_check";
        version = "0.9.2";
        edition = "2015";
        sha256 = "1vbaqdf802qinsq8q20w8w0qn2pv0rkq5p73ijcblrwxcvjp5adm";
        authors = [ "Sergio Benitez <sb@sergio.bz>" ];

      };
      "void" = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0zc8f0ksxvmhvgx4fdg0zyn6vdnbxd2xv9hfx4nhzg6kbs4f80ka";
        authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
        features = { "default" = [ "std" ]; };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "walkdir" = rec {
        crateName = "walkdir";
        version = "2.3.1";
        edition = "2018";
        sha256 = "0z9g39f49cycdm9vzjf8hnfh3f1csxgd65kmlphj8r2vffy84wbp";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        dependencies = [
          {
            name = "same-file";
            packageId = "same-file";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "winnt" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];

      };
      "want" = rec {
        crateName = "want";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0c52g7b4hhj033jc56sx9z3krivyciz0hlblixq2gc448zx5wfdn";
        authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "try-lock";
            packageId = "try-lock";
          }
        ];

      };
      "wasi" = rec {
        crateName = "wasi";
        version = "0.9.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "06g5v3vrdapfzvfq662cij7v8a1flwr2my45nnncdv2galrdzkfc";
        authors = [ "The Cranelift Project Developers" ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" =
            [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasm-bindgen" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.63";
        edition = "2018";
        sha256 = "1w6yhs29qs4sbgvwkmcpcs5nlhb6p031lv2h9wrvqd182nmc8bac";
        authors = [ "The wasm-bindgen Developers" ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "enable-interning" = [ "std" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" =
            [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "spans" "std" ];
      };
      "wasm-bindgen-backend" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.63";
        edition = "2018";
        sha256 = "0091h4fwamfc1x7572fsqnq2fis9nc60xpw4c6glj8gdw034zn6y";
        authors = [ "The wasm-bindgen Developers" ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = { "extra-traits" = [ "syn/extra-traits" ]; };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.63";
        edition = "2018";
        sha256 = "1qzz0gvlc2mgzxix2sjhn4vqwimcvx6ygp0ywdrqvhfsi0v453l3";
        procMacro = true;
        authors = [ "The wasm-bindgen Developers" ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.63";
        edition = "2018";
        sha256 = "14lfwqk9k1i03p6liy8kn8vrb25sdildsg2k382l4wf7iqnhamii";
        authors = [ "The wasm-bindgen Developers" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.18";
          }
          {
            name = "quote";
            packageId = "quote 1.0.7";
          }
          {
            name = "syn";
            packageId = "syn 1.0.33";
            features = [ "visit" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.63";
        edition = "2018";
        sha256 = "1k8saav8a80pxcr2dyr9rn9r8a0fvirxlbimdzdz9njq7abikfn9";
        authors = [ "The wasm-bindgen Developers" ];

      };
      "wayland-client 0.21.13" = rec {
        crateName = "wayland-client";
        version = "0.21.13";
        edition = "2015";
        sha256 = "04r7dy074hhdalsi1day482wvmczr40hg7qvrnzkgxpakrgkx5j9";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "downcast-rs";
            packageId = "downcast-rs";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "nix";
            packageId = "nix 0.14.1";
          }
          {
            name = "wayland-commons";
            packageId = "wayland-commons 0.21.13";
          }
          {
            name = "wayland-sys";
            packageId = "wayland-sys 0.21.13";
            optional = true;
            features = [ "client" ];
          }
        ];
        buildDependencies = [{
          name = "wayland-scanner";
          packageId = "wayland-scanner 0.21.13";
        }];
        features = {
          "cursor" = [ "wayland-sys/cursor" "native_lib" ];
          "dlopen" = [ "wayland-sys/dlopen" "native_lib" ];
          "egl" = [ "wayland-sys/egl" "native_lib" ];
          "eventloop" = [ "calloop" "mio" ];
          "native_lib" = [ "wayland-sys" "wayland-commons/native_lib" ];
        };
        resolvedDefaultFeatures =
          [ "cursor" "dlopen" "egl" "native_lib" "wayland-sys" ];
      };
      "wayland-client 0.23.6" = rec {
        crateName = "wayland-client";
        version = "0.23.6";
        edition = "2015";
        sha256 = "1nmw2kz70llc5mxwzg6bglnqy0qnyr9224zjmq9czazgw3mq045g";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "downcast-rs";
            packageId = "downcast-rs";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "nix";
            packageId = "nix 0.14.1";
          }
          {
            name = "wayland-commons";
            packageId = "wayland-commons 0.23.6";
          }
          {
            name = "wayland-sys";
            packageId = "wayland-sys 0.23.6";
          }
        ];
        buildDependencies = [{
          name = "wayland-scanner";
          packageId = "wayland-scanner 0.23.6";
        }];
        features = {
          "cursor" = [ "wayland-sys/cursor" "native_lib" ];
          "dlopen" = [ "wayland-sys/dlopen" "native_lib" ];
          "egl" = [ "wayland-sys/egl" "native_lib" ];
          "eventloop" = [ "calloop" "mio" ];
          "native_lib" = [ "wayland-sys/client" ];
        };
        resolvedDefaultFeatures = [ "cursor" "dlopen" "native_lib" ];
      };
      "wayland-commons 0.21.13" = rec {
        crateName = "wayland-commons";
        version = "0.21.13";
        edition = "2015";
        sha256 = "1v1jpcsnn6cwwy5ii5pdl58i6b9slmi8mn4my4fpwrlbfsb8ih20";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "nix";
            packageId = "nix 0.14.1";
          }
          {
            name = "wayland-sys";
            packageId = "wayland-sys 0.21.13";
            optional = true;
          }
        ];
        features = { "native_lib" = [ "wayland-sys" ]; };
        resolvedDefaultFeatures = [ "native_lib" "wayland-sys" ];
      };
      "wayland-commons 0.23.6" = rec {
        crateName = "wayland-commons";
        version = "0.23.6";
        edition = "2015";
        sha256 = "1nyvcs6xxxzqgh0wvc7z0fgi89bf3h9p4qrbf77bnfbwlb8v0rmv";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "nix";
            packageId = "nix 0.14.1";
          }
          {
            name = "wayland-sys";
            packageId = "wayland-sys 0.23.6";
          }
        ];

      };
      "wayland-protocols 0.21.13" = rec {
        crateName = "wayland-protocols";
        version = "0.21.13";
        edition = "2015";
        sha256 = "0i91yh3nxk9llhly2ly3nvlfx0lbpvyq919cgmnyx3j25bmf5zaa";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "wayland-client";
            packageId = "wayland-client 0.21.13";
            optional = true;
          }
          {
            name = "wayland-commons";
            packageId = "wayland-commons 0.21.13";
          }
          {
            name = "wayland-sys";
            packageId = "wayland-sys 0.21.13";
            optional = true;
          }
        ];
        buildDependencies = [{
          name = "wayland-scanner";
          packageId = "wayland-scanner 0.21.13";
        }];
        features = {
          "client" = [ "wayland-client" ];
          "native_client" =
            [ "client" "native_lib" "wayland-client/native_lib" ];
          "native_lib" = [ "wayland-sys" ];
          "native_server" =
            [ "server" "native_lib" "wayland-server/native_lib" ];
          "server" = [ "wayland-server" ];
        };
        resolvedDefaultFeatures = [
          "client"
          "native_client"
          "native_lib"
          "unstable_protocols"
          "wayland-client"
          "wayland-sys"
        ];
      };
      "wayland-protocols 0.23.6" = rec {
        crateName = "wayland-protocols";
        version = "0.23.6";
        edition = "2015";
        sha256 = "1ygwbzqlnks5xzafka3c8ag6k92g2h6ygj2xsmvjfx2n6rj8dhkc";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "wayland-client";
            packageId = "wayland-client 0.23.6";
            optional = true;
          }
          {
            name = "wayland-commons";
            packageId = "wayland-commons 0.23.6";
          }
        ];
        buildDependencies = [{
          name = "wayland-scanner";
          packageId = "wayland-scanner 0.23.6";
        }];
        features = {
          "client" = [ "wayland-client" ];
          "server" = [ "wayland-server" ];
        };
        resolvedDefaultFeatures =
          [ "client" "unstable_protocols" "wayland-client" ];
      };
      "wayland-scanner 0.21.13" = rec {
        crateName = "wayland-scanner";
        version = "0.21.13";
        edition = "2015";
        sha256 = "17mp49v7w0p0x5ry628lj2llljnwkr9aj9g4bqqhfibid32jhf5z";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "xml-rs";
            packageId = "xml-rs";
          }
        ];

      };
      "wayland-scanner 0.23.6" = rec {
        crateName = "wayland-scanner";
        version = "0.23.6";
        edition = "2015";
        sha256 = "0g8wcphykjrcpslznyi3qccx1pckw97rckq5b295nfbg6r3j5c4k";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "xml-rs";
            packageId = "xml-rs";
          }
        ];

      };
      "wayland-sys 0.21.13" = rec {
        crateName = "wayland-sys";
        version = "0.21.13";
        edition = "2015";
        sha256 = "0a0ndgkg98pvmkv44yya4f7mxzjaxylknqh64bpa05w0azyv02jj";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "dlib";
            packageId = "dlib";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
        ];
        features = {
          "dlopen" = [ "dlib/dlopen" "lazy_static" ];
          "server" = [ "libc" ];
        };
        resolvedDefaultFeatures =
          [ "client" "cursor" "dlopen" "egl" "lazy_static" ];
      };
      "wayland-sys 0.23.6" = rec {
        crateName = "wayland-sys";
        version = "0.23.6";
        edition = "2015";
        sha256 = "1x2qafvj8hd2x5qfaan2dfpw9amg0f5g9sqrkdy7qvbddsl8jknr";
        authors = [ "Victor Berger <victor.berger@m4x.org>" ];
        dependencies = [
          {
            name = "dlib";
            packageId = "dlib";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
        ];
        features = {
          "client" = [ "dlib" ];
          "cursor" = [ "client" ];
          "dlopen" = [ "dlib/dlopen" "lazy_static" ];
          "egl" = [ "client" ];
          "server" = [ "libc" "dlib" ];
        };
        resolvedDefaultFeatures =
          [ "client" "cursor" "dlib" "dlopen" "lazy_static" ];
      };
      "web-sys" = rec {
        crateName = "web-sys";
        version = "0.3.40";
        edition = "2018";
        sha256 = "05qxyilbkgi03hppwnfjx7gv7rhbk8lzs4j4m8zbvr1rzmvzwwkv";
        authors = [ "The wasm-bindgen Developers" ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        features = {
          "AbortSignal" = [ "EventTarget" ];
          "AnalyserNode" = [ "AudioNode" "EventTarget" ];
          "Animation" = [ "EventTarget" ];
          "AnimationEvent" = [ "Event" ];
          "AnimationPlaybackEvent" = [ "Event" ];
          "Attr" = [ "EventTarget" "Node" ];
          "AudioBufferSourceNode" =
            [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "AudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "AudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "AudioNode" = [ "EventTarget" ];
          "AudioProcessingEvent" = [ "Event" ];
          "AudioScheduledSourceNode" = [ "AudioNode" "EventTarget" ];
          "AudioStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "AudioTrackList" = [ "EventTarget" ];
          "AudioWorklet" = [ "Worklet" ];
          "AudioWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "AudioWorkletNode" = [ "AudioNode" "EventTarget" ];
          "AuthenticatorAssertionResponse" = [ "AuthenticatorResponse" ];
          "AuthenticatorAttestationResponse" = [ "AuthenticatorResponse" ];
          "BaseAudioContext" = [ "EventTarget" ];
          "BatteryManager" = [ "EventTarget" ];
          "BeforeUnloadEvent" = [ "Event" ];
          "BiquadFilterNode" = [ "AudioNode" "EventTarget" ];
          "BlobEvent" = [ "Event" ];
          "BroadcastChannel" = [ "EventTarget" ];
          "CanvasCaptureMediaStream" = [ "EventTarget" "MediaStream" ];
          "CdataSection" = [ "CharacterData" "EventTarget" "Node" "Text" ];
          "ChannelMergerNode" = [ "AudioNode" "EventTarget" ];
          "ChannelSplitterNode" = [ "AudioNode" "EventTarget" ];
          "CharacterData" = [ "EventTarget" "Node" ];
          "ChromeWorker" = [ "EventTarget" "Worker" ];
          "Clipboard" = [ "EventTarget" ];
          "ClipboardEvent" = [ "Event" ];
          "CloseEvent" = [ "Event" ];
          "Comment" = [ "CharacterData" "EventTarget" "Node" ];
          "CompositionEvent" = [ "Event" "UiEvent" ];
          "ConstantSourceNode" =
            [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "ConvolverNode" = [ "AudioNode" "EventTarget" ];
          "CssAnimation" = [ "Animation" "EventTarget" ];
          "CssConditionRule" = [ "CssGroupingRule" "CssRule" ];
          "CssCounterStyleRule" = [ "CssRule" ];
          "CssFontFaceRule" = [ "CssRule" ];
          "CssFontFeatureValuesRule" = [ "CssRule" ];
          "CssGroupingRule" = [ "CssRule" ];
          "CssImportRule" = [ "CssRule" ];
          "CssKeyframeRule" = [ "CssRule" ];
          "CssKeyframesRule" = [ "CssRule" ];
          "CssMediaRule" = [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssNamespaceRule" = [ "CssRule" ];
          "CssPageRule" = [ "CssRule" ];
          "CssStyleRule" = [ "CssRule" ];
          "CssStyleSheet" = [ "StyleSheet" ];
          "CssSupportsRule" =
            [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssTransition" = [ "Animation" "EventTarget" ];
          "CustomEvent" = [ "Event" ];
          "DedicatedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "DelayNode" = [ "AudioNode" "EventTarget" ];
          "DeviceLightEvent" = [ "Event" ];
          "DeviceMotionEvent" = [ "Event" ];
          "DeviceOrientationEvent" = [ "Event" ];
          "DeviceProximityEvent" = [ "Event" ];
          "Document" = [ "EventTarget" "Node" ];
          "DocumentFragment" = [ "EventTarget" "Node" ];
          "DocumentTimeline" = [ "AnimationTimeline" ];
          "DocumentType" = [ "EventTarget" "Node" ];
          "DomMatrix" = [ "DomMatrixReadOnly" ];
          "DomPoint" = [ "DomPointReadOnly" ];
          "DomRect" = [ "DomRectReadOnly" ];
          "DomRequest" = [ "EventTarget" ];
          "DragEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "DynamicsCompressorNode" = [ "AudioNode" "EventTarget" ];
          "Element" = [ "EventTarget" "Node" ];
          "ErrorEvent" = [ "Event" ];
          "EventSource" = [ "EventTarget" ];
          "ExtendableEvent" = [ "Event" ];
          "ExtendableMessageEvent" = [ "Event" "ExtendableEvent" ];
          "FetchEvent" = [ "Event" "ExtendableEvent" ];
          "FetchObserver" = [ "EventTarget" ];
          "File" = [ "Blob" ];
          "FileReader" = [ "EventTarget" ];
          "FileSystemDirectoryEntry" = [ "FileSystemEntry" ];
          "FileSystemFileEntry" = [ "FileSystemEntry" ];
          "FocusEvent" = [ "Event" "UiEvent" ];
          "FontFaceSet" = [ "EventTarget" ];
          "FontFaceSetLoadEvent" = [ "Event" ];
          "GainNode" = [ "AudioNode" "EventTarget" ];
          "GamepadAxisMoveEvent" = [ "Event" "GamepadEvent" ];
          "GamepadButtonEvent" = [ "Event" "GamepadEvent" ];
          "GamepadEvent" = [ "Event" ];
          "GpuDevice" = [ "EventTarget" ];
          "GpuUncapturedErrorEvent" = [ "Event" ];
          "HashChangeEvent" = [ "Event" ];
          "HtmlAnchorElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAreaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAudioElement" =
            [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "HtmlBaseElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBodyElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlButtonElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlCanvasElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataListElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDetailsElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDialogElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDirectoryElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDivElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDocument" = [ "Document" "EventTarget" "Node" ];
          "HtmlElement" = [ "Element" "EventTarget" "Node" ];
          "HtmlEmbedElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFieldSetElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFontElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFormControlsCollection" = [ "HtmlCollection" ];
          "HtmlFormElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameSetElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadingElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHtmlElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlIFrameElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlImageElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlInputElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLabelElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLegendElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLiElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLinkElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMapElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMediaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuItemElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMetaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMeterElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlModElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlObjectElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptGroupElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionsCollection" = [ "HtmlCollection" ];
          "HtmlOutputElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParagraphElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParamElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPictureElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPreElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlProgressElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlQuoteElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlScriptElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSelectElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSlotElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSourceElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSpanElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlStyleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCaptionElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCellElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableColElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableRowElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableSectionElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTemplateElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTextAreaElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTimeElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTitleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTrackElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUnknownElement" =
            [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlVideoElement" =
            [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "IdbCursorWithValue" = [ "IdbCursor" ];
          "IdbDatabase" = [ "EventTarget" ];
          "IdbFileHandle" = [ "EventTarget" ];
          "IdbFileRequest" = [ "DomRequest" "EventTarget" ];
          "IdbLocaleAwareKeyRange" = [ "IdbKeyRange" ];
          "IdbMutableFile" = [ "EventTarget" ];
          "IdbOpenDbRequest" = [ "EventTarget" "IdbRequest" ];
          "IdbRequest" = [ "EventTarget" ];
          "IdbTransaction" = [ "EventTarget" ];
          "IdbVersionChangeEvent" = [ "Event" ];
          "IirFilterNode" = [ "AudioNode" "EventTarget" ];
          "ImageCapture" = [ "EventTarget" ];
          "ImageCaptureErrorEvent" = [ "Event" ];
          "InputEvent" = [ "Event" "UiEvent" ];
          "KeyboardEvent" = [ "Event" "UiEvent" ];
          "KeyframeEffect" = [ "AnimationEffect" ];
          "LocalMediaStream" = [ "EventTarget" "MediaStream" ];
          "MediaDevices" = [ "EventTarget" ];
          "MediaElementAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaEncryptedEvent" = [ "Event" ];
          "MediaKeyError" = [ "Event" ];
          "MediaKeyMessageEvent" = [ "Event" ];
          "MediaKeySession" = [ "EventTarget" ];
          "MediaQueryList" = [ "EventTarget" ];
          "MediaQueryListEvent" = [ "Event" ];
          "MediaRecorder" = [ "EventTarget" ];
          "MediaRecorderErrorEvent" = [ "Event" ];
          "MediaSource" = [ "EventTarget" ];
          "MediaStream" = [ "EventTarget" ];
          "MediaStreamAudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamEvent" = [ "Event" ];
          "MediaStreamTrack" = [ "EventTarget" ];
          "MediaStreamTrackEvent" = [ "Event" ];
          "MessageEvent" = [ "Event" ];
          "MessagePort" = [ "EventTarget" ];
          "MidiAccess" = [ "EventTarget" ];
          "MidiConnectionEvent" = [ "Event" ];
          "MidiInput" = [ "EventTarget" "MidiPort" ];
          "MidiMessageEvent" = [ "Event" ];
          "MidiOutput" = [ "EventTarget" "MidiPort" ];
          "MidiPort" = [ "EventTarget" ];
          "MouseEvent" = [ "Event" "UiEvent" ];
          "MouseScrollEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "MutationEvent" = [ "Event" ];
          "NetworkInformation" = [ "EventTarget" ];
          "Node" = [ "EventTarget" ];
          "Notification" = [ "EventTarget" ];
          "NotificationEvent" = [ "Event" "ExtendableEvent" ];
          "OfflineAudioCompletionEvent" = [ "Event" ];
          "OfflineAudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "OfflineResourceList" = [ "EventTarget" ];
          "OffscreenCanvas" = [ "EventTarget" ];
          "OscillatorNode" =
            [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "PageTransitionEvent" = [ "Event" ];
          "PaintWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "PannerNode" = [ "AudioNode" "EventTarget" ];
          "PaymentMethodChangeEvent" = [ "Event" "PaymentRequestUpdateEvent" ];
          "PaymentRequestUpdateEvent" = [ "Event" ];
          "Performance" = [ "EventTarget" ];
          "PerformanceMark" = [ "PerformanceEntry" ];
          "PerformanceMeasure" = [ "PerformanceEntry" ];
          "PerformanceNavigationTiming" =
            [ "PerformanceEntry" "PerformanceResourceTiming" ];
          "PerformanceResourceTiming" = [ "PerformanceEntry" ];
          "PermissionStatus" = [ "EventTarget" ];
          "PointerEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "PopStateEvent" = [ "Event" ];
          "PopupBlockedEvent" = [ "Event" ];
          "PresentationAvailability" = [ "EventTarget" ];
          "PresentationConnection" = [ "EventTarget" ];
          "PresentationConnectionAvailableEvent" = [ "Event" ];
          "PresentationConnectionCloseEvent" = [ "Event" ];
          "PresentationConnectionList" = [ "EventTarget" ];
          "PresentationRequest" = [ "EventTarget" ];
          "ProcessingInstruction" = [ "CharacterData" "EventTarget" "Node" ];
          "ProgressEvent" = [ "Event" ];
          "PromiseRejectionEvent" = [ "Event" ];
          "PublicKeyCredential" = [ "Credential" ];
          "PushEvent" = [ "Event" "ExtendableEvent" ];
          "RadioNodeList" = [ "NodeList" ];
          "RtcDataChannel" = [ "EventTarget" ];
          "RtcDataChannelEvent" = [ "Event" ];
          "RtcPeerConnection" = [ "EventTarget" ];
          "RtcPeerConnectionIceEvent" = [ "Event" ];
          "RtcTrackEvent" = [ "Event" ];
          "RtcdtmfSender" = [ "EventTarget" ];
          "RtcdtmfToneChangeEvent" = [ "Event" ];
          "Screen" = [ "EventTarget" ];
          "ScreenOrientation" = [ "EventTarget" ];
          "ScriptProcessorNode" = [ "AudioNode" "EventTarget" ];
          "ScrollAreaEvent" = [ "Event" "UiEvent" ];
          "SecurityPolicyViolationEvent" = [ "Event" ];
          "ServiceWorker" = [ "EventTarget" ];
          "ServiceWorkerContainer" = [ "EventTarget" ];
          "ServiceWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "ServiceWorkerRegistration" = [ "EventTarget" ];
          "ShadowRoot" = [ "DocumentFragment" "EventTarget" "Node" ];
          "SharedWorker" = [ "EventTarget" ];
          "SharedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "SourceBuffer" = [ "EventTarget" ];
          "SourceBufferList" = [ "EventTarget" ];
          "SpeechRecognition" = [ "EventTarget" ];
          "SpeechRecognitionError" = [ "Event" ];
          "SpeechRecognitionEvent" = [ "Event" ];
          "SpeechSynthesis" = [ "EventTarget" ];
          "SpeechSynthesisErrorEvent" = [ "Event" "SpeechSynthesisEvent" ];
          "SpeechSynthesisEvent" = [ "Event" ];
          "SpeechSynthesisUtterance" = [ "EventTarget" ];
          "StereoPannerNode" = [ "AudioNode" "EventTarget" ];
          "StorageEvent" = [ "Event" ];
          "SvgAnimateElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgAnimationElement"
            "SvgElement"
          ];
          "SvgAnimateMotionElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgAnimationElement"
            "SvgElement"
          ];
          "SvgAnimateTransformElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgAnimationElement"
            "SvgElement"
          ];
          "SvgAnimationElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgCircleElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGeometryElement"
            "SvgGraphicsElement"
          ];
          "SvgClipPathElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgComponentTransferFunctionElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgDefsElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgDescElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgElement" = [ "Element" "EventTarget" "Node" ];
          "SvgEllipseElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGeometryElement"
            "SvgGraphicsElement"
          ];
          "SvgFilterElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgForeignObjectElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgGeometryElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgGradientElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgGraphicsElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgImageElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgLineElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGeometryElement"
            "SvgGraphicsElement"
          ];
          "SvgLinearGradientElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGradientElement"
          ];
          "SvgMarkerElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMaskElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMetadataElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPathElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGeometryElement"
            "SvgGraphicsElement"
          ];
          "SvgPathSegArcAbs" = [ "SvgPathSeg" ];
          "SvgPathSegArcRel" = [ "SvgPathSeg" ];
          "SvgPathSegClosePath" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalRel" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoRel" = [ "SvgPathSeg" ];
          "SvgPatternElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPolygonElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGeometryElement"
            "SvgGraphicsElement"
          ];
          "SvgPolylineElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGeometryElement"
            "SvgGraphicsElement"
          ];
          "SvgRadialGradientElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGradientElement"
          ];
          "SvgRectElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGeometryElement"
            "SvgGraphicsElement"
          ];
          "SvgScriptElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSetElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgAnimationElement"
            "SvgElement"
          ];
          "SvgStopElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgStyleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSwitchElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgSymbolElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgTextContentElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgTextElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
            "SvgTextContentElement"
            "SvgTextPositioningElement"
          ];
          "SvgTextPathElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
            "SvgTextContentElement"
          ];
          "SvgTextPositioningElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
            "SvgTextContentElement"
          ];
          "SvgTitleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgUseElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgViewElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgaElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgfeBlendElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeColorMatrixElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeComponentTransferElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeCompositeElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeConvolveMatrixElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDiffuseLightingElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDisplacementMapElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDistantLightElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDropShadowElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFloodElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFuncAElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgComponentTransferFunctionElement"
            "SvgElement"
          ];
          "SvgfeFuncBElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgComponentTransferFunctionElement"
            "SvgElement"
          ];
          "SvgfeFuncGElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgComponentTransferFunctionElement"
            "SvgElement"
          ];
          "SvgfeFuncRElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgComponentTransferFunctionElement"
            "SvgElement"
          ];
          "SvgfeGaussianBlurElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeImageElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeNodeElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMorphologyElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeOffsetElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfePointLightElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpecularLightingElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpotLightElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTileElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTurbulenceElement" =
            [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvggElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgmPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgsvgElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
          ];
          "SvgtSpanElement" = [
            "Element"
            "EventTarget"
            "Node"
            "SvgElement"
            "SvgGraphicsElement"
            "SvgTextContentElement"
            "SvgTextPositioningElement"
          ];
          "TcpServerSocket" = [ "EventTarget" ];
          "TcpServerSocketEvent" = [ "Event" ];
          "TcpSocket" = [ "EventTarget" ];
          "TcpSocketErrorEvent" = [ "Event" ];
          "TcpSocketEvent" = [ "Event" ];
          "Text" = [ "CharacterData" "EventTarget" "Node" ];
          "TextTrack" = [ "EventTarget" ];
          "TextTrackCue" = [ "EventTarget" ];
          "TextTrackList" = [ "EventTarget" ];
          "TimeEvent" = [ "Event" ];
          "TouchEvent" = [ "Event" "UiEvent" ];
          "TrackEvent" = [ "Event" ];
          "TransitionEvent" = [ "Event" ];
          "UiEvent" = [ "Event" ];
          "UserProximityEvent" = [ "Event" ];
          "VideoStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "VideoTrackList" = [ "EventTarget" ];
          "VrDisplay" = [ "EventTarget" ];
          "VttCue" = [ "EventTarget" "TextTrackCue" ];
          "WaveShaperNode" = [ "AudioNode" "EventTarget" ];
          "WebGlContextEvent" = [ "Event" ];
          "WebKitCssMatrix" = [ "DomMatrix" "DomMatrixReadOnly" ];
          "WebSocket" = [ "EventTarget" ];
          "WheelEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "Window" = [ "EventTarget" ];
          "WindowClient" = [ "Client" ];
          "Worker" = [ "EventTarget" ];
          "WorkerDebuggerGlobalScope" = [ "EventTarget" ];
          "WorkerGlobalScope" = [ "EventTarget" ];
          "XmlDocument" = [ "Document" "EventTarget" "Node" ];
          "XmlHttpRequest" = [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "XmlHttpRequestEventTarget" = [ "EventTarget" ];
          "XmlHttpRequestUpload" =
            [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "Xr" = [ "EventTarget" ];
          "XrBoundedReferenceSpace" =
            [ "EventTarget" "XrReferenceSpace" "XrSpace" ];
          "XrInputSourceEvent" = [ "Event" ];
          "XrInputSourcesChangeEvent" = [ "Event" ];
          "XrReferenceSpace" = [ "EventTarget" "XrSpace" ];
          "XrReferenceSpaceEvent" = [ "Event" ];
          "XrSession" = [ "EventTarget" ];
          "XrSessionEvent" = [ "Event" ];
          "XrSpace" = [ "EventTarget" ];
          "XrViewerPose" = [ "XrPose" ];
        };
        resolvedDefaultFeatures = [
          "CanvasRenderingContext2d"
          "Crypto"
          "Document"
          "DomRect"
          "DomRectReadOnly"
          "Element"
          "EventTarget"
          "HtmlCanvasElement"
          "HtmlElement"
          "Node"
          "Window"
        ];
      };
      "webpki" = rec {
        crateName = "webpki";
        version = "0.21.3";
        edition = "2018";
        sha256 = "1bij23xq5yx637y0ji667qvp6r95bbjhksxfh9gx947pylq6255b";
        libPath = "src/webpki.rs";
        authors = [ "Brian Smith <brian@briansmith.org>" ];
        dependencies = [
          {
            name = "ring";
            packageId = "ring";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
        ];
        features = {
          "default" = [ "std" "trust_anchor_util" ];
          "trust_anchor_util" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "trust_anchor_util" ];
      };
      "webpki-roots" = rec {
        crateName = "webpki-roots";
        version = "0.19.0";
        edition = "2018";
        crateBin = [ ];
        sha256 = "0fapdqwbfv0kncplpvbgnr0bjd5a9krlpij9jdzk0mvaa6vz9vzq";
        authors = [ "Joseph Birr-Pixton <jpixton@gmail.com>" ];
        dependencies = [{
          name = "webpki";
          packageId = "webpki";
        }];

      };
      "winapi 0.2.8" = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0yh816lh6lf56dpsgxy189c2ai1z3j8mw9si6izqb6wsjkbcjz8n";
        authors = [ "Peter Atashian <retep998@gmail.com>" ];

      };
      "winapi 0.3.8" = rec {
        crateName = "winapi";
        version = "0.3.8";
        edition = "2015";
        sha256 = "1ii9j9lzrhwri0902652awifzx9fpayimbp6hfhhc296xcg0k4w0";
        authors = [ "Peter Atashian <retep998@gmail.com>" ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu";
            target = { target, features }:
              (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu";
            target = { target, features }:
              (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = { "debug" = [ "impl-debug" ]; };
        resolvedDefaultFeatures = [
          "audioclient"
          "audiosessiontypes"
          "basetsd"
          "combaseapi"
          "coml2api"
          "consoleapi"
          "debug"
          "devpkey"
          "dwmapi"
          "errhandlingapi"
          "fileapi"
          "handleapi"
          "hidusage"
          "impl-debug"
          "ioapiset"
          "knownfolders"
          "ksmedia"
          "libloaderapi"
          "memoryapi"
          "minwinbase"
          "minwindef"
          "mmdeviceapi"
          "ntdef"
          "ntsecapi"
          "ntstatus"
          "objbase"
          "ole2"
          "processenv"
          "processthreadsapi"
          "profileapi"
          "shellapi"
          "shellscalingapi"
          "shlobj"
          "shobjidl_core"
          "std"
          "synchapi"
          "sysinfoapi"
          "timezoneapi"
          "unknwnbase"
          "winbase"
          "wincon"
          "windef"
          "windowsx"
          "winerror"
          "wingdi"
          "winnt"
          "winsock2"
          "winuser"
          "ws2def"
          "ws2ipdef"
          "ws2tcpip"
          "wtypesbase"
          "xinput"
        ];
      };
      "winapi-build" = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1g4rqsgjky0a7530qajn2bbfcrl2v0zb39idgdws9b1l7gp5wc9d";
        libName = "build";
        authors = [ "Peter Atashian <retep998@gmail.com>" ];

      };
      "winapi-i686-pc-windows-gnu" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [ "Peter Atashian <retep998@gmail.com>" ];

      };
      "winapi-util" = rec {
        crateName = "winapi-util";
        version = "0.1.5";
        edition = "2018";
        sha256 = "0y71bp7f6d536czj40dhqk0d55wfbbwqfp2ymqf1an5ibgl6rv3h";
        authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
        dependencies = [{
          name = "winapi";
          packageId = "winapi 0.3.8";
          target = { target, features }: target."windows";
          features = [
            "std"
            "consoleapi"
            "errhandlingapi"
            "fileapi"
            "minwindef"
            "processenv"
            "winbase"
            "wincon"
            "winerror"
            "winnt"
          ];
        }];

      };
      "winapi-x86_64-pc-windows-gnu" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [ "Peter Atashian <retep998@gmail.com>" ];

      };
      "winit" = rec {
        crateName = "winit";
        version = "0.19.5";
        edition = "2015";
        sha256 = "1a4lnfyvlc4jabhs30wlmkgdjv7qhbplmyp833kl7ykjni5yp5hy";
        authors = [
          "The winit contributors"
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];
        dependencies = [
          {
            name = "android_glue";
            packageId = "android_glue";
            target = { target, features }: (target."os" == "android");
          }
          {
            name = "backtrace";
            packageId = "backtrace";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "bitflags";
            packageId = "bitflags";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "cocoa";
            packageId = "cocoa 0.18.5";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "core-graphics";
            packageId = "core-graphics";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "objc";
            packageId = "objc";
            target = { target, features }: (target."os" == "ios");
          }
          {
            name = "objc";
            packageId = "objc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "dragonfly")
                || (target."os" == "freebsd") || (target."os" == "openbsd")
                || (target."os" == "netbsd"));
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "dragonfly")
                || (target."os" == "freebsd") || (target."os" == "openbsd")
                || (target."os" == "netbsd"));
          }
          {
            name = "raw-window-handle";
            packageId = "raw-window-handle";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "serde_derive" ];
          }
          {
            name = "smithay-client-toolkit";
            packageId = "smithay-client-toolkit 0.4.6";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "dragonfly")
                || (target."os" == "freebsd") || (target."os" == "openbsd")
                || (target."os" == "netbsd"));
          }
          {
            name = "wayland-client";
            packageId = "wayland-client 0.21.13";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "dragonfly")
                || (target."os" == "freebsd") || (target."os" == "openbsd")
                || (target."os" == "netbsd"));
            features = [ "dlopen" "egl" "cursor" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [
              "combaseapi"
              "dwmapi"
              "errhandlingapi"
              "hidusage"
              "libloaderapi"
              "objbase"
              "ole2"
              "processthreadsapi"
              "shellapi"
              "shellscalingapi"
              "shobjidl_core"
              "unknwnbase"
              "winbase"
              "windowsx"
              "winerror"
              "wingdi"
              "winnt"
              "winuser"
            ];
          }
          {
            name = "x11-dl";
            packageId = "x11-dl";
            target = { target, features }:
              ((target."os" == "linux") || (target."os" == "dragonfly")
                || (target."os" == "freebsd") || (target."os" == "openbsd")
                || (target."os" == "netbsd"));
          }
        ];
        features = { "icon_loading" = [ "image" ]; };
        resolvedDefaultFeatures = [ "serde" ];
      };
      "winres" = rec {
        crateName = "winres";
        version = "0.1.11";
        edition = "2015";
        sha256 = "1p55gj03m5j41w6a1vghg0l0dkz6dwp7mxqmzy98jnzypc8bakzz";
        libPath = "lib.rs";
        authors = [ "Max Resch <resch.max@gmail.com>" ];
        dependencies = [{
          name = "toml";
          packageId = "toml";
        }];

      };
      "ws2_32-sys" = rec {
        crateName = "ws2_32-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0ppscg5qfqaw0gzwv2a4nhn5bn01ff9iwn6ysqnzm4n8s3myz76m";
        libName = "ws2_32";
        authors = [ "Peter Atashian <retep998@gmail.com>" ];
        dependencies = [{
          name = "winapi";
          packageId = "winapi 0.2.8";
        }];
        buildDependencies = [{
          name = "winapi-build";
          packageId = "winapi-build";
        }];

      };
      "x11-clipboard" = rec {
        crateName = "x11-clipboard";
        version = "0.5.1";
        edition = "2015";
        sha256 = "17c5yxxhknrp7y9mc7mp85ra8q4jw12c174m9yzbfr1vs2pkgsg5";
        authors = [ "quininer kel <quininer@live.com>" ];
        dependencies = [{
          name = "xcb";
          packageId = "xcb";
          features = [ "thread" "xfixes" ];
        }];

      };
      "x11-dl" = rec {
        crateName = "x11-dl";
        version = "2.18.5";
        edition = "2015";
        sha256 = "1y7yq4sfvv56shk4v3s7gvlrwk9d0migj622fl4i4c5klpiq3y9b";
        authors = [
          "daggerbot <daggerbot@gmail.com>"
          "Erle Pereira <erle@erlepereira.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
        ];
        buildDependencies = [{
          name = "pkg-config";
          packageId = "pkg-config";
        }];

      };
      "xcb" = rec {
        crateName = "xcb";
        version = "0.9.0";
        edition = "2015";
        sha256 = "19i2pm8alpn2f0m4jg8bsw6ckw8irj1wjh55h9pi2fcb2diny1b2";
        authors = [ "Remi Thebault <remi.thebault@gmail.com>" ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        buildDependencies = [{
          name = "libc";
          packageId = "libc";
        }];
        features = {
          "composite" = [ "xfixes" ];
          "damage" = [ "xfixes" ];
          "debug_all" = [
            "thread"
            "composite"
            "damage"
            "dpms"
            "dri2"
            "dri3"
            "glx"
            "randr"
            "record"
            "render"
            "res"
            "screensaver"
            "shape"
            "shm"
            "xevie"
            "xf86dri"
            "xfixes"
            "xinerama"
            "xkb"
            "xprint"
            "xselinux"
            "xtest"
            "xvmc"
            "xv"
            "xlib_xcb"
          ];
          "present" = [ "render" "xfixes" "sync" ];
          "randr" = [ "render" ];
          "xfixes" = [ "render" "shape" ];
          "xinput" = [ "xfixes" ];
          "xlib_xcb" = [ "x11/xlib" ];
          "xv" = [ "shm" ];
          "xvmc" = [ "xv" ];
        };
        resolvedDefaultFeatures = [ "render" "shape" "thread" "xfixes" ];
      };
      "xdg" = rec {
        crateName = "xdg";
        version = "2.2.0";
        edition = "2015";
        sha256 = "0mws8a0fr3cqk5nh7aq9lmkmhzghvasqy4mhw6nnza06l4d6i2fh";
        authors = [
          "Ben Longbons <b.r.longbons@gmail.com>"
          "whitequark <whitequark@whitequark.org>"
        ];

      };
      "xml-rs" = rec {
        crateName = "xml-rs";
        version = "0.8.3";
        edition = "2015";
        crateBin = [ ];
        sha256 = "12ndxyhzxw2zdr76ql8nfdwb2vwhvdkrxwk4pbjafqfglmjv0zdh";
        libName = "xml";
        authors = [ "Vladimir Matveev <vmatveev@citrine.cc>" ];

      };
    };

    #
    # crate2nix/default.nix (excerpt start)
    #

    /* Target (platform) data for conditional dependencies.
       This corresponds roughly to what buildRustCrate is setting.
    */
    defaultTarget = {
      unix = true;
      windows = false;
      fuchsia = true;
      test = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin then
        "macos"
      else
        stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name
      == "littleEndian" then
        "little"
      else
        "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
    };

    # Filters common temp files and build files.
    # TODO(pkolloch): Substitute with gitignore filter
    sourceFilter = name: type:
      let baseName = builtins.baseNameOf (builtins.toString name);
      in !(
        # Filter out git
        baseName == ".gitignore" || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (type == "directory" && (baseName == "target" || baseName == "_site"
          || baseName == ".sass-cache" || baseName == ".jekyll-metadata"
          || baseName == "build-artifacts"))

        # Filter out nix-build result symlinks
        || (type == "symlink" && lib.hasPrefix "result" baseName)

        # Filter out IDE config
        || (type == "directory"
          && (baseName == ".idea" || baseName == ".vscode"))
        || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName || builtins.match "^\\.sw[a-z]$$" baseName
        != null || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix");

    /* Returns a crate which depends on successful test execution
       of crate given as the second argument.

       testCrateFlags: list of flags to pass to the test exectuable
       testInputs: list of packages that should be available during test execution
    */
    crateWithTest = { crate, testCrate, testCrateFlags, testInputs }:
      assert builtins.typeOf testCrateFlags == "list";
      assert builtins.typeOf testInputs == "list";
      let
        # override the `crate` so that it will build and execute tests instead of
        # building the actual lib and bin targets We just have to pass `--test`
        # to rustc and it will do the right thing.  We execute the tests and copy
        # their log and the test executables to $out for later inspection.
        test = let drv = testCrate.override (_: { buildTests = true; });
        in pkgs.runCommand "run-tests-${testCrate.name}" {
          inherit testCrateFlags;
          buildInputs = testInputs;
        } ''
          set -ex

          export RUST_BACKTRACE=1

          # recreate a file hierarchy as when running tests with cargo

          # the source for test data
          ${pkgs.xorg.lndir}/bin/lndir ${crate.src}

          # build outputs
          testRoot=target/debug
          mkdir -p $testRoot

          # executables of the crate
          # we copy to prevent std::env::current_exe() to resolve to a store location
          for i in ${crate}/bin/*; do
            cp "$i" "$testRoot"
          done
          chmod +w -R .

          # test harness executables are suffixed with a hash, like cargo does
          # this allows to prevent name collision with the main
          # executables of the crate
          hash=$(basename $out)
          for file in ${drv}/tests/*; do
            f=$testRoot/$(basename $file)-$hash
            cp $file $f
            $f $testCrateFlags 2>&1 | tee -a $out
          done
        '';
      in crate.overrideAttrs (old: {
        checkPhase = ''
          test -e ${test}
        '';
        passthru = (old.passthru or { }) // { inherit test; };
      });

    # A restricted overridable version of builtRustCratesWithFeatures.
    buildRustCrateWithFeatures = { packageId, features ? rootFeatures
      , crateOverrides ? defaultCrateOverrides, buildRustCrateFunc ? null
      , runTests ? false, testCrateFlags ? [ ], testInputs ? [ ] }:
      lib.makeOverridable
      ({ features, crateOverrides, runTests, testCrateFlags, testInputs }:
        let
          buildRustCrateFuncOverriden = if buildRustCrateFunc != null then
            buildRustCrateFunc
          else
            (if crateOverrides == pkgs.defaultCrateOverrides then
              buildRustCrate
            else
              buildRustCrate.override {
                defaultCrateOverrides = crateOverrides;
              });
          builtRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateFunc = buildRustCrateFuncOverriden;
            runTests = false;
          };
          builtTestRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateFunc = buildRustCrateFuncOverriden;
            runTests = true;
          };
          drv = builtRustCrates.${packageId};
          testDrv = builtTestRustCrates.${packageId};
          derivation = if runTests then
            crateWithTest {
              crate = drv;
              testCrate = testDrv;
              inherit testCrateFlags testInputs;
            }
          else
            drv;
        in derivation) {
          inherit features crateOverrides runTests testCrateFlags testInputs;
        };

    /* Returns an attr set with packageId mapped to the result of buildRustCrateFunc
       for the corresponding crate.
    */
    builtRustCratesWithFeatures = { packageId, features, crateConfigs ? crates
      , buildRustCrateFunc, runTests, target ? defaultTarget }@args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures (args // {
          inherit rootPackageId;
          target = target // { test = runTests; };
        });
        buildByPackageId = packageId: buildByPackageIdImpl packageId;

        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageId =
          lib.mapAttrs (packageId: value: buildByPackageId packageId)
          crateConfigs;
        buildByPackageIdImpl = packageId:
          let
            features = mergedFeatures."${packageId}" or [ ];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig = builtins.removeAttrs crateConfig' [
              "resolvedDefaultFeatures"
              "devDependencies"
            ];
            devDependencies =
              lib.optionals (runTests && packageId == rootPackageId)
              (crateConfig'.devDependencies or [ ]);
            dependencies = dependencyDerivations {
              inherit builtByPackageId features target;
              dependencies = (crateConfig.dependencies or [ ])
                ++ devDependencies;
            };
            buildDependencies = dependencyDerivations {
              inherit builtByPackageId features target;
              dependencies = crateConfig.buildDependencies or [ ];
            };
            filterEnabledDependenciesForThis = dependencies:
              filterEnabledDependencies {
                inherit dependencies features target;
              };
            dependenciesWithRenames = lib.filter (d: d ? "rename")
              (filterEnabledDependenciesForThis
                ((crateConfig.buildDependencies or [ ])
                  ++ (crateConfig.dependencies or [ ]) ++ devDependencies));
            # Crate renames have the form:
            #
            # {
            #    crate_name = [
            #       { version = "1.2.3"; rename = "crate_name01"; }
            #    ];
            #    # ...
            # }
            crateRenames = let
              grouped = lib.groupBy (dependency: dependency.name)
                dependenciesWithRenames;
              versionAndRename = dep:
                let package = builtByPackageId."${dep.packageId}";
                in {
                  inherit (dep) rename;
                  version = package.version;
                };
            in lib.mapAttrs
            (name: choices: builtins.map versionAndRename choices) grouped;
          in buildRustCrateFunc (crateConfig // {
            src = crateConfig.src or (pkgs.fetchurl rec {
              name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
              # https://www.pietroalbini.org/blog/downloading-crates-io/
              # Not rate-limited, CDN URL.
              url =
                "https://static.crates.io/crates/${crateConfig.crateName}/${crateConfig.crateName}-${crateConfig.version}.crate";
              sha256 = assert (lib.assertMsg (crateConfig ? sha256)
                "Missing sha256 for ${name}");
                crateConfig.sha256;
            });
            inherit features dependencies buildDependencies crateRenames
              release;
          });
      in builtByPackageId;

    # Returns the actual derivations for the given dependencies.
    dependencyDerivations =
      { builtByPackageId, features, dependencies, target }:
      assert (builtins.isAttrs builtByPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);
      let
        enabledDependencies =
          filterEnabledDependencies { inherit dependencies features target; };
        depDerivation = dependency: builtByPackageId.${dependency.packageId};
      in map depDerivation enabledDependencies;

    /* Returns a sanitized version of val with all values substituted that cannot
       be serialized as JSON.
    */
    sanitizeForJson = val:
      if builtins.isAttrs val then
        lib.mapAttrs (n: v: sanitizeForJson v) val
      else if builtins.isList val then
        builtins.map sanitizeForJson val
      else if builtins.isFunction val then
        "function"
      else
        val;

    # Returns various tools to debug a crate.
    debugCrate = { packageId, target ? defaultTarget }:
      assert (builtins.isString packageId);
      let
        debug = rec {
          # The built tree as passed to buildRustCrate.
          buildTree = buildRustCrateWithFeatures {
            buildRustCrateFunc = lib.id;
            inherit packageId;
          };
          sanitizedBuildTree = sanitizeForJson buildTree;
          dependencyTree = sanitizeForJson (buildRustCrateWithFeatures {
            buildRustCrateFunc = crate: {
              "01_crateName" = crate.crateName or false;
              "02_features" = crate.features or [ ];
              "03_dependencies" = crate.dependencies or [ ];
            };
            inherit packageId;
          });
          mergedPackageFeatures = mergePackageFeatures {
            features = rootFeatures;
            inherit packageId target;
          };
          diffedDefaultPackageFeatures =
            diffDefaultPackageFeatures { inherit packageId target; };
        };
      in { internal = debug; };

    /* Returns differences between cargo default features and crate2nix default
       features.

       This is useful for verifying the feature resolution in crate2nix.
    */
    diffDefaultPackageFeatures = { crateConfigs ? crates, packageId, target }:
      assert (builtins.isAttrs crateConfigs);
      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures = prefixValues "crate2nix" (mergePackageFeatures {
          inherit crateConfigs packageId target;
          features = [ "default" ];
        });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) { } [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames
          (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo"))
            combined);
        onlyInCrate2Nix = builtins.attrNames
          (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo"))
            combined);
        differentFeatures = lib.filterAttrs (n: v:
          (v ? "crate2nix") && (v ? "cargo") && (v.crate2nix.features or [ ])
          != (v."cargo".resolved_default_features or [ ])) combined;
      in builtins.toJSON {
        inherit onlyInCargo onlyInCrate2Nix differentFeatures;
      };

    /* Returns an attrset mapping packageId to the list of enabled features.

       If multiple paths to a dependency enable different features, the
       corresponding feature sets are merged. Features in rust are additive.
    */
    mergePackageFeatures = { crateConfigs ? crates, packageId
      , rootPackageId ? packageId, features ? rootFeatures
      , dependencyPath ? [ crates.${packageId}.crateName ]
      , featuresByPackageId ? { }, target
      # Adds devDependencies to the crate with rootPackageId.
      , runTests ? false, ... }@args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw
          "Package not found: ${packageId}");
        expandedFeatures =
          expandFeatures (crateConfig.features or { }) features;
        depWithResolvedFeatures = dependency:
          let
            packageId = dependency.packageId;
            features = dependencyFeatures expandedFeatures dependency;
          in { inherit packageId features; };
        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);
          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = expandedFeatures;
            };
            directDependencies =
              map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in foldOverCache (cache:
            { packageId, features }:
            let
              cacheFeatures = cache.${packageId} or [ ];
              combinedFeatures = sortedUnique (cacheFeatures ++ features);
            in if cache ? ${packageId} && cache.${packageId}
            == combinedFeatures then
              cache
            else
              mergePackageFeatures {
                features = combinedFeatures;
                featuresByPackageId = cache;
                inherit crateConfigs packageId target runTests rootPackageId;
              });
        cacheWithSelf = let
          cacheFeatures = featuresByPackageId.${packageId} or [ ];
          combinedFeatures = sortedUnique (cacheFeatures ++ expandedFeatures);
        in featuresByPackageId // { "${packageId}" = combinedFeatures; };
        cacheWithDependencies = resolveDependencies cacheWithSelf "dep"
          (crateConfig.dependencies or [ ]
            ++ lib.optionals (runTests && packageId == rootPackageId)
            (crateConfig.devDependencies or [ ]));
        cacheWithAll = resolveDependencies cacheWithDependencies "build"
          (crateConfig.buildDependencies or [ ]);
      in cacheWithAll;

    # Returns the enabled dependencies given the enabled features.
    filterEnabledDependencies = { dependencies, features, target }:
      assert (builtins.isList dependencies);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);

      lib.filter (dep:
        let targetFunc = dep.target or (features: true);
        in targetFunc { inherit features target; } && (!(dep.optional or false)
          || builtins.any (doesFeatureEnableDependency dep) features))
      dependencies;

    # Returns whether the given feature should enable the given dependency.
    doesFeatureEnableDependency = { name, rename ? null, ... }:
      feature:
      let
        prefix = "${name}/";
        len = builtins.stringLength prefix;
        startsWithPrefix = builtins.substring 0 len feature == prefix;
      in (rename == null && feature == name)
      || (rename != null && rename == feature) || startsWithPrefix;

    /* Returns the expanded features for the given inputFeatures by applying the
       rules in featureMap.

       featureMap is an attribute set which maps feature names to lists of further
       feature names to enable in case this feature is selected.
    */
    expandFeatures = featureMap: inputFeatures:
      assert (builtins.isAttrs featureMap);
      assert (builtins.isList inputFeatures);
      let
        expandFeature = feature:
          assert (builtins.isString feature);
          [ feature ]
          ++ (expandFeatures featureMap (featureMap."${feature}" or [ ]));
        outFeatures = lib.concatMap expandFeature inputFeatures;
      in sortedUnique outFeatures;

    /* Returns the actual features for the given dependency.

       features: The features of the crate that refers this dependency.
    */
    dependencyFeatures = features: dependency:
      assert (builtins.isList features);
      assert (builtins.isAttrs dependency);
      let
        defaultOrNil =
          if dependency.usesDefaultFeatures or true then [ "default" ] else [ ];
        explicitFeatures = dependency.features or [ ];
        additionalDependencyFeatures = let
          dependencyPrefix = (dependency.rename or dependency.name) + "/";
          dependencyFeatures =
            builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
        in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
      in defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

    # Sorts and removes duplicates from a list of strings.
    sortedUnique = features:
      assert (builtins.isList features);
      assert (builtins.all builtins.isString features);
      let
        outFeaturesSet =
          lib.foldl (set: feature: set // { "${feature}" = 1; }) { } features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
      in builtins.sort (a: b: a < b) outFeaturesUnique;

    deprecationWarning = message: value:
      if strictDeprecation then
        builtins.throw "strictDeprecation enabled, aborting: ${message}"
      else
        builtins.trace message value;

    #
    # crate2nix/default.nix (excerpt end)
    #

  };
}
